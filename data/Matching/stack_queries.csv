Question,StackOverflow Answer Code,StackOverflow Answer Comment,GitHub Code 1,GitHub Comment 1,GitHub Code 2,GitHub Comment 2,GitHub Code 3,GitHub Comment 3
Close/hide the Android Soft Keyboard,"View view = this.getCurrentFocus();
if (view != null) {   InputMethodManager imm = (InputMethodManager)getSystemService(Context.INPUT_METHOD_SERVICE);  imm.hideSoftInputFromWindow(view.getWindowToken(), 0);}",Check if no view has focus,"    private void HideSoftKeyboard(){
        View view = this.getCurrentFocus();
        InputMethodManager imm = (InputMethodManager)getSystemService(Context.INPUT_METHOD_SERVICE);
        imm.hideSoftInputFromWindow(view.getWindowToken(), 0);
    }
",," private void hideKeyboard() {
  View view = this.getCurrentFocus();
  if (view != null) {
   InputMethodManager imm = (InputMethodManager) getSystemService(Context.INPUT_METHOD_SERVICE);
   imm.hideSoftInputFromWindow(view.getWindowToken(), 0);
  }
 }
",,,
How to get the build/version number of your Android application?,"try {
  PackageInfo pInfo = this.getPackageManager().getPackageInfo(getPackageName(), 0);
  String version = pInfo.versionName;
} catch (PackageManager.NameNotFoundException e) {
  e.printStackTrace();
}",,"    public String getVersion(){
        try {
            PackageInfo pInfo = this.getPackageManager().getPackageInfo(getPackageName(), 0);
            String version = pInfo.versionName;
            return version;
        } catch (PackageManager.NameNotFoundException e) {
            e.printStackTrace();
            return ""VersÃ£o relase"";
        }
    }
",,"    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_info);

        TextView t = (TextView)findViewById(R.id.versionTextView);
        String version;
        try {
            PackageInfo pInfo = this.getPackageManager().getPackageInfo(getPackageName(), 0);
            version = pInfo.versionName;
        } catch (PackageManager.NameNotFoundException e) {
            e.printStackTrace();
            version = ""0.0.0"";
        }

        t.setText(""Version: "" + version);
    }
",,"    protected void showAboutPopup()
    {
        String version = ""?"";

        try
        {
            PackageInfo pInfo = this.getPackageManager().getPackageInfo(getPackageName(), 0);
            version = pInfo.versionName;
        }
        catch (PackageManager.NameNotFoundException e)
        {
        }

        String message = ""A software platform for building smart sensor networks and the Internet of Things\n\n"";
        message += ""Version: "" + version + ""\n"";

        AlertDialog.Builder alert = new AlertDialog.Builder(this);
        alert.setTitle(""OpenSensorHub"");
        alert.setMessage(message);
        alert.setIcon(R.drawable.ic_launcher);
        alert.show();
    }
",
Sending an Intent to browser to open specific URL,"String url = ""http:Intent i = new Intent(Intent.ACTION_VIEW);
i.setData(Uri.parse(url));
startActivity(i);",wwwexamplecom,"    private void open(String content) {
        Intent intent = new Intent(Intent.ACTION_VIEW);
        intent.setData(Uri.parse(content));
        startActivity(intent);
    }
",,"    public void onBotClicked(View view) {
        Intent telegram = new Intent(Intent.ACTION_VIEW);
        telegram.setData(Uri.parse(""https:        startActivity(telegram);
    }
",tmemazakjctbot,"    public void openMovieWebsite(String url) {
        Intent browserIntent = new Intent(Intent.ACTION_VIEW);
        browserIntent.setData(Uri.parse(url));
        startActivity(browserIntent);
    }
",
How to check internet access on Android? InetAddress never times out,"public boolean isOnline() {
  ConnectivityManager cm =
    (ConnectivityManager) getSystemService(Context.CONNECTIVITY_SERVICE);
  NetworkInfo netInfo = cm.getActiveNetworkInfo();
  return netInfo != null && netInfo.isConnectedOrConnecting();
}",,"    public boolean isConnectedToWifi() {
        ConnectivityManager cm = (ConnectivityManager) getSystemService(Context.CONNECTIVITY_SERVICE);
        NetworkInfo activeNetwork = cm.getActiveNetworkInfo();
        return activeNetwork != null && activeNetwork.getType() == ConnectivityManager.TYPE_WIFI && activeNetwork.isConnectedOrConnecting();
    }
",,"    public boolean isOnline(){
        ConnectivityManager cm =(ConnectivityManager) getSystemService(Context.CONNECTIVITY_SERVICE);
        NetworkInfo networkInfo = cm.getActiveNetworkInfo();
        return networkInfo != null && networkInfo.isConnectedOrConnecting();
    }
",,"    private boolean isConnected(){
        ConnectivityManager cm = (ConnectivityManager) getSystemService(Context.CONNECTIVITY_SERVICE);
        NetworkInfo activeNetwork = cm.getActiveNetworkInfo();
        return activeNetwork != null && activeNetwork.isConnectedOrConnecting();
    }
",
Retrieving Android API version programmatically,"if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.LOLLIPOP){
    } else{
    }",Do something for lollipop and above versions   do something for phones running an SDK before lollipop,"  synchronized void onActivity() {
    cancel();
    inactivityTask = new InactivityAsyncTask();
    if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.HONEYCOMB) inactivityTask.executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR);    else inactivityTask.execute();      }
",by rafik,"    public static Locale getLocaleAtual() {
        if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.N)
            return Resources.getSystem().getConfiguration().getLocales().get(0);
        else
            return Resources.getSystem().getConfiguration().locale;
    }
",,"    private void endTransaction(SQLiteDatabase db, boolean success) {
        if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.HONEYCOMB)
            db.endTransaction();
        else
            db.execSQL(success ? ""COMMIT"" : ""ROLLBACK"");
    }
",
How do I restart an Android Activity,"Intent intent = getIntent();
finish();
startActivity(intent);",,"    public void restartIntent(){
        Intent intent = this.getIntent();
        finish();
        startActivity(intent);
    }
",,"    public void restart() {
        Intent intent = getIntent();
        finish();
        startActivity(intent);
    }
",,"    private void restartActivity() {
        Intent intent = getIntent();
        finish();
        startActivity(intent);
    }
",
"How to determine device screen size category (small, normal, large, xlarge) using code?","if ((getResources().getConfiguration().screenLayout & 
  Configuration.SCREENLAYOUT_SIZE_MASK) == 
    Configuration.SCREENLAYOUT_SIZE_LARGE) {
  
}",on a large screen device,,,"    public static boolean isTablet(Context con) {
        boolean xlarge = ((con.getResources().getConfiguration().screenLayout & Configuration.SCREENLAYOUT_SIZE_MASK) == 4);
        boolean large = ((con.getResources().getConfiguration().screenLayout & Configuration.SCREENLAYOUT_SIZE_MASK) == Configuration.SCREENLAYOUT_SIZE_LARGE);
        return xlarge || large;
    }
",," public static boolean isTablet(Context context) {
     boolean xlarge = ((context.getResources().getConfiguration().screenLayout & Configuration.SCREENLAYOUT_SIZE_MASK) == 4);
     boolean large = ((context.getResources().getConfiguration().screenLayout & Configuration.SCREENLAYOUT_SIZE_MASK) == Configuration.SCREENLAYOUT_SIZE_LARGE);
     return (xlarge || large);
 }
",
How to get a list of installed android applications and pick one to run,"Intent mainIntent = new Intent(Intent.ACTION_MAIN, null);
mainIntent.addCategory(Intent.CATEGORY_LAUNCHER);
List<ResolveInfo> pkgAppsList = context.getPackageManager().queryIntentActivities( mainIntent, 0);",,"    public int getCount() {
        Intent intent = new Intent(Intent.ACTION_MAIN, null).addCategory(Intent.CATEGORY_LAUNCHER);
        List<ResolveInfo> apps = cont.getPackageManager().queryIntentActivities(intent, 0);

        return apps.size() / 24 + 1;
    }
",,"    private List<String> getListInstalledPackages() {
        Intent mainIntent = new Intent(Intent.ACTION_MAIN, null);
        mainIntent.addCategory(Intent.CATEGORY_LAUNCHER);
        List<ResolveInfo> pkgAppsList = mContext.getPackageManager().queryIntentActivities( mainIntent, 0);
        List<String> result = new ArrayList<>();
        for (ResolveInfo info : pkgAppsList) {
            result.add(info.activityInfo.packageName);
        }
        return result;
    }
",,"    private List<String> getListInstalledPackages() {
        Intent mainIntent = new Intent(Intent.ACTION_MAIN, null);
        mainIntent.addCategory(Intent.CATEGORY_LAUNCHER);
        List<ResolveInfo> pkgAppsList = mContext.getPackageManager().queryIntentActivities( mainIntent, 0);
        List<String> result = new ArrayList<>();
        for (ResolveInfo info : pkgAppsList) {
            result.add(info.activityInfo.packageName);
        }
        return result;
    }
",
Height of status bar in Android,"public int getStatusBarHeight() {
    int result = 0;
    int resourceId = getResources().getIdentifier(""status_bar_height"", ""dimen"", ""android"");
    if (resourceId > 0) {
        result = getResources().getDimensionPixelSize(resourceId);
    }
    return result;
}",,"    private int getStatusBarHeight() {
        final int statusBarRes = getResources().getIdentifier(""status_bar_height"", ""dimen"", ""android"");
        return statusBarRes > 0 ? getResources().getDimensionPixelSize(statusBarRes) : 0;
    }
",,"    public int getStatusBarHeight() {
        int resId = getResources().getIdentifier(""status_bar_height"", ""dimen"", ""android"");
        return resId > 0 ? getResources().getDimensionPixelSize(resId) : (int) Math.ceil((double) (25.0F * getResources().getDisplayMetrics().density));
    }
",,"  private int getStatusBarHeight() {
    final Resources res = getResources();
    final int resourceId = res.getIdentifier(""status_bar_height"", ""dimen"", ""android"");
    return (resourceId > 0) ? getResources().getDimensionPixelSize(resourceId) : 0;
  }
",
How to make a phone call using intent in Android?,"Intent intent = new Intent(Intent.ACTION_CALL, Uri.parse(""tel:"" + ""Your Phone_number""));
startActivity(intent);",,"    private void callNumber() {
        Intent intent = new Intent(Intent.ACTION_CALL, Uri.parse(""tel:"" + blockedSMS.getBlockedNumber()));
        startActivity(intent);
    }
",,"    private void callNumber() {
        Intent intent = new Intent(Intent.ACTION_CALL, Uri.parse(""tel:"" + blockedCallSMSNumber.getBlockedNumber()));
        startActivity(intent);
    }
",,"    private void callNumber() {
        Intent intent = new Intent(Intent.ACTION_CALL, Uri.parse(""tel:"" + blockedCalls.getBlockedNumber()));
        startActivity(intent);
    }
",
What is the size of ActionBar in pixels?,"final TypedArray styledAttributes = getContext().getTheme().obtainStyledAttributes(
                    new int[] { android.R.attr.actionBarSize });
mActionBarSize = (int) styledAttributes.getDimension(0, 0);
styledAttributes.recycle();",,"    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        mPageNumber = getArguments().getInt(ARG_PAGE);
        mPageDescription = getArguments().getString(ARG_PAGE_DESCRIPTION);
        mPageTitle = getArguments().getString(ARG_PAGE_TITLE);
        mPageImage = getArguments().getString(ARG_PAGE_IMAGE);

        final TypedArray styledAttributes = getContext().getTheme().obtainStyledAttributes(
                new int[]{android.R.attr.actionBarSize});
        mActionBarHeight = styledAttributes.getDimension(0, 0);
        styledAttributes.recycle();
        mActionBar = ((AppCompatActivity) getActivity()).getSupportActionBar();
    }
",,"    public int getToolBarHeight() {

        final TypedArray styledAttributes = getContext().getTheme().obtainStyledAttributes(
                new int[]{android.R.attr.actionBarSize});
        int toolBarHeight = (int) styledAttributes.getDimension(0, 0);
        styledAttributes.recycle();
        return toolBarHeight;
    }
",,"    private void createMenu() {
        int actionBarHeight;
        TypedArray styledAttributes = getContext().getTheme().obtainStyledAttributes(
                new int[]{android.R.attr.actionBarSize});
        actionBarHeight = (int) styledAttributes.getDimension(0, 0);
        styledAttributes.recycle();

        MenuObject close = new MenuObject();
        close.setResource(R.drawable.window_close);

        MenuObject title = new MenuObject(getString(R.string.sort_title));
        title.setResource(R.drawable.format_title);

        MenuObject keys = new MenuObject(getString(R.string.sort_chronologically));
        keys.setResource(R.drawable.sort);

        List<MenuObject> menuObjects = new ArrayList<>();
        menuObjects.add(close);
        menuObjects.add(title);
        menuObjects.add(keys);

        MenuParams menuParams = new MenuParams();
        menuParams.setActionBarSize(actionBarHeight);
        menuParams.setMenuObjects(menuObjects);
        menuParams.setClosableOutside(true);
        menuParams.setFitsSystemWindow(true);
        menuParams.setClipToPadding(false);
        menuParams.setAnimationDuration(50);

        frg = ContextMenuDialogFragment.newInstance(menuParams);
        frg.setItemClickListener(new OnMenuItemClickListener() {
            @Override
            public void onMenuItemClick(View clickedView, int position) {
                switch (position) {
                    case 0:
                                                break;
                    case 1:
                        sortTitle(titleSort);
                        break;
                    case 2:
                        resetSort();
                        break;
                }
            }
        });
    }
",Close
Clicking URLs opens default browser,"private class HelloWebViewClient extends WebViewClient {
  @Override
  public boolean shouldOverrideUrlLoading(WebView view, String url) {
    view.loadUrl(url);
    return true;
  }
}",,"    private void disableBrowserPopup() {
        webView.setWebViewClient(new WebViewClient() {
            @Override
            public boolean shouldOverrideUrlLoading(WebView view, String url) {
                view.loadUrl(url);
                return true;
            }
        });
    }
",,"    private void openWebPage() {
        mWebView.loadUrl(mUrl);
        mWebView.setWebViewClient(new WebViewClient() {
            @Override
            public boolean shouldOverrideUrlLoading(WebView view, String url) {
                view.loadUrl(url);
                return true;
            }
        });
    }
",,"    private void init() {
        mWebView.loadUrl(URL);
        mWebView.setWebViewClient(new WebViewClient() {
            @Override
            public boolean shouldOverrideUrlLoading(WebView view, String url) {
                view.loadUrl(url);
                return true;
            }
        });
    }
",
How to exit from the application and show the home screen?,"Intent intent = new Intent(Intent.ACTION_MAIN);
intent.addCategory(Intent.CATEGORY_HOME);
intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
startActivity(intent);",,"    public static void makeAppBackToHome(Context context) {
        Intent intent = new Intent(Intent.ACTION_MAIN);
        intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
        intent.addCategory(Intent.CATEGORY_HOME);
        context.startActivity(intent);
    }
",,"    public void onBackPressed() {
        Intent intent = new Intent(Intent.ACTION_MAIN);
        intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
        intent.addCategory(Intent.CATEGORY_HOME);
        getAppContext().startActivity(intent);
    }
",,"    public void onBackPressed() {
        Intent intent = new Intent(Intent.ACTION_MAIN);
        intent.addCategory(Intent.CATEGORY_HOME);
        intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
        startActivity(intent);
    }
",
"Android: allow portrait and landscape for tablets, but force portrait on phone?","if(getResources().getBoolean(R.bool.portrait_only)){
        setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_PORTRAIT);
    }",,"    protected void onCreate(@Nullable Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        if (getResources().getBoolean(R.bool.portrait_only)) {
            setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_PORTRAIT);
        }
        activityComponent = OFFApplication.getAppComponent().plusActivityComponent(new ActivityModule(this));
        activityComponent.inject(this);
    }
",,"    public void onCreate(@Nullable Bundle savedInstanceState) {
        setTheme(R.style.AppTheme);
        if (getResources().getBoolean(R.bool.portrait_only)) {
            setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_PORTRAIT);
            if (getResources().getConfiguration().orientation == Configuration.ORIENTATION_LANDSCAPE) {
                recreate();
            }
        }
        super.onCreate(savedInstanceState);
    }
",,"    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        if (getResources().getBoolean(R.bool.portrait_only)) {
            setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_PORTRAIT);
        }
        setContentView(R.layout.activity_splash);
        taglines = getResources().getStringArray(R.array.taglines_array);
        tagline.post(changeTagline);

        toast = new LoadToast(this);

        presenter = new SplashPresenter(getSharedPreferences(""prefs"", 0), this);
        presenter.refreshData();
    }
",
Calling startActivity() from outside of an Activity?,"Intent i = new Intent(this, Wakeup.class);
i.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);",,"    public static Intent getShutdownIntent() {
        Intent intent = new Intent(Intent.ACTION_SHUTDOWN);
        return intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
    }
",,"  private void callNumber(Context context, String phoneUrl) {
    Intent dialIntent = new Intent(Intent.ACTION_DIAL, Uri.parse(phoneUrl)).addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
    context.startActivity(dialIntent);
  }
",,"    public static Intent getShutdownIntent() {
        Intent intent = new Intent(Intent.ACTION_SHUTDOWN);
        return intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
    }
",
How to get the ActionBar height?,"TypedValue tv = new TypedValue();
if (getTheme().resolveAttribute(android.R.attr.actionBarSize, tv, true))
{
    actionBarHeight = TypedValue.complexToDimensionPixelSize(tv.data,getResources().getDisplayMetrics());
}",Calculate ActionBar height,"    private void initActionBarHeight() {
        TypedValue tv = new TypedValue();
        if (getActivity().getTheme().resolveAttribute(android.R.attr.actionBarSize, tv, true)) {
            actionBarHeight = TypedValue.complexToDimensionPixelSize(
                    tv.data, getResources().getDisplayMetrics());
        }
    }
",,,,"    public int getActionBarSIze() {
        int result = 0;
        TypedValue tv = new TypedValue();
        if (getTheme().resolveAttribute(android.R.attr.actionBarSize, tv, true)) {
            result = TypedValue.complexToDimensionPixelSize(tv.data, getResources().getDisplayMetrics());
        }
        return result;
    }
",
Android Center text on canvas,"int xPos = (canvas.getWidth() / 2);
 int yPos = (int) ((canvas.getHeight() / 2) - ((textPaint.descent() + textPaint.ascent()) / 2)) ; 
 
 canvas.drawText(""Hello"", xPos, yPos, textPaint);",textPaintdescent  textPaintascent  2 is the distance from the baseline to the center,"    private void drawText(Canvas canvas) {
        if (TextUtils.isEmpty(mContent)) {
            return;
        }
        mPaint.setColor(mContentColor);
        int xPos = (canvas.getWidth() / 2);
        int yPos = (int) ((canvas.getHeight() / 2) - ((mPaint.descent() + mPaint.ascent()) / 2));
                canvas.drawText(mContent, xPos, yPos, mPaint);
    }
",Paintdescent  Paintascent  2 is the distance from the baseline to the center,"    public static Bitmap createCopyrightBitmap(Bitmap original){
        originalForCopyright = original;

        paintInit();
        canvasInit();

        int xPos = (canvas.getWidth() / 2);
        int yPos = (int) ((canvas.getHeight() / 2) - ((paint.descent() + paint.ascent()) / 2)) ;

        canvas.drawText(""@Copyright 2018"", xPos, yPos, paint);

        return copyrightBitmap;
    }
",,"    protected void onDraw(Canvas canvas) {
        super.onDraw(canvas);

                canvas.drawOval(rectB, backgroundPaint);
        int xPos = (canvas.getWidth() / 2);
        int yPos = (int) ((canvas.getHeight() / 2) - ((textPaint.descent() + textPaint.ascent()) / 2));
                canvas.drawText(text, xPos, yPos, textPaint);
        float angle = 360 * progress / max;

                canvas.drawArc(rectF, startAngle, angle, false, foregroundPaint);
    }
",Draw the background circle below progress bar   draw text inside progress bar   draw the progress
SwipeRefreshLayout setRefreshing() not showing indicator initially,"mSwipeRefreshLayout.post(new Runnable() {
  @Override
  public void run() {
    mSwipeRefreshLayout.setRefreshing(true);
  }
});",,"    public void showLoading() {
        mSwipeRefreshLayout.post(new Runnable() {
            @Override public void run() {
                mSwipeRefreshLayout.setRefreshing(true);
            }
        });
    }
",,"    public void showLoading() {
        swipeRefreshLayout.post(new Runnable() {
            @Override
            public void run() {
                swipeRefreshLayout.setRefreshing(true);
            }
        });
    }
",,"    public void showLoading() {
        refreshLayout.post(new Runnable() {
            @Override
            public void run() {
                refreshLayout.setRefreshing(true);
            }
        });
    }
",
Android Reading from an Input stream efficiently,"BufferedReader r = new BufferedReader(new InputStreamReader(inputStream));
StringBuilder total = new StringBuilder();
String line;
while ((line = r.readLine()) != null) {
    total.append(line).append('\n');
}",,"    private void readClassFile(File hotClassListFile) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(new FileInputStream(hotClassListFile)));
        String line = null;
        while ((line = bufferedReader.readLine())!= null){
            hotClassList.add(line);
        }
    }
",,"    private static List<String> readAllLines(InputStream inputStream) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(inputStream));
        List<String> data = new ArrayList<>();
        for (String line; (line = br.readLine()) != null; ) {
            data.add(line);
        }
        return data;
    }
",,"  static void readInputStream(InputStream is, List<String> stringList) throws IOException {
    BufferedReader in = new BufferedReader(new InputStreamReader(is));
    String line;
    while ((line = in.readLine()) != null) {
      stringList.add(line);
    }
    in.close();
  }
",
Call removeView() on the child's parent first,"((ViewGroup)scrollChildLayout.getParent()).removeView(scrollChildLayout);
//scrollView.removeView(scrollChildLayout);",,"    public void destroy(){
        ((ViewGroup) container.getParent()).removeView(container);
    }
",,"    public void onAnimationEnd(Animation animation) {
        ((ViewGroup)view.getParent()).removeView(view);
    }
",,"        private void removeStickyWindow() {
            ((ViewGroup) ScrollerImp.this.getParent()).removeView(mStickView);
        }
",
How to delete a whole folder and content?,"void deleteRecursive(File fileOrDirectory) {
    if (fileOrDirectory.isDirectory())
        for (File child : fileOrDirectory.listFiles())
            deleteRecursive(child);

    fileOrDirectory.delete();
}",," void deleteRecursive(File fileOrDirectory) {
  if (fileOrDirectory.isDirectory())
   for (File child : fileOrDirectory.listFiles())
    deleteRecursive(child);
  fileOrDirectory.delete();
 }
",,"    private void deleteRecursive(File fileOrDirectory) {
        if (fileOrDirectory.isDirectory())
            for (File child : fileOrDirectory.listFiles())
                deleteRecursive(child);
        fileOrDirectory.delete();
    }
",," private static void deleteRecursive(File fileOrDirectory) {
  if (fileOrDirectory.isDirectory())
   for (File child : fileOrDirectory.listFiles())
    deleteRecursive(child);
  fileOrDirectory.delete();
 }
",
How to set text size of textview dynamically for different screens,"textView.setTextSize(TypedValue.COMPLEX_UNIT_PX,
    getResources().getDimension(R.dimen.textsize));",,"    private TextView createTaskTextView(String value) {
        TextView txtWaypoint = new TextView(this);
        txtWaypoint.setEllipsize(TextUtils.TruncateAt.END);
        txtWaypoint.setMaxLines(2);
        txtWaypoint.setTextSize(TypedValue.COMPLEX_UNIT_PX, getResources().getDimension(R.dimen.material_text_subhead));
        txtWaypoint.setText(Html.fromHtml(value));
        return txtWaypoint;
    }
",,"        public RecyclerView.ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
            final RecyclerView.ViewHolder viewHolder = super.onCreateViewHolder(parent, viewType);

            final View view = viewHolder.itemView.findViewById(android.R.id.text1);
            if (view instanceof TextView) {
                ((TextView) view).setTextSize(TypedValue.COMPLEX_UNIT_PX, getResources().getDimension(R.dimen.file_picker_items_text_size));
            }

            return viewHolder;
        }
",,"    private void initializeSocialSentenceView(Context context) {
        socialSentenceView = new TextView(context);
        socialSentenceView.setTextSize(
                TypedValue.COMPLEX_UNIT_PX,
                getResources().getDimension(R.dimen.com_facebook_likeview_text_size));
        socialSentenceView.setMaxLines(2);
        socialSentenceView.setTextColor(foregroundColor);
        socialSentenceView.setGravity(Gravity.CENTER);

        LinearLayout.LayoutParams socialSentenceViewLayout = new LinearLayout.LayoutParams(
                LayoutParams.WRAP_CONTENT,
                LayoutParams.MATCH_PARENT);
        socialSentenceView.setLayoutParams(socialSentenceViewLayout);
    }
",
How do I prevent Android taking a screenshot when my app goes to the background?,"if(android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.HONEYCOMB) {
    getWindow().setFlags(WindowManager.LayoutParams.FLAG_SECURE, WindowManager.LayoutParams.FLAG_SECURE);
}",,"    public static void nbDisableScreenshotFunctionality(Activity activity) {
        activity.getWindow().setFlags(WindowManager.LayoutParams.FLAG_SECURE, WindowManager.LayoutParams.FLAG_SECURE);
    }
",,"  public static Dialog markDialogAsSecure(Dialog dlg) {
    dlg.getWindow().setFlags(WindowManager.LayoutParams.FLAG_SECURE,
      WindowManager.LayoutParams.FLAG_SECURE);

    return(dlg);
  }
",,,
Android get hosting Activity from a view,"private Activity getActivity() {
    Context context = getContext();
    while (context instanceof ContextWrapper) {
        if (context instanceof Activity) {
            return (Activity)context;
        }
        context = ((ContextWrapper)context).getBaseContext();
    }
    return null;
}",,"    public static Activity getActivity(View view) {
        Context context = view.getContext();
        while (context instanceof ContextWrapper) {
            if (context instanceof Activity) {
                return (Activity) context;
            }
            context = ((ContextWrapper) context).getBaseContext();
        }
        return null;
    }
",,"    private Activity getActivity() {
        Context context = getContext();
        while (context instanceof ContextWrapper) {
            if (context instanceof Activity) {
                return (Activity) context;
            }
            context = ((ContextWrapper) context).getBaseContext();
        }
        return null;
    }
",,"    private Activity getActivity() {
        Context context = getContext();
        while (context instanceof ContextWrapper) {
            if (context instanceof Activity) {
                return (Activity) context;
            }
            context = ((ContextWrapper) context).getBaseContext();
        }
        return null;
    }
",
How to add a line break in an Android TextView?,"String s = ""Line 1""
           + System.getProperty (""line.separator"")
           + ""Line 2""
           + System.getProperty (""line.separator"");",,"    public String toString() {
        String sb = ""videoBitrate ="" + videoBitrate + System.getProperty(""line.separator"") +
                ""audioBitrate ="" + audioBitrate + System.getProperty(""line.separator"") +
                ""videoThroughput ="" + videoThroughput + System.getProperty(""line.separator"") +
                ""videoWidth ="" + videoWidth + System.getProperty(""line.separator"") +
                ""videoHeight ="" + videoHeight + System.getProperty(""line.separator"");
        return sb;
    }
",,"    public void log(String sourceTag, String message) {
        Date date = new Date(System.currentTimeMillis());
        SimpleDateFormat formatter =
                new SimpleDateFormat(""MM-dd HH:mm:ss.SSS"", Locale.getDefault());
        String logString = formatter.format(date) + "": "" + sourceTag + "" | "" + message
                + System.getProperty(""line.separator"");
        LogTask logTask = new LogTask();
        Log.d(TAG, logString);
        logTask.executeOnExecutor(AsyncTask.SERIAL_EXECUTOR, logString);
    }
",,"    private void storeLabelsMap(Map<String, Integer> labelsMap) {
        FileOutputStream fos;
        try {
            fos = context.openFileOutput(ClassifierDatabase.LABELS_FILE, Context.MODE_PRIVATE);
            for (Map.Entry<String, Integer> entry : labelsMap.entrySet()) {
                String strLabel = entry.getKey();
                int intLabel = entry.getValue();
                String line = intLabel + "";"" + strLabel + System.getProperty(""line.separator"");
                fos.write(line.getBytes());
            }
            fos.close();
        } catch (java.io.IOException e) {
            e.printStackTrace();
        }
    }
",
Android: ScrollView force to bottom,"scroll.post(new Runnable() {            
    @Override
    public void run() {
           scroll.fullScroll(View.FOCUS_DOWN);              
    }
});",,"    public void fullScrollDown() {
        final ScrollView sv = (ScrollView)findViewById(R.id.scroll);
        sv.post(new Runnable() {            
            @Override
            public void run() {
                sv.fullScroll(View.FOCUS_DOWN);              
            }
        });
    }
",,"    public void update_hist() {
        tv_hist.setText(gameSingleton.getCurrent_game().getGame_hist());
        scrollview_hist.post(new Runnable() {
            @Override
            public void run() {
                scrollview_hist.fullScroll(View.FOCUS_DOWN);
            }
        });
    }
",,"    private void addView(View view) {
        llBaseView.addView(view);
        LAnimationUtil.play(view, Techniques.FadeIn);
        nsv.post(new Runnable() {
            @Override
            public void run() {
                nsv.fullScroll(View.FOCUS_DOWN);
            }
        });
    }
",
Android dismiss keyboard,"InputMethodManager imm = (InputMethodManager)getSystemService(Context.INPUT_METHOD_SERVICE);
imm.hideSoftInputFromWindow(myEditText.getWindowToken(), 0);",,"    public void hideSoftInput(View v) {
        InputMethodManager imm = (InputMethodManager) getSystemService(Context.INPUT_METHOD_SERVICE);
        imm.hideSoftInputFromWindow(v.getWindowToken(), 0);
    }
",,"    private void hideKeyboard() {
        InputMethodManager imm = (InputMethodManager) getSystemService(Context.INPUT_METHOD_SERVICE);
        imm.hideSoftInputFromWindow(getWindow().getDecorView().getWindowToken(), 0);
    }
",,"    private void closeSoftInput() {
        InputMethodManager imm = (InputMethodManager) getSystemService(Context.INPUT_METHOD_SERVICE);
        imm.hideSoftInputFromWindow(drawer.getWindowToken(), InputMethodManager.HIDE_NOT_ALWAYS);
    }
",
Google Maps v2 - set both my location and zoom in,"CameraUpdate center=
    CameraUpdateFactory.newLatLng(new LatLng(40.76793169992044,
                         -73.98180484771729));
  CameraUpdate zoom=CameraUpdateFactory.zoomTo(15);

  map.moveCamera(center);
  map.animateCamera(zoom);",,,,"  public void onMapReady(GoogleMap map) {
    CameraUpdate center=
        CameraUpdateFactory.newLatLng(new LatLng(40.76793169992044,
            -73.98180484771729));
    CameraUpdate zoom=CameraUpdateFactory.zoomTo(15);

    map.moveCamera(center);
    map.animateCamera(zoom);
  }
",,"  public void onMapReady(final GoogleMap map) {
    if (needsInit) {
      CameraUpdate center=
          CameraUpdateFactory.newLatLng(new LatLng(40.76793169992044,
                                                   -73.98180484771729));
      CameraUpdate zoom=CameraUpdateFactory.zoomTo(15);

      map.moveCamera(center);
      map.animateCamera(zoom);
    }

    addMarkers(map);

    map.setInfoWindowAdapter(new PopupAdapter(getLayoutInflater(),
                                              models));
    map.setOnInfoWindowClickListener(this);
  }
",
Prevent ViewPager from destroying off-screen views,"mViewPager = (ViewPager)findViewById(R.id.pager);
mViewPager.setOffscreenPageLimit(2);",,"    private void initViews(){
        pager = (ViewPager) findViewById(R.id.pager);
        pager.setOffscreenPageLimit(2);
        MainPagerAdapter mainAdapter = new MainPagerAdapter(getSupportFragmentManager());
        pager.setAdapter(mainAdapter);
        pager.setCurrentItem(position);
    }
",,"    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        mMoviesGridPagerAdapter = new MoviesGridPagerAdapter(getSupportFragmentManager(), this);
        mViewPager = (ViewPager) findViewById(R.id.pager);
        mViewPager.setOffscreenPageLimit(2);
        mViewPager.setAdapter(mMoviesGridPagerAdapter);

    }
",,"    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        ViewPager pager = (ViewPager) findViewById(R.id.pager);
        pager.setAdapter(new MainActivityPagerAdapter(this, getSupportFragmentManager()));
        pager.setPageMargin((int) getResources().getDimension(R.dimen.card_padding) / 4);
        pager.setOffscreenPageLimit(3);

        CircleIndicator indicator = (CircleIndicator) findViewById(R.id.indicator);
        indicator.setViewPager(pager);

    }
",
How to check an Android device is HDPI screen or MDPI screen?,"density = getResources().getDisplayMetrics().density;

// return 4.0 if it's XXXHDPI",return 075 if its LDPI   return 10 if its MDPI   return 15 if its HDPI   return 20 if its XHDPI   return 30 if its XXHDPI,"    public void setSpeedFast() {
        MILLISECONDS_PER_INCH = context.getResources().getDisplayMetrics().density * 0.03f;
    }
",,"    public static void init(Context context) {
        displayDensity = context.getResources().getDisplayMetrics().density;
    }
",,"    public int dip2px(float dpValue) {
        final float scale = getResources().getDisplayMetrics().density;
        return (int) (dpValue * scale + 0.5f);
    }
",
How to detect UI thread on Android?,"if (Looper.getMainLooper().getThread() == Thread.currentThread()) {
  } else {
  }",On UI thread   Not on UI thread,"    public final void runOnUiThread(Runnable runnable) {
        if (Looper.getMainLooper().getThread() == Thread.currentThread()) {
            runnable.run();
        } else {
            this.mHandler.post(runnable);
        }
    }
",,"    public final void runOnUiThread(Runnable runnable) {
        if (Looper.getMainLooper().getThread() == Thread.currentThread()) {
            runnable.run();
        } else {
            post(runnable);
        }
    }
",,"    public static void isUiThread(String name, int line) {
        if (Looper.getMainLooper().getThread() == Thread.currentThread()) {
            Log.i(""UUU"", name + "" in line : "" + line + "" is UI Thread"");
        } else {
            Log.i(""UUU"", name + "" in line : "" + line + "" is NOT UI Thread"");
        }
    }
",
How to play ringtone/alarm sound in Android,"Uri notification = RingtoneManager.getDefaultUri(RingtoneManager.TYPE_NOTIFICATION);
Ringtone r = RingtoneManager.getRingtone(getApplicationContext(), notification);
r.play();",,"    public void playTone() {
        Uri notification = RingtoneManager.getDefaultUri(RingtoneManager.TYPE_NOTIFICATION);
        Ringtone r = RingtoneManager.getRingtone(getApplicationContext(), notification);
        r.play();
    }
",,"    public void alarm() {
        Uri notification = RingtoneManager.getDefaultUri(RingtoneManager.TYPE_NOTIFICATION);
        Ringtone r = RingtoneManager.getRingtone(getApplicationContext(), notification);
        r.play();
        Vibrator vibrator = (Vibrator) getSystemService(VIBRATOR_SERVICE);
        if (vibrator != null)
            vibrator.vibrate(400);
    }
",,,
How to show marker in Maps launched by geo uri Intent?,"Intent intent = new Intent(Intent.ACTION_VIEW, Uri.parse(""geo:<lat>,<long>?q=<lat>,<long>(Label+Name)""));
startActivity(intent);",,"    public void onExternalPageRequest(String url) {
        Intent browserIntent = new Intent(Intent.ACTION_VIEW, Uri.parse(url));
        startActivity(browserIntent);
    }
",,"    private void openGithubPage() {
        Intent browserIntent = new Intent(Intent.ACTION_VIEW, Uri.parse(""http:        context.startActivity(browserIntent);
    }
",wwwgithubcomvarunest,"    public static void openURL(String url, Context context) {
        Intent i = new Intent(Intent.ACTION_VIEW, Uri.parse(url));
        context.startActivity(i);
    }
",
How to remove auto focus/keyboard popup of a field when the screen shows up?,"InputMethodManager imm = (InputMethodManager)getSystemService(Context.INPUT_METHOD_SERVICE);
imm.hideSoftInputFromWindow(editTextField.getWindowToken(), 0);",,"    public void hideSoftInput(View v) {
        InputMethodManager imm = (InputMethodManager) getSystemService(Context.INPUT_METHOD_SERVICE);
        imm.hideSoftInputFromWindow(v.getWindowToken(), 0);
    }
",,"    private void hideKeyboard() {
        InputMethodManager imm = (InputMethodManager) getSystemService(Context.INPUT_METHOD_SERVICE);
        imm.hideSoftInputFromWindow(getWindow().getDecorView().getWindowToken(), 0);
    }
",,"    private void closeSoftInput() {
        InputMethodManager imm = (InputMethodManager) getSystemService(Context.INPUT_METHOD_SERVICE);
        imm.hideSoftInputFromWindow(drawer.getWindowToken(), InputMethodManager.HIDE_NOT_ALWAYS);
    }
",
Disable ScrollView Programmatically?,"scrollView.setOnTouchListener(new View.OnTouchListener() {

    @Override
    public boolean onTouch(View v, MotionEvent event) {
            return isBlockedScrollView;
    }
  });",TODO Autogenerated method stub,"    protected void blockTouch() {
        mLayoutView.setOnTouchListener(new View.OnTouchListener() {
            @Override
            public boolean onTouch(View v, MotionEvent rawEvent) {
                return true;
            }
        });
    }
",,"    protected void blockTouch(){
        mLayoutView.setOnTouchListener(new View.OnTouchListener() {
            @Override
            public boolean onTouch(View v, MotionEvent rawEvent) {
                return true;
            }
        });
    }
",,"    protected void blockTouch(){
        mLayoutView.setOnTouchListener(new View.OnTouchListener() {
            @Override
            public boolean onTouch(View v, MotionEvent rawEvent) {
                return true;
            }
        });
    }
",
Android: How to rotate a bitmap on a center point,"public static Bitmap RotateBitmap(Bitmap source, float angle)
{
   Matrix matrix = new Matrix();
   matrix.postRotate(angle);
   return Bitmap.createBitmap(source, 0, 0, source.getWidth(), source.getHeight(), matrix, true);
}",," public Bitmap rotateBitmap(Bitmap source, float angle) {
  Matrix matrix = new Matrix();
  matrix.postRotate(angle);
  return Bitmap.createBitmap(source, 0, 0, source.getWidth(), source.getHeight(), matrix, true);
 }
",," public static Bitmap rotate(Bitmap bitmap, float angle){
  Matrix matrix = new Matrix();
  matrix.postRotate(angle);
  return Bitmap.createBitmap(bitmap, 0, 0, bitmap.getWidth(), bitmap.getHeight(), matrix, false);
 }
",," public static Bitmap rotate(Bitmap bitmap, float angle, float px, float py){
  Matrix matrix = new Matrix();
  matrix.postRotate(angle, px, py);
  return Bitmap.createBitmap(bitmap, 0, 0, bitmap.getWidth(), bitmap.getHeight(), matrix, false);
 }
",
How can one detect airplane mode on Android?,"
private static boolean isAirplaneModeOn(Context context) {

   return Settings.System.getInt(context.getContentResolver(),
           Settings.System.AIRPLANE_MODE_ON, 0) != 0;

}",Gets the state of Airplane Mode    param context  return true if enabled,"    public static boolean isAirplaneModeOn(Context context) {
        return Settings.System.getInt(context.getContentResolver(), Settings.System.AIRPLANE_MODE_ON, 0) != 0;
    }
",,"    public static boolean isAirplaneModeOn(Context context) {
        return Settings.System.getInt(context.getContentResolver(),
                Settings.System.AIRPLANE_MODE_ON, 0) != 0;
    }
",," public static boolean isAirplaneModeOn(Context context) {
  return Settings.System.getInt(context.getContentResolver(),
    Settings.System.AIRPLANE_MODE_ON, 0) != 0;
 }
",
Android backup/restore: how to backup an internal database?,"FileBackupHelper hosts = new FileBackupHelper(this,
    ""../databases/"" + HostDatabase.DB_NAME);
addHelper(HostDatabase.DB_NAME, hosts);",," public void onCreate() {
  Log.d(""ConnectBot.BackupAgent"", ""onCreate called"");

  SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(this);

  SharedPreferencesBackupHelper prefsHelper = new SharedPreferencesBackupHelper(this, getPackageName() + ""_preferences"");
  addHelper(PreferenceConstants.BACKUP_PREF_KEY, prefsHelper);

  FileBackupHelper hosts = new FileBackupHelper(this, ""../databases/"" + HostDatabase.DB_NAME);
  addHelper(HostDatabase.DB_NAME, hosts);

  if (prefs.getBoolean(PreferenceConstants.BACKUP_KEYS, PreferenceConstants.BACKUP_KEYS_DEFAULT)) {
   FileBackupHelper pubkeys = new FileBackupHelper(this, ""../databases/"" + PubkeyDatabase.DB_NAME);
   addHelper(PubkeyDatabase.DB_NAME, pubkeys);
  }
 }
",," public void onCreate() {
  FileBackupHelper helper = new FileBackupHelper(this, ""../databases/""
    + Database.DATABASE_NAME);
          addHelper(DATABASE_BACKUP_KEY, helper);
 }
",TODO This is ugly   1 FileBackupHelper is not intended to handle big files   2 The databases is ugly   3 Its not at all threadsafe,"    public void onCreate() {
        FileBackupHelper hosts = new FileBackupHelper(this,
                ""../databases/"" + NOTELOCKERDB);
        addHelper(DB_BACKUP_KEY, hosts);

        SharedPreferencesBackupHelper helper =
                new SharedPreferencesBackupHelper(this, PREFS);
        addHelper(PREFS_BACKUP_KEY, helper);
    }
",
How to handle Back button with in the dialog?,"dialog.setOnCancelListener(new DialogInterface.OnCancelListener() {     
  @Override
  public void onCancel(DialogInterface dialog) {
      }
});",do whatever you want the back key to do,"    private AlertDialog.Builder addOnCancelListener(final AlertDialog.Builder builder, final Activity activity) {
        return builder.setOnCancelListener(new DialogInterface.OnCancelListener() {
            @Override
            public void onCancel(DialogInterface dialog) {
                mResultMap.put(""canceled"", true);
                setResult();
            }
        });
    }
",,"        protected void onPreExecute() {
            super.onPreExecute();
            mProgressDialog = ProgressDialog.show(getActivity(), null, getString(R.string.server_match_progress));
            mProgressDialog.setCancelable(true);
            mProgressDialog.setCanceledOnTouchOutside(true);
            mProgressDialog.setOnCancelListener(new DialogInterface.OnCancelListener() {
                @Override
                public void onCancel(DialogInterface dialog) {
                    cancel(true);
                }
            });
        }
",,"    protected void showProgressDialog(String msg) {
        progressDialog.setMessage(msg);
        progressDialog.setProgressStyle(ProgressDialog.STYLE_SPINNER);
        progressDialog.setCancelable(true);
        progressDialog.setOnCancelListener(new DialogInterface.OnCancelListener() {
            @Override
            public void onCancel(DialogInterface dialogInterface) {
                            }
        });
        progressDialog.show();
    }
",TODO 2016821 dialog
Programmatically relaunch/recreate an activity?,"Intent intent = getIntent();
finish();
startActivity(intent);",,"    public void restartIntent(){
        Intent intent = this.getIntent();
        finish();
        startActivity(intent);
    }
",,"    public void restart() {
        Intent intent = getIntent();
        finish();
        startActivity(intent);
    }
",,"    private void restartActivity() {
        Intent intent = getIntent();
        finish();
        startActivity(intent);
    }
",
Android: Cloning a drawable in order to make a StateListDrawable with filters,Drawable clone = drawable.getConstantState().newDrawable();,,"    private Drawable changeDrawableColor(Drawable myFabSrc, int textColor) {
                        Drawable willBeWhite = myFabSrc.getConstantState().newDrawable();
                willBeWhite.mutate().setColorFilter(textColor, PorterDuff.Mode.MULTIPLY);
        return willBeWhite;
    }
",get the drawable  copy it in a new one  set the color filter you can use also ModeSRCATOP,"    public static Bitmap getColoredBitmap(Context context, int baseDrawableResId) {
        Drawable baseDrawable = ContextCompat.getDrawable(context, baseDrawableResId).getConstantState().newDrawable();
        ColorFilter highlightColorFilter = new LightingColorFilter(Aesthetic.get(context).colorPrimary().blockingFirst(), 0);
        baseDrawable.mutate().setColorFilter(highlightColorFilter);

        Bitmap bitmap = Bitmap.createBitmap(baseDrawable.getIntrinsicWidth(), baseDrawable.getIntrinsicHeight(), Bitmap.Config.ARGB_8888);
        Canvas canvas = new Canvas(bitmap);
        baseDrawable.setBounds(0, 0, canvas.getWidth(), canvas.getHeight());
        baseDrawable.draw(canvas);
        return bitmap;
    }
",,"    public static Bitmap getBlackBitmap(Context context, int baseDrawableResId) {
        Drawable baseDrawable = ContextCompat.getDrawable(context, baseDrawableResId).getConstantState().newDrawable();
        ColorFilter colorFilter = new LightingColorFilter(ContextCompat.getColor(context, R.color.black), 0);
        baseDrawable.mutate().setColorFilter(colorFilter);

        Bitmap bitmap = Bitmap.createBitmap(baseDrawable.getIntrinsicWidth(), baseDrawable.getIntrinsicHeight(), Bitmap.Config.ARGB_8888);
        Canvas canvas = new Canvas(bitmap);
        baseDrawable.setBounds(0, 0, canvas.getWidth(), canvas.getHeight());
        baseDrawable.draw(canvas);
        return bitmap;
    }
",
End animation event android,"anim.setAnimationListener(new Animation.AnimationListener(){
    @Override
    public void onAnimationStart(Animation arg0) {
    }           
    @Override
    public void onAnimationRepeat(Animation arg0) {
    }           
    @Override
    public void onAnimationEnd(Animation arg0) {
    }
});",,"  protected void hideMenu() {
    Animation popupAnim = AnimationUtils.loadAnimation(this, R.anim.popup_flyout_hide);
    shadowLayout.startAnimation(popupAnim);
    popupAnim.setAnimationListener(new Animation.AnimationListener() {
      @Override public void onAnimationStart(Animation animation) {
      }

      @Override public void onAnimationEnd(Animation animation) {
        menuLayout.setVisibility(View.GONE);
      }

      @Override public void onAnimationRepeat(Animation animation) {
      }
    });
  }
",,"  private Animation createSlideDownAnimation() {
    Animation result = AnimationUtils.loadAnimation(getContext(), R.anim.slide_down);
    result.setAnimationListener(new Animation.AnimationListener() {
      @Override public void onAnimationStart(Animation animation) {
      }

      @Override public void onAnimationEnd(Animation animation) {
      }

      @Override public void onAnimationRepeat(Animation animation) {

      }
    });
    return result;
  }
",,"    public void character1RightAnimation(){
        imgCharacter1.startAnimation(animationRight);
        animationRight.setAnimationListener(new Animation.AnimationListener() {
            @Override
            public void onAnimationStart(Animation animation) {
            }

            @Override
            public void onAnimationEnd(Animation animation) {
                character2LeftAnimation();
            }

            @Override
            public void onAnimationRepeat(Animation animation) { }
        });
    }
",
Going to home screen programmatically,"Intent startMain = new Intent(Intent.ACTION_MAIN);
startMain.addCategory(Intent.CATEGORY_HOME);
startMain.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
startActivity(startMain);",,"    public static void makeAppBackToHome(Context context) {
        Intent intent = new Intent(Intent.ACTION_MAIN);
        intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
        intent.addCategory(Intent.CATEGORY_HOME);
        context.startActivity(intent);
    }
",,"    public void onBackPressed() {
        Intent intent = new Intent(Intent.ACTION_MAIN);
        intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
        intent.addCategory(Intent.CATEGORY_HOME);
        getAppContext().startActivity(intent);
    }
",,"    public void onBackPressed() {
        Intent intent = new Intent(Intent.ACTION_MAIN);
        intent.addCategory(Intent.CATEGORY_HOME);
        intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
        startActivity(intent);
    }
",
"How to hide ""Navigation"" and ""GPS Pointer"" buttons when I click the marker on the android google map",mMap.getUiSettings().setMapToolbarEnabled(false);,Disable Map Toolbar,"    private void setupMapLayout(GoogleMap map) {
        map.getUiSettings().setMapToolbarEnabled(false);
        int width = getResources().getDisplayMetrics().widthPixels;
        int height = getResources().getDisplayMetrics().heightPixels-300;
        int padding = (int) (width * 0.1);
        map.moveCamera(CameraUpdateFactory.newLatLngBounds(calculateBounds(), width, height, padding));
    }
",,"    private void initMap() {
        map.getUiSettings().setZoomControlsEnabled(true);
        map.getUiSettings().setMapToolbarEnabled(false);
        map.getUiSettings().setRotateGesturesEnabled(false);
        CameraPosition position = new CameraPosition(TAIWAN, 7, 0, 0);
        map.moveCamera(CameraUpdateFactory.newCameraPosition(position));
    }
",,,
SoftKeyboard open and close listener in an activity in Android?,"yourEditText.setOnFocusChangeListener(new OnFocusChangeListener() {
@Override
public void onFocusChange(View v, boolean hasFocus) {
    if (hasFocus) {
          } else {
          }
  }
});",got focus  lost focus,"    private void createEditTextAndTriangleViewFocusInteraction(EditText etView, final TriangleView tView) {
        etView.setOnFocusChangeListener(new View.OnFocusChangeListener() {
            @Override
            public void onFocusChange(View view, boolean b) {
                tView.setVisibility(b ? View.VISIBLE : View.INVISIBLE);
            }
        });
    }
",,"    public void setToolbarDataProvider(ToolbarDataProvider toolbarDataProvider) {
        mToolbarDataProvider = toolbarDataProvider;

        mUrlBar.setOnFocusChangeListener(new View.OnFocusChangeListener() {
            @Override
            public void onFocusChange(View v, final boolean hasFocus) {
                onUrlFocusChange(hasFocus);
            }
        });
    }
",,"    private void enableKeyboardHidingOnEditText(EditText editText) {
        editText.setOnFocusChangeListener(new View.OnFocusChangeListener() {
            @Override
            public void onFocusChange(View v, boolean hasFocus) {
                if (!hasFocus) {
                    hideKeyboard(v);
                }
            }
        });
    }
",
Unable to create converter for my class in Android Retrofit library,"Retrofit retrofit = new Retrofit.Builder()
    .baseUrl(""**sample base url here**"")
    .addConverterFactory(GsonConverterFactory.create())
    .build();",,"    public Retrofit provideRetrofitCommenry(OkHttpClient okHttpClient) {
        Retrofit build = new Retrofit.Builder().client(okHttpClient).addConverterFactory(GsonConverterFactory.create()).baseUrl(BaseConstants.BASE_COMMENTRY_URL).build();
        return build;
    }
",,"    public Retrofit provideRetrofitCdn(OkHttpClient okHttpClient) {
        Retrofit build = new Retrofit.Builder().client(okHttpClient).addConverterFactory(GsonConverterFactory.create()).baseUrl(IPLUrls.BASE_URL).build();
        return build;
    }
",,"    private void setupService() {
        Gson gson = new GsonBuilder().setLenient().create();
        Retrofit retrofit = new Retrofit.Builder().baseUrl(HttpService.BASE_URL).addConverterFactory(GsonConverterFactory.create(gson)).build();
        service = retrofit.create(HttpService.class);
    }
",
RecyclerView blinking after notifyDatasetChanged(),"ItemAnimator animator = recyclerView.getItemAnimator();
if (animator instanceof SimpleItemAnimator) {
  ((SimpleItemAnimator) animator).setSupportsChangeAnimations(false);
}",,"    private void muteAnimation() {
        rv.getItemAnimator().setChangeDuration(0);
        ((DefaultItemAnimator) rv.getItemAnimator()).setSupportsChangeAnimations(false);
    }
",,"    public void clearRvAnim(RecyclerView rv) {
        if (rv == null)
            return;
        RecyclerView.ItemAnimator animator = rv.getItemAnimator();
        if (animator instanceof DefaultItemAnimator) {
            ((DefaultItemAnimator) animator).setSupportsChangeAnimations(false);
        }
        rv.getItemAnimator().setChangeDuration(333);
        rv.getItemAnimator().setMoveDuration(333);
    }
",,"    public View onCreateView(LayoutInflater inflater, ViewGroup container,
                             Bundle savedInstanceState) {
        View view = inflater.inflate(R.layout.alarm_fragment_layout, container, false);

        RecyclerView recyclerView = (RecyclerView) view.findViewById(R.id.alarm_recycler);
        recyclerView.setLayoutManager(new LinearLayoutManager(getActivity()));
        recyclerView.setAdapter(new AlarmRecyclerAdapter(getActivity()));
        recyclerView.getItemAnimator().setSupportsChangeAnimations(true);
        Drawable drawable = getResources().getDrawable(R.mipmap.abc_list_longpressed_holo);
        recyclerView.addItemDecoration(new LinkItemDecoration(drawable, getActivity()));

        return view;
    }
",LinearLayoutManager layoutManager  new LinearLayoutManagergetActivity          layoutManagersetOrientationLinearLayoutManagerHORIZONTAL
Android: checkbox listener,"satView.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {

    @Override
    public void onCheckedChanged(CompoundButton buttonView,boolean isChecked) {

    }
  }
);",,"    private void configureAdultCheckBox() {
        mAdultCheckBox.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
            @Override
            public void onCheckedChanged(CompoundButton compoundButton, boolean b) {
                mFilterValuesDTO.setIncludeAdult(b);
            }
        });
    }
",,"    private void setSaveEegAndEyeBlinkingDataCheckedListener() {
        activity.getCbSaveEegAndEyeBlinkingData().setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
            @Override
            public void onCheckedChanged(CompoundButton compoundButton, boolean checked) {
                settingsSharedPreferences.put(SettingsSharedPreferences.saveEegAndEyeBlinkingData, checked);
            }
        });
    }
",,"    private void setKeepScreenTurnedOnCheckedListener() {
        activity.getCbKeepScreenTurnedOn().setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
            @Override
            public void onCheckedChanged(CompoundButton compoundButton, boolean checked) {
                settingsSharedPreferences.put(SettingsSharedPreferences.keepScreenTurnedOn, checked);
            }
        });
    }
",
How to hide the soft keyboard from inside a fragment?,"getActivity().getWindow().setSoftInputMode(
            WindowManager.LayoutParams.SOFT_INPUT_STATE_ALWAYS_HIDDEN);",,"    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setHasOptionsMenu(true);
        getActivity().getWindow().setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_STATE_ALWAYS_HIDDEN);
    }
",,"    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        backUpFile = PayloadUtil.getInstance(getActivity()).getBackupFile();
        getActivity().getWindow().setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_STATE_ALWAYS_HIDDEN);
    }
",,"    public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {
        super.onViewCreated(view, savedInstanceState);
        if (getActivity() != null && getActivity().getWindow() != null) {
            getActivity().getWindow().setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_STATE_ALWAYS_HIDDEN);
        }
    }
",
Back button and refreshing previous activity,"@Override
public void onRestart() { 
    super.onRestart();
        }",When BACK BUTTON is pressed the activity on the stack is restarted  Do what you want on the refresh procedure here,"    public void onRestart() {super.onRestart(); jstodownload.clear(); DetIcons.init();}
",,,,"  protected void onRestart() {
    super.onRestart();
  }
",
Opening Android Settings programmatically,"startActivityForResult(new Intent(android.provider.Settings.ACTION_SETTINGS), 0);",,"    public static void openSettings(Activity activity){
        activity.startActivityForResult(new Intent(android.provider.Settings.ACTION_SETTINGS), 0);
    }
",,"    private void showErrorDialog() {
        dialog = new AlertDialog.Builder(this)
                .setTitle(getString(R.string.no_internet))
                .setMessage(getString(R.string.washout_internet))
                .setCancelable(false)
                .setNeutralButton(getString(R.string.go_to_settings), new DialogInterface.OnClickListener() {
                    @Override
                    public void onClick(DialogInterface dialogInterface, int i) {
                        startActivityForResult(new Intent(android.provider.Settings.ACTION_SETTINGS), 0);
                        dialogInterface.dismiss();
                    }
                })
                .create();
        dialog.show();
    }
",,"    public void onResume(){
        super.onResume();

        if(!isNetworkConnected()){
            Snackbar mySnackbar = Snackbar.make(this.findViewById(R.id.loginButton), ""Niste povezani na internet!"", Snackbar.LENGTH_LONG )
                    .setAction(""Postavke"", new View.OnClickListener(){
                        @Override
                        public void onClick(View view){
                            startActivityForResult(new Intent(android.provider.Settings.ACTION_SETTINGS), 0);
                        }
                    });
            mySnackbar.setActionTextColor(getResources().getColor(R.color.colorPrimary));
            mySnackbar.show();
        }
    }
",
Android: How to get a custom View's height and width?,"@Override
protected void onSizeChanged(int xNew, int yNew, int xOld, int yOld){
    super.onSizeChanged(xNew, yNew, xOld, yOld);

    viewWidth = xNew;
    viewHeight = yNew;
}",,"    protected void onSizeChanged(int w, int h, int oldw, int oldh) {
        super.onSizeChanged(w, h, oldw, oldh);
    }
",," protected void onSizeChanged(int w, int h, int oldw, int oldh) {
  super.onSizeChanged(h, w, oldh, oldw);
 }
",,"    protected void onSizeChanged(int w, int h, int oldw, int oldh) {
        super.onSizeChanged(w, h, oldw, oldh);
    }
",
Android activity over default lock screen,"getWindow().addFlags(WindowManager.LayoutParams.FLAG_KEEP_SCREEN_ON|
            WindowManager.LayoutParams.FLAG_DISMISS_KEYGUARD|
            WindowManager.LayoutParams.FLAG_SHOW_WHEN_LOCKED|
            WindowManager.LayoutParams.FLAG_TURN_SCREEN_ON);",,"    public void onAttachedToWindow() {
        getWindow().addFlags(WindowManager.LayoutParams.FLAG_TURN_SCREEN_ON
                | WindowManager.LayoutParams.FLAG_SHOW_WHEN_LOCKED
                | WindowManager.LayoutParams.FLAG_KEEP_SCREEN_ON
                | WindowManager.LayoutParams.FLAG_DISMISS_KEYGUARD);
    }
",,"    private void launchScreenEvenIfPhoneIsLocked() {
        getWindow().addFlags(WindowManager.LayoutParams.FLAG_KEEP_SCREEN_ON
                + WindowManager.LayoutParams.FLAG_DISMISS_KEYGUARD |
                + WindowManager.LayoutParams.FLAG_SHOW_WHEN_LOCKED |
                + WindowManager.LayoutParams.FLAG_TURN_SCREEN_ON);
    }
",,"    public void wakeScreen() {
        getWindow().addFlags(WindowManager.LayoutParams.FLAG_SHOW_WHEN_LOCKED
                | WindowManager.LayoutParams.FLAG_DISMISS_KEYGUARD
                | WindowManager.LayoutParams.FLAG_KEEP_SCREEN_ON
                | WindowManager.LayoutParams.FLAG_TURN_SCREEN_ON
                | WindowManager.LayoutParams.FLAG_ALLOW_LOCK_WHILE_SCREEN_ON);
    }
",
Seamless video Loop with VideoView,"videoView.setOnPreparedListener(new OnPreparedListener() {
    @Override
    public void onPrepared(MediaPlayer mp) {
        mp.setLooping(true);
    }
});",,"    public void videoEdit(){
        mVideoView.setVideoPath(""android.resource:        mVideoView.start();
        mVideoView.setOnPreparedListener(new MediaPlayer.OnPreparedListener() {
            @Override
            public void onPrepared(MediaPlayer mp) {
                mp.setLooping(true);
            }
        });
    }
",getPackageName    Rrawemojify,"    private void playVideo(File videoFile) {
        mVideoView.setVideoPath(videoFile.getPath());
        mVideoView.setLayoutParams(new RelativeLayout.LayoutParams(-1, -1));
        mVideoView.setOnPreparedListener(new MediaPlayer.OnPreparedListener() {
            @Override
            public void onPrepared(MediaPlayer mediaPlayer) {
                mediaPlayer.setLooping(true);
                mediaPlayer.start();
            }
        });
    }
",,"    private void init() {
        videoView.setOnPreparedListener(new MediaPlayer.OnPreparedListener() {
            @Override
            public void onPrepared(MediaPlayer mp) {
                mp.setLooping(true);
                videoView.setOnCorrectVideoDimensions(getCorrectVideoDimensions());
                mp.setOnVideoSizeChangedListener(new MediaPlayer.OnVideoSizeChangedListener() {
                    public void onVideoSizeChanged(MediaPlayer mp, int width, int height) {
                        videoView.onVideoSizeChanged(mp);
                    }
                });
            }
        });
    }
",
(Retrofit) Could not locate converter for class crashing app,"Retrofit retrofit = new Retrofit.Builder()
            .baseUrl(Constants.API_BASE_URL)
            .addConverterFactory(GsonConverterFactory.create())
            .build();",,"    public Retrofit provideRetrofitCommenry(OkHttpClient okHttpClient) {
        Retrofit build = new Retrofit.Builder().client(okHttpClient).addConverterFactory(GsonConverterFactory.create()).baseUrl(BaseConstants.BASE_COMMENTRY_URL).build();
        return build;
    }
",,"    public Retrofit provideRetrofitCdn(OkHttpClient okHttpClient) {
        Retrofit build = new Retrofit.Builder().client(okHttpClient).addConverterFactory(GsonConverterFactory.create()).baseUrl(IPLUrls.BASE_URL).build();
        return build;
    }
",,"    private void setupService() {
        Gson gson = new GsonBuilder().setLenient().create();
        Retrofit retrofit = new Retrofit.Builder().baseUrl(HttpService.BASE_URL).addConverterFactory(GsonConverterFactory.create(gson)).build();
        service = retrofit.create(HttpService.class);
    }
",
Height of statusbar?,"public int getStatusBarHeight() {
   int result = 0;
   int resourceId = getResources().getIdentifier(""status_bar_height"", ""dimen"", ""android"");
   if (resourceId > 0) {
      result = getResources().getDimensionPixelSize(resourceId);
   }
   return result;
}",,,,,,"    public int getStatusBarHeight() {
        int i = getResources().getIdentifier(""status_bar_height"", ""dimen"", ""android"");
        int j = 0;
        if (i > 0)
            j = getResources().getDimensionPixelSize(i);
        return j;
    }
",
Force application to restart on first activity,"Intent i = getBaseContext().getPackageManager()
             .getLaunchIntentForPackage( getBaseContext().getPackageName() );
i.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
startActivity(i);",,"    public void restart(View v){
        Intent i = getBaseContext().getPackageManager().getLaunchIntentForPackage( getBaseContext().getPackageName() );
        i.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
        startActivity(i);
    }
",,"    public void onBackPressed() {
        Intent i = getBaseContext().getPackageManager().getLaunchIntentForPackage(getBaseContext().getPackageName());
        i.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
        startActivity(i);
    }
",,"    public void restartApp(){
        Intent restartIntent = getBaseContext().getPackageManager().getLaunchIntentForPackage(getBaseContext().getPackageName());
        restartIntent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
        startActivity(restartIntent);

    }
",
webview showing white bar on right side,webview.setScrollBarStyle(WebView.SCROLLBARS_OUTSIDE_OVERLAY);,webview being your WebView object reference,,,"    private void _makeWebSettings(WebView webView) {
        webView.setInitialScale(1);
        WebSettings webSettings = webView.getSettings();
                webSettings.setJavaScriptEnabled(true);
                webView.setScrollBarStyle(WebView.SCROLLBARS_OUTSIDE_OVERLAY);

        webSettings.setUseWideViewPort(true);
        webSettings.setSupportZoom(true);
        webSettings.setBuiltInZoomControls(true);
        webSettings.setDisplayZoomControls(false);
        webSettings.setLoadWithOverviewMode(true);
        webSettings.setDomStorageEnabled(true);     }
",Enable Javascript   remove a weird white line on the right size   Required for some NodeJS based code,"    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_about);

        
        this.mWebView = (WebView)findViewById(R.id.webView);
        this.mWebView.setInitialScale(1);
        this.mWebView.getSettings().setJavaScriptEnabled(true);
        this.mWebView.getSettings().setLoadWithOverviewMode(true);
        this.mWebView.getSettings().setUseWideViewPort(true);
        this.mWebView.setScrollBarStyle(WebView.SCROLLBARS_OUTSIDE_OVERLAY);
        this.mWebView.setScrollbarFadingEnabled(true);

        
        new LoadData().execute();
    }
",Create the web view   Load the site
How to check if user is logged in with FB SDK 4.0 for Android?,"public boolean isLoggedIn() {
    AccessToken accessToken = AccessToken.getCurrentAccessToken();
    return accessToken != null;
}",,"    public boolean isLoggedInFacebook() {
        AccessToken accessToken = AccessToken.getCurrentAccessToken();
        return accessToken != null;
    }
",,"    public boolean isLoggedIn() {
        AccessToken accessToken = AccessToken.getCurrentAccessToken();
        return accessToken != null;
    }
",,"    public boolean isLoggedIn() {
        AccessToken accessToken = AccessToken.getCurrentAccessToken();
        return accessToken != null;
    }
",
Push up content when clicking in edit text,"getActivity().getWindow().setSoftInputMode(
                WindowManager.LayoutParams.SOFT_INPUT_ADJUST_PAN);",,"    public View onCreateView(LayoutInflater inflater, ViewGroup container,
                             Bundle savedInstanceState) {
        getActivity().getWindow().setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_ADJUST_PAN);
        return inflater.inflate(R.layout.fragment_home_page, container, false);
    }
",,"    public View onCreateView(LayoutInflater inflater, ViewGroup container,
                             Bundle savedInstanceState) {
        getActivity().getWindow().setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_ADJUST_PAN);
        return inflater.inflate(R.layout.fragment_chat, container, false);
    }
",,"    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        getActivity().getWindow().setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_ADJUST_PAN);

    }
",
How to detect device is Android phone or Android tablet?,"public static boolean isTablet(Context context) {
    return (context.getResources().getConfiguration().screenLayout
            & Configuration.SCREENLAYOUT_SIZE_MASK)
            >= Configuration.SCREENLAYOUT_SIZE_LARGE;
}",,"    public static boolean isTablet(Context context){
        return (context.getResources().getConfiguration().screenLayout & Configuration.SCREENLAYOUT_SIZE_MASK) >= Configuration.SCREENLAYOUT_SIZE_LARGE;
    }
",,"    public static boolean isTablet(Context context) {
        return (context.getResources().getConfiguration().screenLayout & Configuration.SCREENLAYOUT_SIZE_MASK) >= Configuration.SCREENLAYOUT_SIZE_LARGE;
    }
",," public static boolean isLargeScreen(Context context) {
  return (context.getResources().getConfiguration().screenLayout & Configuration.SCREENLAYOUT_SIZE_MASK) >= Configuration.SCREENLAYOUT_SIZE_LARGE;
 }
",
Intercept and override HTTP requests from WebView,"webView.setWebViewClient(new WebViewClient() {
    @Override
    public boolean shouldOverrideUrlLoading(WebView view, String url) {
        if (url.startsWith(""foo:                        return true;
        }
        return false;
    }
});",magic,"    private void disableBrowserPopup() {
        webView.setWebViewClient(new WebViewClient() {
            @Override
            public boolean shouldOverrideUrlLoading(WebView view, String url) {
                view.loadUrl(url);
                return true;
            }
        });
    }
",,"    private void openWebPage() {
        mWebView.loadUrl(mUrl);
        mWebView.setWebViewClient(new WebViewClient() {
            @Override
            public boolean shouldOverrideUrlLoading(WebView view, String url) {
                view.loadUrl(url);
                return true;
            }
        });
    }
",,"    private void init() {
        mWebView.loadUrl(URL);
        mWebView.setWebViewClient(new WebViewClient() {
            @Override
            public boolean shouldOverrideUrlLoading(WebView view, String url) {
                view.loadUrl(url);
                return true;
            }
        });
    }
",
How to perform a fade animation on Activity transition?,"Intent i = new Intent(this, NewlyStartedActivity.class);
startActivity(i);
overridePendingTransition(R.anim.fade_in, R.anim.fade_out);",,"  public void showSearch(Activity context) {
    Intent i = new Intent(context, SearchActivity.class);
    context.startActivity(i);
    context.overridePendingTransition(R.anim.fade_in, R.anim.fade_out);
  }
",,"    public void startSearchActivity(View view) {
        Intent i_search = new Intent(this, SearchActivity.class);
        startActivity(i_search);
        overridePendingTransition(R.anim.fade_in, R.anim.fade_out);
    }
",,"    public void startSavedActivity(View view) {
        Intent i_saved = new Intent(this, SavedColorActivity.class);
        startActivity(i_saved);
        overridePendingTransition(R.anim.fade_in, R.anim.fade_out);
    }
",
android: Softkeyboard perform action when Done key is pressed,"editText.setOnEditorActionListener(new OnEditorActionListener() {        
    @Override
    public boolean onEditorAction(TextView v, int actionId, KeyEvent event) {
        if(actionId==EditorInfo.IME_ACTION_DONE){
                    }
    return false;
    }
});",do something," public static void onKeyDone(EditText editText, final Runnable runnable) {
  editText.setOnEditorActionListener(new TextView.OnEditorActionListener() {
   @Override public boolean onEditorAction(TextView textView, int actionId, KeyEvent keyEvent) {
    if (actionId == EditorInfo.IME_ACTION_DONE) {
     runnable.run();
     return true;
    }
    return false;
   }
  });
 }
",,"    protected void initView() {
        mEtPassword.setOnEditorActionListener(new TextView.OnEditorActionListener() {
            @Override
            public boolean onEditorAction(TextView textView, int i, KeyEvent keyEvent) {
                if (i == EditorInfo.IME_ACTION_DONE) {
                    mBtnLoginLogin.performClick();
                    return true;
                }
                return false;
            }
        });
    }
",,"    private void setEmailInputOnEnterKey() {
        emailInput.setOnEditorActionListener(new TextView.OnEditorActionListener() {
            @Override
            public boolean onEditorAction(TextView textView, int i, KeyEvent keyEvent) {
                if (i == EditorInfo.IME_ACTION_DONE) {
                    saveEmailButton.performClick();
                    return true;
                }
                return false;
            }
        });
    }
",
Android: Insert text into EditText at current position,"int start = Math.max(myEditText.getSelectionStart(), 0);
int end = Math.max(myEditText.getSelectionEnd(), 0);
myEditText.getText().replace(Math.min(start, end), Math.max(start, end),
        textToInsert, 0, textToInsert.length());",,"    public static void input(EditText editText, Emojicon emojicon) {
        if (editText == null || emojicon == null) {
            return;
        }

        int start = editText.getSelectionStart();
        int end = editText.getSelectionEnd();
        if (start < 0) {
            editText.append(emojicon.getEmoji());
        } else {
            editText.getText().replace(Math.min(start, end), Math.max(start, end), emojicon.getEmoji(), 0, emojicon.getEmoji().length());
        }
    }
",,"        if (editText == null || emojicon == null) {
            return;
        }

        int start = editText.getSelectionStart();
        int end = editText.getSelectionEnd();
        if (start < 0) {
            editText.append(emojicon.getEmoji());
        } else {
            editText.getText().replace(Math.min(start, end), Math.max(start, end), emojicon.getEmoji(), 0, emojicon.getEmoji().length());
        }
    }

",,"    public static void input(EditText editText, Emojicon emojicon) {
        if (editText == null || emojicon == null) {
            return;
        }

        int start = editText.getSelectionStart();
        int end = editText.getSelectionEnd();
        if (start < 0) {
            editText.append(emojicon.getEmoji());
        } else {
            editText.getText().replace(Math.min(start, end), Math.max(start, end), emojicon.getEmoji(), 0, emojicon.getEmoji().length());
        }
    }
",
How to get accent color programmatically?,"private int fetchAccentColor() {
    TypedValue typedValue = new TypedValue();

    TypedArray a = mContext.obtainStyledAttributes(typedValue.data, new int[] { R.attr.colorAccent });
    int color = a.getColor(0, 0);

    a.recycle();

    return color;
}",,"    private int fetchAccentColor() {
        TypedValue typedValue = new TypedValue();
        TypedArray a = getContext().obtainStyledAttributes(typedValue.data, new int[]{R.attr.colorAccent});
        int color = a.getColor(0, 0);
        a.recycle();
        return color;
    }
",,"    private int fetchAccentColor() {
        TypedValue typedValue = new TypedValue();
        TypedArray a = mContext.obtainStyledAttributes(typedValue.data, new int[] { R.attr.colorAccent });
        int color = a.getColor(0, 0);
        a.recycle();
        return color;
    }
",,"    private int getAccentColor() {
        TypedValue typedValue = new TypedValue();
        TypedArray a = getContext().obtainStyledAttributes(typedValue.data, new int[]{R.attr.colorAccent});
        int color = a.getColor(0, 0);
        a.recycle();
        return color;
    }
",
creating a menu after a long click event on a list view,"view.setOnCreateContextMenuListener(new OnCreateContextMenuListener() {
    @Override
    public void onCreateContextMenu(final ContextMenu menu, final View v,
        final ContextMenuInfo menuInfo) {

    }
});",,"    private void createHistoryView() {
        final View pointControls = getLayoutInflater().inflate(R.layout.navigateanypoint_header, historyListView, false);
        historyListView.addHeaderView(pointControls, null, false);

                ButterKnife.bind(this);

        if (getHistoryOfSearchedLocations().isEmpty()) {
            historyListView.addFooterView(getEmptyHistoryFooter(), null, false);
        }

        historyListView.setAdapter(getDestinationHistoryAdapter());
        historyListView.setOnItemClickListener(new OnItemClickListener() {

            @Override
            public void onItemClick(final AdapterView<?> arg0, final View arg1, final int arg2,
                    final long arg3) {
                final Object selection = arg0.getItemAtPosition(arg2);
                if (selection instanceof Destination) {
                    navigateTo(((Destination) selection).getCoords());
                }
            }
        });

        historyListView.setOnCreateContextMenuListener(new OnCreateContextMenuListener() {
            @Override
            public void onCreateContextMenu(final ContextMenu menu, final View v,
                    final ContextMenuInfo menuInfo) {
                menu.add(Menu.NONE, CONTEXT_MENU_NAVIGATE, Menu.NONE, res.getString(R.string.cache_menu_navigate));
                menu.add(Menu.NONE, CONTEXT_MENU_EDIT_WAYPOINT, Menu.NONE, R.string.waypoint_edit);
                menu.add(Menu.NONE, CONTEXT_MENU_DELETE_WAYPOINT, Menu.NONE, R.string.waypoint_delete);
            }
        });
    }
",inject a second time to also find the dynamically expanded views above,"    public View onCreateView(LayoutInflater inflater, ViewGroup container,
                             Bundle savedInstanceState) {
                final View rootView = inflater.inflate(R.layout.fragment_condition_search_friend, container, false);
        Button searchBtn = (Button)rootView.findViewById(R.id.searchBtn);
        searchBtn.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                EditText nickNameTextView = (EditText) rootView.findViewById(R.id.nickNameEditView);
                EditText phoneTextView = (EditText) rootView.findViewById(R.id.telNumEditText);
                String nickName = nickNameTextView.getText().toString();
                String telnumber = phoneTextView.getText().toString();
                callback.SendInputValue(nickName, telnumber);
            }
        });
        final ListView listView = (ListView)rootView.findViewById(R.id.searchResultListView);
        listView.setAdapter(this.adapter);
        listView.setOnCreateContextMenuListener(new View.OnCreateContextMenuListener() {
            @Override
            public void onCreateContextMenu(ContextMenu contextMenu, View view, ContextMenu.ContextMenuInfo contextMenuInfo) {
                contextMenu.add(0,0,0,""æ·»å ä¸ºå¥½å"");
                int position = ((AdapterView.AdapterContextMenuInfo)contextMenuInfo).position;
                addFriendPhone = ((TextView)listView.getChildAt(position).findViewById(R.id.phoneNumTextView)).getText().toString();
            }
        });
        return rootView;
    }
",Inflate the layout for this fragment," private void setListViewContextMenuWithDel() {
  lvMang.setOnCreateContextMenuListener(new OnCreateContextMenuListener() {
   
   @Override
   public void onCreateContextMenu(ContextMenu menu, View v,
     ContextMenuInfo menuInfo) {
    intCurrDataPos = ((AdapterContextMenuInfo) menuInfo).position;
    menu.add(0, 0, 0, ""å é¤"");
   }
  });
 }
",
SwipeRefreshLayout trigger programmatically,"mSwipeRefreshLayout.post(new Runnable() {
        @Override
        public void run() {
            mSwipeRefreshLayout.setRefreshing(true);
        }
    });",,"    public void showLoading() {
        mSwipeRefreshLayout.post(new Runnable() {
            @Override public void run() {
                mSwipeRefreshLayout.setRefreshing(true);
            }
        });
    }
",,"    public void showLoading() {
        swipeRefreshLayout.post(new Runnable() {
            @Override
            public void run() {
                swipeRefreshLayout.setRefreshing(true);
            }
        });
    }
",,"    public void showLoading() {
        refreshLayout.post(new Runnable() {
            @Override
            public void run() {
                refreshLayout.setRefreshing(true);
            }
        });
    }
",
ArrayAdapter in android to create simple listview,"ArrayAdapter<String> adapter = new ArrayAdapter<String>(this,
        android.R.layout.simple_list_item_1, android.R.id.text1, values);",,"    public void showActors(List<String> actors) {
        ArrayAdapter<String> adapter = new ArrayAdapter<String>(this, android.R.layout.simple_list_item_1,
                android.R.id.text1, actors);
        actorsList.setAdapter(adapter);
    }
",,"    protected ArrayAdapter<String> createSpinnerAdapter() {
        ArrayAdapter<String> spinnerAdapter = new ArrayAdapter<String>(this,
                android.R.layout.simple_spinner_item, android.R.id.text1, spinnerArray());
        spinnerAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
        return spinnerAdapter;
    }
",,"    public void setupdata(LinkedList<String> data)
    {
       ListView lv= (ListView) findViewById(R.id.lview);
        ArrayAdapter adp=new ArrayAdapter<String>(this,android.R.layout.simple_list_item_1,android.R.id.text1,data);
lv.setAdapter(adp);
    }
",
Navigation drawer - Disable click through on items behind the drawer,"mFragmentContainerView.setOnTouchListener(new View.OnTouchListener() {
    @Override
    public boolean onTouch(View v, MotionEvent event) {
      return true;
    }
  });",,"    protected void blockTouch() {
        mLayoutView.setOnTouchListener(new View.OnTouchListener() {
            @Override
            public boolean onTouch(View v, MotionEvent rawEvent) {
                return true;
            }
        });
    }
",,"    protected void blockTouch(){
        mLayoutView.setOnTouchListener(new View.OnTouchListener() {
            @Override
            public boolean onTouch(View v, MotionEvent rawEvent) {
                return true;
            }
        });
    }
",,"    protected void blockTouch(){
        mLayoutView.setOnTouchListener(new View.OnTouchListener() {
            @Override
            public boolean onTouch(View v, MotionEvent rawEvent) {
                return true;
            }
        });
    }
",
How to call a .NET Webservice from Android using KSOAP2?,"SoapPrimitive result = (SoapPrimitive)envelope.getResponse();
String strRes = result.toString();",,"    protected String doInBackground(String... params) {
        String NAMESPACE = ""http:        String METHOD_NAME = ""validar"";
        String SOAP_ACTION = ""ValidaLoginFacade"";
        String URL = ""http:
        SoapSerializationEnvelope envelope = new  SoapSerializationEnvelope(SoapEnvelope.VER11);
        HttpTransportSE transport = new HttpTransportSE(URL);

        try {
            transport.call(SOAP_ACTION, envelope);

            SoapPrimitive response = (SoapPrimitive) envelope.getResponse();

            int result = Integer.parseInt(String.valueOf(response));

        } catch(Exception e) {
            e.printStackTrace();
        }

        return """";
    }
",cliente veja no wsld em definitions  na realidade corresponde ao nome do pacote em que o servio foi criado  100228080ClienteWSservicesClienteServicowsdl,"    public boolean inserirNserie(Coord coord) {
        SoapObject inserirNserie = new SoapObject(NAMESPACE, INSERIR);
        SoapObject Nserie = new SoapObject(NAMESPACE, ""Nserie"");
        Nserie.addProperty(""id"", coord.getId());
        Nserie.addProperty(""numeroserie"", coord.getCoordenadas());
        Nserie.addProperty(""segundonumero"", coord.getSegundo());

        inserirNserie.addSoapObject(Nserie);
        SoapSerializationEnvelope envelope = new SoapSerializationEnvelope(SoapEnvelope.VER11);
        envelope.implicitTypes = true;
        envelope.dotNet = true;
        envelope.encodingStyle = SoapSerializationEnvelope.XSD;
        envelope.setOutputSoapObject(inserirNserie);
        MarshalDouble md = new MarshalDouble();
        md.register(envelope);
        HttpTransportSE http = new HttpTransportSE(URL);
        try {
            http.call(""urn: "" + INSERIR, envelope);
            SoapPrimitive resposta = (SoapPrimitive) envelope.getResponse();
            return Boolean.parseBoolean(resposta.toString());
        } catch (Exception e) {
            e.printStackTrace();
            return false;
        }
    }
",,"    public boolean excluirNserie(Coord coord) {
        SoapObject inserirNserie = new SoapObject(NAMESPACE, EXCLUIR);
        SoapObject Nserie = new SoapObject(NAMESPACE, ""nserie"");
        Nserie.addProperty(""id"", coord.getId());
        Nserie.addProperty(""numeroserie"", coord.getCoordenadas());
        Nserie.addProperty(""segundo"", coord.getSegundo());

        inserirNserie.addSoapObject(Nserie);
        SoapSerializationEnvelope envelope = new SoapSerializationEnvelope(SoapEnvelope.VER11);
        envelope.implicitTypes = true;
        envelope.dotNet = true;
        envelope.encodingStyle = SoapSerializationEnvelope.XSD;
        envelope.setOutputSoapObject(inserirNserie);
        MarshalDouble md = new MarshalDouble();
        md.register(envelope);
        HttpTransportSE http = new HttpTransportSE(URL);
        try {
            http.call(""urn: "" + EXCLUIR, envelope);
            SoapPrimitive resposta = (SoapPrimitive) envelope.getResponse();
            return Boolean.parseBoolean(resposta.toString());
        } catch (Exception e) {
            e.printStackTrace();
            return false;
        }
    }
",
"Android - Share on Facebook, Twitter, Mail, ecc","String message = ""Text I want to share."";
Intent share = new Intent(Intent.ACTION_SEND);
share.setType(""text/plain"");
share.putExtra(Intent.EXTRA_TEXT, message);

startActivity(Intent.createChooser(share, ""Title of the dialog the system will open""));",,"  private void systemShare() {
    Intent sharingIntent = new Intent(android.content.Intent.ACTION_SEND);
    sharingIntent.setType(""text/plain"");
    sharingIntent.putExtra(android.content.Intent.EXTRA_TEXT, sharedText);
    mContext.startActivity(Intent.createChooser(sharingIntent, mContext.getString(R.string.send_intent_title)));
  }
",,"    public static void openShare(@NonNull Context context, @NonNull String text) {
        Intent intent = new Intent(Intent.ACTION_SEND);
        intent.setType(""text/plain"");
        intent.putExtra(Intent.EXTRA_TEXT, text);
        context.startActivity(Intent.createChooser(intent, ""åäº«""));
    }
",,"    private void shareDeviceId(String deviceId) {
        Intent shareIntent = new Intent(android.content.Intent.ACTION_SEND);
        shareIntent.setType(""text/plain"");
        shareIntent.putExtra(android.content.Intent.EXTRA_TEXT, deviceId);
        startActivity(Intent.createChooser(shareIntent, getString(R.string.share_device_id_chooser)));
    }
",
How to 'restart' an android application programmatically,"Intent i = getBaseContext().getPackageManager()
             .getLaunchIntentForPackage( getBaseContext().getPackageName() );
i.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
startActivity(i);",,"    public void restart(View v){
        Intent i = getBaseContext().getPackageManager().getLaunchIntentForPackage( getBaseContext().getPackageName() );
        i.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
        startActivity(i);
    }
",,"    public void onBackPressed() {
        Intent i = getBaseContext().getPackageManager().getLaunchIntentForPackage(getBaseContext().getPackageName());
        i.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
        startActivity(i);
    }
",,"    public void restartApp(){
        Intent restartIntent = getBaseContext().getPackageManager().getLaunchIntentForPackage(getBaseContext().getPackageName());
        restartIntent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
        startActivity(restartIntent);

    }
",
How to display my location on Google Maps for Android API v2,map.setMyLocationEnabled(true);,map is a GoogleMap object,"    protected void onPermissionsGranted() {
        map.setMyLocationEnabled(true);
    }
",,"  @Override public void onShowView() {
    controller.setMyLocationEnabled(true);
  }
",,"    void showMyLocation(GoogleMap map) {
        map.setMyLocationEnabled(true);
    }
",
Android google maps marker disable navigation option,"GoogleMap map;
map.getUiSettings().setMapToolbarEnabled(false);",,"  private void initMapsView() {
    mMap.getUiSettings().setCompassEnabled(true);
    mMap.getUiSettings().setMapToolbarEnabled(false);
    mMap.getUiSettings().setMyLocationButtonEnabled(true);
    mMap.getUiSettings().setZoomControlsEnabled(false);
    mMap.setBuildingsEnabled(false);
    mMap.setMapType(GoogleMap.MAP_TYPE_NORMAL);
  }
",,"    private void setUpMap() {
        final TileOverlayOptions overlayOptions = new TileOverlayOptions();
        overlayOptions.tileProvider(new PUBGTileProvider());
        this.googleMap.setMaxZoomPreference(5);
        this.googleMap.setMapType(GoogleMap.MAP_TYPE_NONE);
        this.googleMap.addTileOverlay(overlayOptions);
        this.googleMap.getUiSettings().setMapToolbarEnabled(false);
    }
",,"    public void onMapReady(GoogleMap googleMap){
        mMap = googleMap;
        mMap.setMapType(GoogleMap.MAP_TYPE_HYBRID);
        mMap.getUiSettings().setMapToolbarEnabled(false);
        LatLng sydney = new LatLng(-34, 151);
        mMap.addMarker(new MarkerOptions().position(sydney).title(""Marker in Sydney""));
        mMap.moveCamera(CameraUpdateFactory.newLatLng(sydney));
    }
",
Check for navigation bar,"boolean hasMenuKey = ViewConfiguration.get(context).hasPermanentMenuKey();
boolean hasBackKey = KeyCharacterMap.deviceHasKey(KeyEvent.KEYCODE_BACK);

if(!hasMenuKey && !hasBackKey) {
    }",Do whatever you need to do this device has a navigation bar,"    public static boolean checkDeviceHasNavigationBar(Context context) {
        boolean hasMenuKey = ViewConfiguration.get(context).hasPermanentMenuKey();
        boolean hasBackKey = KeyCharacterMap.deviceHasKey(KeyEvent.KEYCODE_BACK);
        return !hasMenuKey && !hasBackKey;
    }
",,"    public static boolean doThisDeviceOwnNavigationBar(Context context) {
        boolean hasMenuKey = ViewConfiguration.get(context).hasPermanentMenuKey();
        boolean hasBackKey = KeyCharacterMap.deviceHasKey(KeyEvent.KEYCODE_BACK);

        return !hasMenuKey && !hasBackKey;
    }
",,,
No animation on item removal on RecyclerView,myDataset.remove(position); mAdapter.notifyItemRemoved(position);,myDataset is ListMyObject,"    public void itemSwipe(int swipePosition) {
        itemList.remove(swipePosition);
        adapter.notifyItemRemoved(swipePosition);
    }
",,"        public void onClick(View v) {
            integerList.remove(0);
            adapter.notifyItemRemoved(0);
        }
",,"            protected void onPerformAction() {
                adapter.mItems.remove(position);
                adapter.notifyItemRemoved(position);
            }
",
How to close Android Soft KeyBoard programmatically?,"imm.toggleSoftInput(InputMethodManager.SHOW_FORCED, 0);

imm.toggleSoftInput(InputMethodManager.SHOW_FORCED, 0);",to show soft keyboard  to hide it call the method again,"    public void toggleKeyboard() {
        imm.toggleSoftInput(InputMethodManager.SHOW_FORCED, 0);
    }
",immtoggleSoftInputInputMethodManagerSHOWFORCED InputMethodManagerHIDEIMPLICITONLY,"    public static void showSoftKeyboard(Context context) {
        InputMethodManager inputManager = (InputMethodManager) context.getSystemService(Context.INPUT_METHOD_SERVICE);
        inputManager.toggleSoftInput(InputMethodManager.SHOW_FORCED, 0);
    }
",,"    public static void showKeyboard() {
        InputMethodManager imm = (InputMethodManager) context.getSystemService(Context.INPUT_METHOD_SERVICE);
        imm.toggleSoftInput(InputMethodManager.SHOW_FORCED, 0);
    }
",
Wifi Connect-Disconnect Listener,"public class WifiReceiver extends BroadcastReceiver {

    @Override
    public void onReceive(Context context, Intent intent) {     
        ConnectivityManager conMan = (ConnectivityManager) context.getSystemService(Context.CONNECTIVITY_SERVICE); 
        NetworkInfo netInfo = conMan.getActiveNetworkInfo();
        if (netInfo != null && netInfo.getType() == ConnectivityManager.TYPE_WIFI) 
            Log.d(""WifiReceiver"", ""Have Wifi Connection"");
        else
            Log.d(""WifiReceiver"", ""Don't have Wifi Connection"");    
    }   
};",,"package com.shituocheng.sweather.com.sweather.utilis;
",,"    public static boolean isWifi(Context context) {
        NetworkInfo networkInfo = ((ConnectivityManager) (context.getSystemService(Context.CONNECTIVITY_SERVICE))).getActiveNetworkInfo();
        return networkInfo != null && networkInfo.isConnected() && (networkInfo.getType() == ConnectivityManager.TYPE_WIFI || networkInfo.getType() == ConnectivityManager.TYPE_ETHERNET || networkInfo.getType() == 17 || networkInfo.getType() == -1 || networkInfo.getType() == 13 || networkInfo.getType() == 16);
    }
",,"    public static boolean isWifi(Context context) {
        NetworkInfo activeNetInfo = ((ConnectivityManager) context.getSystemService(Context.CONNECTIVITY_SERVICE)).getActiveNetworkInfo();
        return activeNetInfo != null && activeNetInfo.getType() == ConnectivityManager.TYPE_WIFI;
    }
",
make a phone call click on a button,"Intent callIntent = new Intent(Intent.ACTION_CALL);
    callIntent.setData(Uri.parse(""tel:123456789""));
    startActivity(callIntent);",,,,"    private void callAction() {
        Intent intent = new Intent(Intent.ACTION_CALL);
        intent.setData(Uri.parse(""tel:"" + PHONE_NUMBER));
        startActivity(intent);
    }
",," protected void phoneCall(String number){
  launchIntent = new Intent(Intent.ACTION_CALL);
  launchIntent.setData(Uri.parse(""tel:"" + number));
  startActivity(launchIntent);
 }
",
How to kill an application with all its activities?,"@Override
protected void onActivityResult(int requestCode, int resultCode, Intent data) {
  switch(resultCode)
  {
  case RESULT_CLOSE_ALL:
    setResult(RESULT_CLOSE_ALL);
    finish();
  }
  super.onActivityResult(requestCode, resultCode, data);
}",," protected void onActivityResult(int requestCode, int resultCode, Intent data)
 {
  switch (resultCode)
  {
   case Constants.RESULT_CLOSE_ALL:
    setResult(Constants.RESULT_CLOSE_ALL);
    finish();
  }
  super.onActivityResult(requestCode, resultCode, data);
 }
",,"    protected void onActivityResult(int requestCode, int resultCode, Intent data) {

        switch(resultCode) {
            case RESULT_CLOSE_ALL:
                setResult(RESULT_CLOSE_ALL);
                finish();
        }

        super.onActivityResult(requestCode, resultCode, data);
    }
",,"    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
        super.onActivityResult(requestCode, resultCode, data);
        setResult(Activity.RESULT_OK,data);
        finish();
    }
",
Is there any way to receive a notification when the user powers off the device?,"public class ShutdownReceiver extends BroadcastReceiver {

    @Override
    public void onReceive(Context context, Intent intent) {
            }

}",Insert code here,"  private BroadcastReceiver broadcastReceiver(final String name) {
    return new BroadcastReceiver() {
      @Override public void onReceive(Context context, Intent intent) {
        transcript.add(name + "" notified of "" + intent.getAction());
      }
    };
  }
",,"    private BroadcastReceiver createUpdateReceiver() {
        return new BroadcastReceiver() {
            @Override
            public void onReceive(Context context, Intent intent) {
                notifyUpdate(intent);
            }
        };
    }
",,"    private BroadcastReceiver createRemoveReceiver() {
        return new BroadcastReceiver() {
            @Override
            public void onReceive(Context context, Intent intent) {
                notifyRemove(intent);
            }
        };
    }
",
How To Show and hide ActionBar with AppCompat v.7,getSupportActionBar().hide();  getSupportActionBar().show();  // for showing,for hiding,"    public void onViewClicked() {
        if(getSupportActionBar().isShowing()){
            getSupportActionBar().hide();
        }else{
            getSupportActionBar().show();
        }
    }
",,"    public void setActionBarVisibility(ObservableBoolean observableField, int fieldId) {
        if (observableField.get()) {
            getSupportActionBar().show();
        } else {
            getSupportActionBar().hide();
        }
    }
",,"    public void onConfigurationChanged(Configuration newConfig) {
        super.onConfigurationChanged(newConfig);

        if (!isPortrait())
            getSupportActionBar().hide();
        else
            getSupportActionBar().show();
    }
",
Identifying RTL language in Android,"Configuration config = getResources().getConfiguration();
if(config.getLayoutDirection() == View.LAYOUT_DIRECTION_RTL) {
    }",in Right To Left layout,,,"    private void invertGravityIfNecessary() {
        if (Build.VERSION.SDK_INT < Build.VERSION_CODES.JELLY_BEAN_MR1) return;
        Configuration config = getResources().getConfiguration();
        if (config.getLayoutDirection() == View.LAYOUT_DIRECTION_RTL) {
            switch (buttonGravity) {
                case START:
                    buttonGravity = GravityEnum.END;
                    break;
                case END:
                    buttonGravity = GravityEnum.START;
                    break;
            }
        }
    }
",,"    private void invertGravityIfNecessary() {
        if (Build.VERSION.SDK_INT < Build.VERSION_CODES.JELLY_BEAN_MR1) return;
        Configuration config = getResources().getConfiguration();
        if (config.getLayoutDirection() == View.LAYOUT_DIRECTION_RTL) {
            switch (mButtonGravity) {
                case START:
                    mButtonGravity = GravityEnum.END;
                    break;
                case END:
                    mButtonGravity = GravityEnum.START;
                    break;
            }
        }
    }
",
Detecting when screen is locked,"KeyguardManager myKM = (KeyguardManager) context.getSystemService(Context.KEYGUARD_SERVICE);
if( myKM.inKeyguardRestrictedInputMode()) {
 } else {
 }",it is locked  it is not locked,"    public boolean isDeviceLocked(Context context) {
        KeyguardManager myKM = (KeyguardManager) context.getSystemService(Context.KEYGUARD_SERVICE);
        return myKM.inKeyguardRestrictedInputMode();
    }
",,"    public static boolean isScreenLock() {
        KeyguardManager km = (KeyguardManager) Utils.getAppContext().getSystemService(Context.KEYGUARD_SERVICE);
        return km != null && km.inKeyguardRestrictedInputMode();
    }
",,"    public static boolean isScreenLock() {
        KeyguardManager km = (KeyguardManager) Utils.getContext().getSystemService(Context.KEYGUARD_SERVICE);
        return km != null && km.inKeyguardRestrictedInputMode();
    }
",
Android KitKat securityException when trying to read from MediaStore,"i = new Intent(Intent.ACTION_PICK, android.provider.MediaStore.Images.Media.EXTERNAL_CONTENT_URI);
startActivityForResult(i, CHOOSE_IMAGE);",,"    public void onMediaButtonClicked() {
        Intent i = new Intent(Intent.ACTION_PICK, android.provider.MediaStore.Images.Media.EXTERNAL_CONTENT_URI);
        startActivityForResult(i, REQUEST_LOAD_GALLERY_IMAGE);
    }
",,,,"    void changePhoto() {
        Intent i = new Intent(Intent.ACTION_PICK, android.provider.MediaStore.Images.Media.EXTERNAL_CONTENT_URI);
        startActivityForResult(i, RESULT_LOAD_IMAGE);
    }
",
android - setting LayoutParams programmatically,"tv.setLayoutParams(new ViewGroup.LayoutParams(
    ViewGroup.LayoutParams.WRAP_CONTENT,
    ViewGroup.LayoutParams.WRAP_CONTENT));",,"    public RecyclerView.ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {
        View view = LayoutInflater.from(parent.getContext()).inflate(R.layout.item_select_image, null);
        view.setLayoutParams(new ViewGroup.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT));
        return new ImageHolder(view);
    }
",,"    public void setContentView(int layoutId) {
        View contentView = LayoutInflater.from(mContext).inflate(layoutId, null);
        contentView.setLayoutParams(new ViewGroup.LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT, ViewGroup.LayoutParams.WRAP_CONTENT));
        setContentView(contentView);
    }
",,"        protected void onBindViewHolderWithOffset(SubViewHolder holder, int position, int offsetTotal) {
            super.onBindViewHolderWithOffset(holder, position, offsetTotal);
            holder.setText(String.valueOf(offsetTotal));
            holder.itemView.setLayoutParams(new ViewGroup.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT));
        }
",
Setting textSize programmatically,"textView.setTextSize(TypedValue.COMPLEX_UNIT_PX, 
           getResources().getDimension(R.dimen.result_font));",,"    private TextView createTaskTextView(String value) {
        TextView txtWaypoint = new TextView(this);
        txtWaypoint.setEllipsize(TextUtils.TruncateAt.END);
        txtWaypoint.setMaxLines(2);
        txtWaypoint.setTextSize(TypedValue.COMPLEX_UNIT_PX, getResources().getDimension(R.dimen.material_text_subhead));
        txtWaypoint.setText(Html.fromHtml(value));
        return txtWaypoint;
    }
",,"        public RecyclerView.ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
            final RecyclerView.ViewHolder viewHolder = super.onCreateViewHolder(parent, viewType);

            final View view = viewHolder.itemView.findViewById(android.R.id.text1);
            if (view instanceof TextView) {
                ((TextView) view).setTextSize(TypedValue.COMPLEX_UNIT_PX, getResources().getDimension(R.dimen.file_picker_items_text_size));
            }

            return viewHolder;
        }
",,"    private void initializeSocialSentenceView(Context context) {
        socialSentenceView = new TextView(context);
        socialSentenceView.setTextSize(
                TypedValue.COMPLEX_UNIT_PX,
                getResources().getDimension(R.dimen.com_facebook_likeview_text_size));
        socialSentenceView.setMaxLines(2);
        socialSentenceView.setTextColor(foregroundColor);
        socialSentenceView.setGravity(Gravity.CENTER);

        LinearLayout.LayoutParams socialSentenceViewLayout = new LinearLayout.LayoutParams(
                LayoutParams.WRAP_CONTENT,
                LayoutParams.MATCH_PARENT);
        socialSentenceView.setLayoutParams(socialSentenceViewLayout);
    }
",
How to obtain MAC address of WiFi network interface?,"WifiManager wifiMan = (WifiManager) this.getSystemService(
                Context.WIFI_SERVICE);
WifiInfo wifiInf = wifiMan.getConnectionInfo();
String macAddr = wifiInf.getMacAddress();",," public void onCreate(Bundle savedInstanceState) {
  super.onCreate(savedInstanceState);
  setContentView(R.layout.activity_nfc);
  final WifiManager wm = (WifiManager) this
    .getSystemService(Context.WIFI_SERVICE);

  getNfcController().setNdefPayload(
    wm.getConnectionInfo().getMacAddress());
 }
",,"    public static String getWlanMAC(Context context) {
        WifiManager wm =  (WifiManager) context.getSystemService(Context.WIFI_SERVICE);
        return wm.getConnectionInfo().getMacAddress();
    }
",,"    public static String getMacAddress(Context context) {
        WifiManager wifi = (WifiManager) context.getSystemService(Context.WIFI_SERVICE);
        WifiInfo info = wifi.getConnectionInfo();
        return info != null ? info.getMacAddress() : """";
    }
",
Android 4.4 translucent Status and Navigation bars style on Android 5.0,"getWindow().getDecorView().setSystemUiVisibility(
        View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN);",,"    public static void setImageTransparent(Activity activity) {
            activity.getWindow().getDecorView().setSystemUiVisibility(View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN);
    }
",,"    public static void showStatusBar(Activity activity) {
                activity.getWindow().getDecorView().setSystemUiVisibility( View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN);
    }
",,"    public void setFullScreen() {
        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {
            getWindow().getDecorView().setSystemUiVisibility(View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN);
        }
    }
",
Canvas: trying to use a recycled bitmap android.graphics.Bitmap in android,"if (mBitmap != null && !mBitmap.isRecycled()) {
    mBitmap.recycle();
    mBitmap = null; 
}",,"    public void recycle() {
        if (!background.isRecycled())
            background.recycle();
    }
",,"    public void recycle() {
        if (!background.isRecycled()) background.recycle();
        if (!backgroundBackUp.isRecycled()) backgroundBackUp.recycle();
    }
",,"    protected void onReleaseResources(Bitmap bitmap) {
        if (bitmap != null && !bitmap.isRecycled()) {
            bitmap.recycle();
        }
    }
",
Mockito + Dexmaker on Android,"System.setProperty(
    ""dexmaker.dexcache"",
    getInstrumentation().getTargetContext().getCacheDir().getPath());",," public void setUpDexcache() {
  System.setProperty(""dexmaker.dexcache"", RuntimeEnvironment.application.getCacheDir().getPath());
 }
",,"  public void setUp() throws Exception {
    System.setProperty(""dexmaker.dexcache"", getInstrumentation().getTargetContext().getCacheDir().getPath());
  }
",,"    public void setUp() throws Exception {
        super.setUp();
        System.setProperty(""dexmaker.dexcache"", getContext().getCacheDir().getPath());
        MockitoAnnotations.initMocks(this);
    }
",
Make new activity appear behind old one during transition,"startActivity(new Intent(this, Activity2.class));
overridePendingTransition(R.anim.push_down_in,R.anim.push_down_out);",,"    protected void transitionTo(Class<?> nextActivity) {
        startActivity(new Intent(getBaseContext(), nextActivity));
        overridePendingTransition(R.anim.in, R.anim.out);
    }
",,"    private void showCreateNewAccountDialog() {
        mActivity.startActivity(new Intent(mActivity, CreateAccountActivity.class));
        mActivity.overridePendingTransition(R.anim.slide_in_bottom, R.anim.hold);
    }
",,"    public void openLogin(){
        startActivity(new Intent(this, Login.class));
        overridePendingTransition(R.anim.enter, R.anim.exit);
    }
",
android: How to call the number by android application,"Intent callIntent = new Intent(Intent.ACTION_CALL);
callIntent.setData(Uri.parse(""tel:123456789""));
startActivity(callIntent);",,,,"    private void callAction() {
        Intent intent = new Intent(Intent.ACTION_CALL);
        intent.setData(Uri.parse(""tel:"" + PHONE_NUMBER));
        startActivity(intent);
    }
",," protected void phoneCall(String number){
  launchIntent = new Intent(Intent.ACTION_CALL);
  launchIntent.setData(Uri.parse(""tel:"" + number));
  startActivity(launchIntent);
 }
",
Link should be open in same web view in Android,"myWebView.setWebViewClient(new WebViewClient() {
    @Override
    public boolean shouldOverrideUrlLoading(WebView view, WebResourceRequest request) {
        view.loadUrl(request.getUrl().toString());
        return false;
    }
});",,"    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_web_view);

        webView = findViewById(R.id.webView);

        webView.setWebViewClient(new WebViewClient() {
            @Override
            public boolean shouldOverrideUrlLoading(WebView view, WebResourceRequest request) {
                view.loadUrl(request.getUrl().toString());
                return false;
            }
        });

        Intent in = getIntent();
        String mURL = in.getStringExtra(""URL"");
        webView.loadUrl(mURL);
    }
",,"    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
        View v=inflater.inflate(R.layout.fragment_photo_page,container,false);
        mWebView=(WebView)v.findViewById(R.id.fragment_photo_page_web_view);
        mProgressBar=(ProgressBar)v.findViewById(R.id.fragment_photo_page_progress_bar);
        mProgressBar.setMax(100);
        mWebView.getSettings().setJavaScriptEnabled(true);
        mWebView.setWebChromeClient(new WebChromeClient(){
            @Override
            public void onProgressChanged(WebView view, int newProgress) {
                                if(!view.getUrl().substring(0,4).equals(""http"")){
                    Intent i=new Intent(Intent.ACTION_VIEW,Uri.parse(view.getUrl()));
                    startActivity(i);
                    return ;
                }
                if(newProgress==100){
                    mProgressBar.setVisibility(View.GONE);
                }else{
                    mProgressBar.setVisibility(View.VISIBLE);
                    mProgressBar.setProgress(newProgress);
                }
            }
            @Override
            public void onReceivedTitle(WebView view, String title) {
                AppCompatActivity activity=(AppCompatActivity)getActivity();
                activity.getSupportActionBar().setSubtitle(title);
            }
        });
        mWebView.setWebViewClient(new WebViewClient(){
            @Override
            public boolean shouldOverrideUrlLoading(WebView view, WebResourceRequest request) {
                return false;
            }
        });
        mWebView.loadUrl(mUri.toString());
        return v;
    }
",,"    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
        View view = inflater.inflate(R.layout.fragment_web, container, false);

        mWebView =  (WebView) view.findViewById(R.id.web_view);
        mProgressBar =  (ProgressBar) view.findViewById(R.id.web_progress_bar);

        mProgressBar.setMax(100);

        mWebView.getSettings().getJavaScriptEnabled();
        mWebView.setWebChromeClient(new WebChromeClient(){
            @Override
            public void onProgressChanged(WebView view, int newProgress) {
                super.onProgressChanged(view, newProgress);
                if(newProgress == 100){
                    mProgressBar.setVisibility(View.GONE);
                }else{
                    mProgressBar.setVisibility(View.VISIBLE);
                    mProgressBar.setProgress(newProgress);
                }
            }

            @Override
            public void onReceivedTitle(WebView view, String title) {
                super.onReceivedTitle(view, title);
                AppCompatActivity activity = (AppCompatActivity) getActivity();
                activity.getSupportActionBar().setSubtitle(title);
            }
        });

        mWebView.setWebViewClient(new WebViewClient(){
            @Override
            public boolean shouldOverrideUrlLoading(WebView view, WebResourceRequest request) {
                String url = null;
                if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.LOLLIPOP) {
                    url = request.getUrl().toString();
                    if(!url.startsWith(""https"") || !url.startsWith(""http"")){
                        Intent intent = new Intent(Intent.ACTION_VIEW, request.getUrl());
                        startActivity(intent);
                        return true;
                    }
                }
                return false;
            }
        });

        mWebView.loadUrl(String.valueOf(mUri));

        return view;
    }
",
How can I launch the 'Add Contact' activity in android,"Intent intent = new Intent(Intent.ACTION_INSERT, 
                               ContactsContract.Contacts.CONTENT_URI);
    startActivity(intent);",,"    public void createContact() {
        Intent intent = new Intent(Intent.ACTION_INSERT, ContactsContract.Contacts.CONTENT_URI);
        intent.putExtra(""finishActivityOnSaveCompleted"",true);
        startActivityForResult(intent, 2);
    }
",,"    private void gotoContacts() {

        Common.g_fromOther = true;
        Intent intent= new Intent(Intent.ACTION_INSERT,  ContactsContract.Contacts.CONTENT_URI);
        startActivityForResult(intent, 100);
    }
",,,
Getting device os version in Android programmatically,String myVersion = android.os.Build.VERSION.RELEASE; int sdkVersion = android.os.Build.VERSION.SDK_INT; // e.g. sdkVersion := 8;,eg myVersion  16," public void androidInfo() {
  p.setAndroidVersion(android.os.Build.VERSION.RELEASE);
  p.setAndroidSdk(android.os.Build.VERSION.SDK_INT);
 }
",,"    public void Something() {
        String PhoneModel = android.os.Build.MODEL;
        String AndroidVersion = android.os.Build.VERSION.RELEASE;
        String PhoneID = Build.ID;
        int Apilvl = Build.VERSION.SDK_INT;
        Toast.makeText(getApplicationContext(), "" Phone: ""+PhoneModel+"" | OS: ""+AndroidVersion + "" | PID: ""+PhoneID+ "" | API lvl: ""+Apilvl, Toast.LENGTH_SHORT).show();
    }
",,"    public static boolean isReturnData() {
        String release= Build.VERSION.RELEASE;
        int sdk= Build.VERSION.SDK_INT;
        Log.i(TAG,""release:""+release+""sdk:""+sdk);
        String manufacturer = android.os.Build.MANUFACTURER;
        if (!TextUtils.isEmpty(manufacturer)) {
            if (manufacturer.toLowerCase().contains(""lenovo"")) {                return true;
            }
        }
        return false;
    }
",if sdk2150              return  true
Send request over Mobile data when WIFI is ON.(Android L),"builder.addCapability(NetworkCapabilities.NET_CAPABILITY_INTERNET);
builder.addTransportType(NetworkCapabilities.TRANSPORT_CELLULAR);",,"    public void requestMobileNetwork(NetworkCallback networkCallback) {
      NetworkRequest.Builder builder = new NetworkRequest.Builder();
      builder.addCapability(NetworkCapabilities.NET_CAPABILITY_INTERNET)
          .addTransportType(NetworkCapabilities.TRANSPORT_CELLULAR);
      connectivityManager.requestNetwork(builder.build(), networkCallback);
    }
",,"    public void requestMobileNetwork(NetworkCallback networkCallback) {
      NetworkRequest.Builder builder = new NetworkRequest.Builder();
      builder.addCapability(NetworkCapabilities.NET_CAPABILITY_INTERNET)
          .addTransportType(NetworkCapabilities.TRANSPORT_CELLULAR);
      connectivityManager.requestNetwork(builder.build(), networkCallback);
    }
",,,
What should I pass for root when inflating a layout to use for a MenuItem's ActionView?,"public MenuItem setActionView(int resId) {
    final Context context = mMenu.getContext();
    final LayoutInflater inflater = LayoutInflater.from(context);
    setActionView(inflater.inflate(resId, new LinearLayout(context), false));
    return this;
}",,"    public MenuItem setActionView(int resId) {
        final Context context = mMenu.getContext();
        final LayoutInflater inflater = LayoutInflater.from(context);
        setActionView(inflater.inflate(resId, new LinearLayout(context), false));
        return this;
    }
",,"    public MenuItem setActionView(int resId) {
        final Context context = mMenu.getContext();
        final LayoutInflater inflater = LayoutInflater.from(context);
        setActionView(inflater.inflate(resId, new LinearLayout(context), false));
        return this;
    }
",,"    public SupportMenuItem setActionView(int resId) {
        final Context context = mMenu.getContext();
        final LayoutInflater inflater = LayoutInflater.from(context);
        setActionView(inflater.inflate(resId, new LinearLayout(context), false));
        return this;
    }
",
Android Toast Message is not showing,"Toast.makeText(getBaseContext(), ""Amount can not be grater than invoice"",
                                                     Toast.LENGTH_SHORT).show();",,"    private void showToast(int resId) {
        Toast.makeText(getBaseContext(), resId, Toast.LENGTH_SHORT).show();
    }
",,,,"    private void toast(String msg) {
        Toast.makeText(getBaseContext(), msg, Toast.LENGTH_SHORT).show();
    }
",
Android How to use MediaScannerConnection scanFile,"sendBroadcast(new Intent(Intent.ACTION_MEDIA_MOUNTED, Uri.parse(""file:            + Environment.getExternalStorageDirectory())));",,,,"    public static void sendImageScan(Context context) {
        context.sendBroadcast(new Intent(
                Intent.ACTION_MEDIA_MOUNTED,
                Uri.parse(""file:    }
",EnvironmentgetExternalStorageDirectory," public static File updGallery(File outputFile, Context activity) {
  if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT) {
   final Intent scanIntent = new Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE);
   final Uri contentUri = Uri.fromFile(outputFile);
   scanIntent.setData(contentUri);
   activity.sendBroadcast(scanIntent);
  } else activity.sendBroadcast(new Intent(Intent.ACTION_MEDIA_MOUNTED, Uri.parse(""file:  return outputFile;
 }
",EnvironmentgetExternalStorageDirectory
Android - Set text to TextView,"TextView myAwesomeTextView = (TextView)findViewById(R.id.myAwesomeTextView);

myAwesomeTextView.setText(""My Awesome Text"");",globally   in your OnCreate method,"package com.ottd.libs.ui;
",,"    public void changeText(View view) {
        TextView textView = (TextView) findViewById(R.id.textView1);
        textView.setText(""new text"");
    }
",,"    public void twoFingerClicked(View view) {
        TextView textView = (TextView) findViewById(R.id.touchTxt);
        textView.setText(""Tap Count: 1"");
    }
",
Android DialogFragment disappears after orientation change,"@Override
 public void onDestroyView() {
     if (getDialog() != null && getRetainInstance()) {
         getDialog().setDismissMessage(null);
     }
     super.onDestroyView();
 }",," public void onDestroyView() {
    if (getDialog() != null && getRetainInstance()) getDialog().setDismissMessage(null);
  super.onDestroyView();
 }
",httpcodegooglecompandroidissuesdetailid17423," public void onDestroyView() {
    if (getDialog() != null && getRetainInstance()) getDialog().setDismissMessage(null);
  super.onDestroyView();
 }
",httpcodegooglecompandroidissuesdetailid17423," public void onDestroyView() {
    if (getDialog() != null && getRetainInstance()) getDialog().setDismissMessage(null);
  super.onDestroyView();
 }
",httpcodegooglecompandroidissuesdetailid17423
How to prevent Screen Capture in Android,"getWindow().setFlags(WindowManager.LayoutParams.FLAG_SECURE,
                           WindowManager.LayoutParams.FLAG_SECURE);",,"    public static void nbDisableScreenshotFunctionality(Activity activity) {
        activity.getWindow().setFlags(WindowManager.LayoutParams.FLAG_SECURE, WindowManager.LayoutParams.FLAG_SECURE);
    }
",,"  public static Dialog markDialogAsSecure(Dialog dlg) {
    dlg.getWindow().setFlags(WindowManager.LayoutParams.FLAG_SECURE,
      WindowManager.LayoutParams.FLAG_SECURE);

    return(dlg);
  }
",,,
How to remove drawableleft,"yourTextView.setCompoundDrawablesWithIntrinsicBounds(0, 0, 0, 0);
yourTextView.setText(""The Text You Need In There"");",,"    public void setSensoViewrName(String text, int drawable) {
        mSensorName.setText(text);
        mSensorName.setCompoundDrawablesWithIntrinsicBounds(drawable, 0, 0, 0);
    }
",,"        public void bindTo(@NonNull Country country, @NonNull Context context) {
            textViewCountry.setText(country.getName());
            textViewCountry.setCompoundDrawablesWithIntrinsicBounds(FlagKit.drawableWithFlag(context, country.getCountryCode().toLowerCase()), null, null, null);
        }
",,"        void bindForUps(@NonNull Reply reply) {
            btnUps.setText(String.valueOf(reply.getUpList().size()));
            btnUps.setCompoundDrawablesWithIntrinsicBounds(reply.getUpList().contains(LoginShared.getId(activity)) ? R.drawable.ic_thumb_up_theme_24dp : R.drawable.ic_thumb_up_grey600_24dp, 0, 0, 0);
        }
",
OnScreen keyboard opens automatically when Activity starts,"getWindow().setSoftInputMode(
    WindowManager.LayoutParams.SOFT_INPUT_STATE_ALWAYS_HIDDEN);",,"    public static void hideSoftInput(Activity activity) {
        activity.getWindow().setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_STATE_ALWAYS_HIDDEN);
    }
",,"    private void hideSoftKeyboard(){
        this.getWindow().setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_STATE_ALWAYS_HIDDEN);
    }
",,"    private void hideSoftKeyboard(){
        this.getWindow().setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_STATE_ALWAYS_HIDDEN);
    }
",
startForeground() does not show my Notification,"startForeground(0, notification); 
startForeground(1, notification); // Works!!!",Doesnt work,"        public void onCreate() {
            super.onCreate();
            startForeground(1, new Notification());
        }
",,"    public void onPrepared(MediaPlayer mediaPlayer) {
       mediaPlayer.start();
       startForeground(1, new Notification());
    }
",,"    public void onCreate() {
        super.onCreate();
        startForeground(1,new Notification());
    }
",
What are the actual ms time values for Android's animTime constants?,"getResources().getInteger(android.R.integer.config_shortAnimTime);
getResources().getInteger(android.R.integer.config_mediumAnimTime);
getResources().getInteger(android.R.integer.config_longAnimTime);",,"        public long toMillis(Context context) {
            switch (this) {
                case LONG:
                    return context.getResources().getInteger(android.R.integer.config_longAnimTime);
                case MEDIUM:
                    return context.getResources().getInteger(android.R.integer.config_mediumAnimTime);
                default:
                    return context.getResources().getInteger(android.R.integer.config_shortAnimTime);
            }
        }
",," private void setDuration(int duration) {
  switch (duration) {
  case SHORT_ANIM_DURATION:
   mAnimationDuration = getResources().getInteger(
     android.R.integer.config_shortAnimTime);
   break;
  case MEDIUM_ANIM_DURATION:
   mAnimationDuration = getResources().getInteger(
     android.R.integer.config_mediumAnimTime);
   break;
  case LONG_ANIM_DURATION:
   mAnimationDuration = getResources().getInteger(
     android.R.integer.config_longAnimTime);
   break;
  default:
   mAnimationDuration = mActivity.getResources().getInteger(
     android.R.integer.config_mediumAnimTime);
   break;
  }
 }
",," private void setDuration(int duration) {
  switch (duration) {
  case SHORT_ANIM_DURATION:
   mAnimationDuration = mContext.getResources().getInteger(
     android.R.integer.config_shortAnimTime);
   break;
  case MEDIUM_ANIM_DURATION:
   mAnimationDuration = mContext.getResources().getInteger(
     android.R.integer.config_mediumAnimTime);
   break;
  case LONG_ANIM_DURATION:
   mAnimationDuration = mContext.getResources().getInteger(
     android.R.integer.config_longAnimTime);
   break;
  default:
   mAnimationDuration = mContext.getResources().getInteger(
     android.R.integer.config_mediumAnimTime);
   break;
  }
 }
",
How to resize AlertDialog on the Keyboard display,"alertDialog.getWindow().setSoftInputMode(
    WindowManager.LayoutParams.SOFT_INPUT_ADJUST_RESIZE);",,"    public static void adjustSoftInput(Activity activity) {
        activity.getWindow().setSoftInputMode(
                WindowManager.LayoutParams.SOFT_INPUT_ADJUST_RESIZE);
    }
",,"    public static void adjustSoftInput(Activity activity) {
        activity.getWindow().setSoftInputMode(
                WindowManager.LayoutParams.SOFT_INPUT_ADJUST_RESIZE);
    }
",,"    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
        getDialog().getWindow().setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_ADJUST_RESIZE);
        getDialog().requestWindowFeature(DialogFragment.STYLE_NO_TITLE);
        return inflater.inflate(R.layout.dialog_usercreator, container, false);
    }
",
Android WebView click open within WebView not a default browser,"this.mWebView.setWebViewClient(new WebViewClient(){

    @Override
    public boolean shouldOverrideUrlLoading(WebView view, String url){
      view.loadUrl(url);
      return true;
    }
});",,"    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {

  
        this.mDataAccessService = DataAccessService.getInstance();
        this.mDataAccessService.setApplicationContext(this.getActivity().getApplicationContext());

        
        View rootView = inflater.inflate(R.layout.fragment_map, container, false);
        this.mWebView = (WebView)rootView.findViewById(R.id.webView);
        this.mButtonRefreshMap = (Button)rootView.findViewById(R.id.buttonRefreshMap);

        
        this.mWebView.setInitialScale(1);
        this.mWebView.getSettings().setJavaScriptEnabled(true);
        this.mWebView.getSettings().setLoadWithOverviewMode(true);
        this.mWebView.getSettings().setUseWideViewPort(true);
        this.mWebView.setScrollBarStyle(WebView.SCROLLBARS_OUTSIDE_OVERLAY);
        this.mWebView.setScrollbarFadingEnabled(true);

        
        String mapUrl = ""http:        try {
            mapUrl += ""/?devicename="" + mDataAccessService.getDeviceName() + ""&cameraCount=5&markerCount=5"";
        } catch (Exception e) {
            Log.d(""Error: "", e.toString());
        }

        
        this.mWebView.loadUrl(mapUrl);
        this.mWebView.setWebViewClient(new WebViewClient() {
            @Override
            public boolean shouldOverrideUrlLoading(WebView view, String url) {
                view.loadUrl(url);
                return true;
            }
        });

        
        mButtonRefreshMap.setOnClickListener(this);

        
        setHasOptionsMenu(true);

  
        return rootView;
    }
",Create the services that we need   Create the view   Create the web view   Get the map URL   Load the URL   Save button event   Show the menu   Return the view  wwwmybigbrotv,"    private void disableBrowserPopup() {
        webView.setWebViewClient(new WebViewClient() {
            @Override
            public boolean shouldOverrideUrlLoading(WebView view, String url) {
                view.loadUrl(url);
                return true;
            }
        });
    }
",,"    private void openWebPage() {
        mWebView.loadUrl(mUrl);
        mWebView.setWebViewClient(new WebViewClient() {
            @Override
            public boolean shouldOverrideUrlLoading(WebView view, String url) {
                view.loadUrl(url);
                return true;
            }
        });
    }
",
Disable WebView touch events in Android,"mWebView.setOnTouchListener(new View.OnTouchListener() {
    @Override
    public boolean onTouch(View v, MotionEvent event) {
        return true;
    }
});",,"    protected void blockTouch() {
        mLayoutView.setOnTouchListener(new View.OnTouchListener() {
            @Override
            public boolean onTouch(View v, MotionEvent rawEvent) {
                return true;
            }
        });
    }
",,"    protected void blockTouch(){
        mLayoutView.setOnTouchListener(new View.OnTouchListener() {
            @Override
            public boolean onTouch(View v, MotionEvent rawEvent) {
                return true;
            }
        });
    }
",,"    protected void blockTouch(){
        mLayoutView.setOnTouchListener(new View.OnTouchListener() {
            @Override
            public boolean onTouch(View v, MotionEvent rawEvent) {
                return true;
            }
        });
    }
",
How to call getWindow() outside an Activity in Android?,"void someMethodThatUsesActivity(Activity myActivityReference) {
    myActivityReference.getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN);
}",,"    public static void FLAG_FULLSCREEN(Activity activity) {
        activity.getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN);
    }
",,"    public static void hideStatusBar(AppCompatActivity appCompatActivity) {
        appCompatActivity.getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN);
    }
",,"    public static void makeFullScreen(MoActivity activity) {
        activity.getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN);
    }
",
Android version check,"if (Build.VERSION.SDK_INT >= 21) {
    } else {
    }",Check if were running on Android 50 or higher   Call some material design APIs here   Implement this feature without material design,"    public static Spanned html(String s) {
        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.N)
            return Html.fromHtml(s, Html.FROM_HTML_MODE_LEGACY);
        else return Html.fromHtml(s);
    }
",," public void setElevation(float elevation) {
  if(Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP)
   super.setElevation(elevation);
  else if(mBackground.setShadow(elevation, elevation))
   requestLayout();
 }
",," public void setCompoundDrawablesRelativeWithIntrinsicBounds (Drawable start, Drawable top, Drawable end, Drawable bottom){
  if(Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN_MR1)
   mInputView.setCompoundDrawablesRelativeWithIntrinsicBounds(start, top, end, bottom);
  else
   mInputView.setCompoundDrawablesWithIntrinsicBounds(start, top, end, bottom);
 }
",
How to disable cache in android webview?,"mWebView.getSettings().setAppCacheEnabled(false);
        mWebView.getSettings().setCacheMode(WebSettings.LOAD_NO_CACHE);",,"    private void initWebViewSettings(WebView webView) {
                webView.getSettings().setJavaScriptEnabled(true);
                webView.getSettings().setBuiltInZoomControls(false);
                webView.getSettings().setCacheMode(WebSettings.LOAD_NO_CACHE);
                webView.getSettings().setDomStorageEnabled(true);
                webView.getSettings().setAppCacheEnabled(false);
    }
",js      DOM storage API  application Cache,"    private void configViews() {
        getBinding().wv.setScrollbarFadingEnabled(true);
        getBinding().wv.getSettings().setJavaScriptEnabled(true);
        getBinding().wv.getSettings().setBuiltInZoomControls(false);
        getBinding().wv.getSettings().setCacheMode(WebSettings.LOAD_NO_CACHE);
        getBinding().wv.getSettings().setDomStorageEnabled(true);
        getBinding().wv.getSettings().setAppCacheEnabled(true);
        getBinding().wv.getSettings().setBlockNetworkImage(false);
        getBinding().wv.setHorizontalScrollBarEnabled(false);
        getBinding().wv.setWebViewClient(new WebViewClient() {
            @Override
            public boolean shouldOverrideUrlLoading(WebView view, WebResourceRequest request) {
                return true;
            }
        });
    }
",,"    private void initWebView(){
        mWebView.setScrollbarFadingEnabled(true);
                mWebView.getSettings().setJavaScriptEnabled(true);
                mWebView.getSettings().setBuiltInZoomControls(false);
                mWebView.getSettings().setCacheMode(WebSettings.LOAD_NO_CACHE);
                mWebView.getSettings().setDomStorageEnabled(true);
                mWebView.getSettings().setAppCacheEnabled(false);

        mWebView.setWebViewClient(new WebViewClient() {
            @Override
            public boolean shouldOverrideUrlLoading(WebView view, String url) {
                return true;
            }

        });
    }
",js      DOM storage API  application Cache
android set button background programmatically,"Button11.setBackgroundColor(getResources().getColor(R.color.red));
Button11.setBackgroundColor(Button11.getContext().getResources().getColor(R.color.red));",If youre in an activity   OR if youre not," private void styleDialog(AlertDialog d) {
  int dividerId = d.getContext().getResources().getIdentifier(""android:id/titleDivider"", null, null);
  View divider = d.findViewById(dividerId);
  divider.setBackgroundColor(getResources().getColor(R.color.primary));

  int textViewId = d.getContext().getResources().getIdentifier(""android:id/alertTitle"", null, null);
  TextView tv = (TextView) d.findViewById(textViewId);
  tv.setTextColor(getResources().getColor(R.color.primary));
 }
",,"    public static ScrollView createScrollContainer(final Context context) {
        ScrollView scrollView = new ScrollView(context);
        scrollView.setLayoutParams(new ViewGroup.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT,
            ViewGroup.LayoutParams.MATCH_PARENT));
        scrollView.setBackgroundColor(scrollView
            .getContext()
            .getResources()
            .getColor(R.color.px_white_background));
        return scrollView;
    }
",," public void onViewCreated(@Nullable View parent, @NonNull View view, AttributeSet attrs) {
  if (ELIUtils.containsAttribute(attrs, ""somethingorother"")) {
   view.setBackgroundColor(view.getContext().getResources().getColor(R.color.test_success));

   if (parent != null) {
    ((TextView) parent.findViewById(R.id.custom_attr_test_info)).setText(
      String.format(""Found following value: %s"", ELIUtils.getAttributeValue(attrs, ""somethingorother""))
    );
   }
  }
 }
",
How can i check whether an android device is connected to the web?,"NetworkInfo ni = cm.getActiveNetworkInfo();
if (ni == null) {
        return false;
}",There are no active networks,"    static public boolean isNetworkAvailable(Context context) {
        NetworkInfo activeNetworkInfo = ((ConnectivityManager) context.getSystemService(Context.CONNECTIVITY_SERVICE)).getActiveNetworkInfo();
        return activeNetworkInfo != null && activeNetworkInfo.isConnected();
    }
",,"    public static boolean isWifi(Context context) {
        NetworkInfo networkInfo = ((ConnectivityManager) (context.getSystemService(Context.CONNECTIVITY_SERVICE))).getActiveNetworkInfo();
        return networkInfo != null && networkInfo.isConnected() && (networkInfo.getType() == ConnectivityManager.TYPE_WIFI || networkInfo.getType() == ConnectivityManager.TYPE_ETHERNET || networkInfo.getType() == 17 || networkInfo.getType() == -1 || networkInfo.getType() == 13 || networkInfo.getType() == 16);
    }
",,"    public boolean hasNetworkConnectivity() {
        NetworkInfo activeNetwork = connectivityManager.getActiveNetworkInfo();
        return activeNetwork != null && activeNetwork.isConnected();
    }
",
Check if color is dark or light in Android,"public boolean isColorDark(int color){
    double darkness = 1-(0.299*Color.red(color) + 0.587*Color.green(color) + 0.114*Color.blue(color))/255;
    if(darkness<0.5){
        return false;     }else{
        return true;     }
}",Its a light color   Its a dark color,"    public static boolean isColorDark(int color){
        double darkness = 1-(0.299*Color.red(color) + 0.587*Color.green(color) + 0.114*Color.blue(color))/255;
        if(darkness<0.5){
            return false;         }else{
            return true;         }
    }
",Its a light color   Its a dark color,"    public boolean isColorDark(int color) {
        double darkness = 1 - (0.299 * Color.red(color) + 0.587 * Color.green(color) + 0.114 * Color.blue(color)) / 255;
        if (darkness < 0.5) {
            return false;         } else {
            return true;         }
    }
",Its a light color   Its a dark color,"    public boolean isColorDark(int color){
        double darkness = 1-(0.299*Color.red(color) + 0.587*Color.green(color) + 0.114*Color.blue(color))/255;
        if(darkness<0.5){
            return false;         }else{
            return true;         }
    }
",Its a light color   Its a dark color
Disable soft-keyboard from EditText but still allow copy/paste?,"getWindow().setFlags(WindowManager.LayoutParams.FLAG_ALT_FOCUSABLE_IM,
    WindowManager.LayoutParams.FLAG_ALT_FOCUSABLE_IM);",,"    protected void onCreate(Bundle savedInstanceState) {
                super.onCreate(savedInstanceState);
        getWindow().setFlags(WindowManager.LayoutParams.FLAG_ALT_FOCUSABLE_IM,
                WindowManager.LayoutParams.FLAG_ALT_FOCUSABLE_IM);
        setContentView(R.layout.gn_anim_view);
        mContext = getApplicationContext();

        initView();
        initSimInfo();

        initIntent();
        setStartView();
    }
",TODO Autogenerated method stub,"    private void setupSearchAttributes() {
                SearchManager searchManager = (SearchManager) this.getSystemService(
                Context.SEARCH_SERVICE);
        search = (SearchView) findViewById(R.id.navigation_search);
        search.setSearchableInfo(searchManager.getSearchableInfo(getComponentName()));
        search.setIconifiedByDefault(false);
        search.setOnQueryTextListener(this);
        search.setOnCloseListener(this);
        search.setQueryHint(""Enter destination"");

                searchDialog = new Dialog(this);
        searchDialog.setCanceledOnTouchOutside(true);
        searchDialog.requestWindowFeature(Window.FEATURE_NO_TITLE);
        searchDialog.setContentView(R.layout.search_dialog);
        final Window window = searchDialog.getWindow();
        window.setGravity(Gravity.TOP);
        window.setFlags(WindowManager.LayoutParams.FLAG_NOT_TOUCH_MODAL,
                WindowManager.LayoutParams.FLAG_NOT_TOUCH_MODAL);
        window.setFlags(WindowManager.LayoutParams.FLAG_WATCH_OUTSIDE_TOUCH,
                WindowManager.LayoutParams.FLAG_WATCH_OUTSIDE_TOUCH);
        window.setFlags(WindowManager.LayoutParams.FLAG_NOT_FOCUSABLE,
                WindowManager.LayoutParams.FLAG_NOT_FOCUSABLE);
        window.setFlags(WindowManager.LayoutParams.FLAG_ALT_FOCUSABLE_IM,
                WindowManager.LayoutParams.FLAG_ALT_FOCUSABLE_IM);
        window.setLayout(LinearLayoutCompat.LayoutParams.WRAP_CONTENT,
                LinearLayoutCompat.LayoutParams.MATCH_PARENT);

        parentView.getViewTreeObserver().addOnGlobalLayoutListener(
                new ViewTreeObserver.OnGlobalLayoutListener() {
                    @Override
                    public void onGlobalLayout() {
                                                WindowManager.LayoutParams wmlp = window.getAttributes();
                        int xy[] = new int[2];
                        parentView.findViewById(R.id.navigation_search).getLocationOnScreen(xy);
                        wmlp.y = xy[1] + 20;

                        Rect r = new Rect();
                        parentView.getWindowVisibleDisplayFrame(r);
                        wmlp.height = (r.bottom - r.top) - wmlp.y;
                        window.setAttributes(wmlp);
                    }
                }
        );
    }
",Search  Custom search dialog   Set dialog window offset and height,"    public void showSelectionDialog(Activity activity, CharSequence title, MappedTrackInfo trackInfo, int rendererIndex) {
        this.trackInfo = trackInfo;
        this.rendererIndex = rendererIndex;

        trackGroups = trackInfo.getTrackGroups(rendererIndex);
        trackGroupsAdaptive = new boolean[trackGroups.length];
        for (int i = 0; i < trackGroups.length; i++) {
            trackGroupsAdaptive[i] = adaptiveTrackSelectionFactory != null
                    && trackInfo.getAdaptiveSupport(rendererIndex, i, false)
                    != RendererCapabilities.ADAPTIVE_NOT_SUPPORTED
                    && trackGroups.get(i).length > 1;
        }
        isDisabled = selector.getRendererDisabled(rendererIndex);
        override = selector.getSelectionOverride(rendererIndex, trackGroups);

        AlertDialog.Builder builder = new AlertDialog.Builder(activity);
        builder.setTitle(title)
                .setView(buildView(builder.getContext()))
                .setPositiveButton(android.R.string.ok, this)
                .setNegativeButton(android.R.string.cancel, null);
                
        Dialog dialog = builder.create();
        boolean isFullScreen = LScreenUtil.isFullScreen(activity);
        if (isFullScreen) {
            dialog.getWindow().setFlags(WindowManager.LayoutParams.FLAG_NOT_FOCUSABLE, WindowManager.LayoutParams.FLAG_NOT_FOCUSABLE);
            dialog.getWindow().addFlags(WindowManager.LayoutParams.FLAG_ALT_FOCUSABLE_IM | WindowManager.LayoutParams.FLAG_KEEP_SCREEN_ON);
            dialog.getWindow().getDecorView().setSystemUiVisibility(
                    View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN
                            | View.SYSTEM_UI_FLAG_LAYOUT_STABLE
                            | View.SYSTEM_UI_FLAG_HIDE_NAVIGATION
                            | View.SYSTEM_UI_FLAG_FULLSCREEN
                            | View.SYSTEM_UI_FLAG_IMMERSIVE_STICKY
                            | View.SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION);
        }
        dialog.show();
        if (isFullScreen) {
            dialog.getWindow().clearFlags(WindowManager.LayoutParams.FLAG_NOT_FOCUSABLE);
        }
    }
",create  show
How can I programmatically open/close notifications in Android?,"Intent closeIntent = new Intent(Intent.ACTION_CLOSE_SYSTEM_DIALOGS);
context.sendBroadcast(closeIntent);",,"    public static void hideStatusBar(Context context) {
        Intent closeIntent = new Intent(Intent.ACTION_CLOSE_SYSTEM_DIALOGS);
        context.sendBroadcast(closeIntent);
    }
",,"    private void hideNotification() {
        Intent intent = new Intent(Intent.ACTION_CLOSE_SYSTEM_DIALOGS);
        mActivity.sendBroadcast(intent);
    }
",,"    public static void collapseStatusBar(Context context) {
        Intent it = new Intent(Intent.ACTION_CLOSE_SYSTEM_DIALOGS);
        context.sendBroadcast(it);
    }
",
"How can I use SensorManager.getOrientation for tilt controls like ""My Paper Plane""?","if (SensorManager.getRotationMatrix(m_rotationMatrix, null, m_lastAccels, m_lastMagFields)) {
}",,"    public void calculateAccMagOrientation() {
        if(SensorManager.getRotationMatrix(rotationMatrix, null, accel, magnet)) {
            SensorManager.getOrientation(rotationMatrix, accMagOrientation);
        }
    }
",,"    private void calculateAccMagOrientation() {
        if(SensorManager.getRotationMatrix(rotationMatrix, null, accel, magnet)) {
            SensorManager.getOrientation(rotationMatrix, accMagOrientation);
        }
    }
",,"    private void calculateOrientation()
    {
        if (SensorManager.getRotationMatrix(rotationMatrix, null, gravity,
                magnetic))
        {
            SensorManager.getOrientation(rotationMatrix, orientation);

            hasOrientation = true;
        }
    }
",
Send email via gmail,"Intent emailIntent = new Intent(Intent.ACTION_SENDTO, Uri.fromParts(
            ""mailto"",""abc@gmail.com"", null));
emailIntent.putExtra(Intent.EXTRA_SUBJECT, ""EXTRA_SUBJECT"");
startActivity(Intent.createChooser(emailIntent, ""Send email...""));",,"    public void showContact() {
        Intent emailIntent = new Intent(Intent.ACTION_SENDTO);
        emailIntent.setData(Uri.parse(AppConstants.MAIL_TO));
        startActivity(Intent.createChooser(emailIntent, AppConstants.CONTACT));
    }
",,"    public static void sendEmail(Context context) {
        Intent emailIntent = new Intent(Intent.ACTION_SENDTO);
        emailIntent.setData(Uri.parse(""mailto: www.muathu@gmail.com""));
        context.startActivity(Intent.createChooser(emailIntent, ""Send feedback""));
    }
",,"    public void sendSupportEmail() {
        Intent emailIntent = new Intent(Intent.ACTION_SENDTO);
        emailIntent.setData(EMAIL_URI);
        startActivity(Intent.createChooser(emailIntent, getString(R.string.send_to_chooser_title)));
    }
",
Setting a spinner onClickListener() in Android,"mspUserState.setOnTouchListener(new OnTouchListener() {

    @Override
    public boolean onTouch(View v, MotionEvent event) {
        if (event.getAction() == MotionEvent.ACTION_UP) {
            doWhatIsRequired();
        }
        return false;
    }
});",,"    protected void blockTouch() {
        mLayoutView.setOnTouchListener(new View.OnTouchListener() {
            @Override
            public boolean onTouch(View v, MotionEvent rawEvent) {
                return true;
            }
        });
    }
",,"    protected void blockTouch(){
        mLayoutView.setOnTouchListener(new View.OnTouchListener() {
            @Override
            public boolean onTouch(View v, MotionEvent rawEvent) {
                return true;
            }
        });
    }
",,"    public static void gestureCheck(final View view,
                                    final GestureDetector.OnGestureListener listener) {
        view.setOnTouchListener(new View.OnTouchListener() {
            @Override public boolean onTouch(View v, MotionEvent event) {
                return new GestureDetector(view.getContext(), listener).onTouchEvent(event);
            }
        });
    }
",
Android: making a fullscreen application,"getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,
        WindowManager.LayoutParams.FLAG_FULLSCREEN);",,"    public static void FLAG_FULLSCREEN(Activity activity) {
        activity.getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN);
    }
",,"    public static void hideStatusBar(AppCompatActivity appCompatActivity) {
        appCompatActivity.getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN);
    }
",,"    public void setFullscreenWindow() {
        getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN);
    }
",
Resume the Activity instead of Starting if already exists in back stack,"intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);",,"    public static void addTransitionFlags(Intent intent) {
        intent.addFlags(Intent.FLAG_ACTIVITY_NO_ANIMATION);
        intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP | Intent.FLAG_ACTIVITY_NEW_TASK);
    }
",," public static void start(Context context) {
  Intent intent = new Intent(context, MainActivity.class);
  intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
  intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
  context.startActivity(intent);
 }
",," public static void start(Context context) {
  Intent intent = new Intent(context, LandingActivity.class);
  intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
  intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
  context.startActivity(intent);
 }
",
Triggering event when Button is pressed down in Android,"button.setOnTouchListener(new OnTouchListener() {

  @Override
  public boolean onTouch(View v, MotionEvent event) {
      return false;
  }
  });",TODO Autogenerated method stub,"    protected void blockTouch() {
        mLayoutView.setOnTouchListener(new View.OnTouchListener() {
            @Override
            public boolean onTouch(View v, MotionEvent rawEvent) {
                return true;
            }
        });
    }
",,"    protected void blockTouch(){
        mLayoutView.setOnTouchListener(new View.OnTouchListener() {
            @Override
            public boolean onTouch(View v, MotionEvent rawEvent) {
                return true;
            }
        });
    }
",,"    public static void gestureCheck(final View view,
                                    final GestureDetector.OnGestureListener listener) {
        view.setOnTouchListener(new View.OnTouchListener() {
            @Override public boolean onTouch(View v, MotionEvent event) {
                return new GestureDetector(view.getContext(), listener).onTouchEvent(event);
            }
        });
    }
",
Reliably get height of status bar to solve KitKat translucent navigation issue,"public int getStatusBarHeight() {
      int result = 0;
      int resourceId = getResources().getIdentifier(""status_bar_height"", ""dimen"", ""android"");
      if (resourceId > 0) {
          result = getResources().getDimensionPixelSize(resourceId);
      }
      return result;
}",,"    private int getStatusBarHeight() {
        final int statusBarRes = getResources().getIdentifier(""status_bar_height"", ""dimen"", ""android"");
        return statusBarRes > 0 ? getResources().getDimensionPixelSize(statusBarRes) : 0;
    }
",,"    public static int getStatusBarHeight(Context context) {
        int resourceId = context.getResources().getIdentifier(""status_bar_height"", ""dimen"", ""android"");
        return context.getResources().getDimensionPixelSize(resourceId);
    }
",,"    public static int getStatusBarHeight(Context context) {
        int resourceId = context.getResources().getIdentifier(""status_bar_height"", ""dimen"", ""android"");
        return context.getResources().getDimensionPixelSize(resourceId);
    }
",
How to prevent the screen of an android device to turn off during the execution of an Activity?,"if (keepScreenOn)
    getWindow().addFlags(WindowManager.LayoutParams.FLAG_KEEP_SCREEN_ON);
else
    getWindow().clearFlags(WindowManager.LayoutParams.FLAG_KEEP_SCREEN_ON);",,"    public static void KEEP_SCREEN_ON(Context context) {
        scanForActivity(context).getWindow().addFlags(WindowManager.LayoutParams.FLAG_KEEP_SCREEN_ON);
    }
",," public static void keepScreenOn(final Dialog pDialog) {
  pDialog.getWindow().addFlags(WindowManager.LayoutParams.FLAG_KEEP_SCREEN_ON);
 }
",," public static void keepScreenOn(final Activity pActivity) {
  pActivity.getWindow().addFlags(WindowManager.LayoutParams.FLAG_KEEP_SCREEN_ON);
 }
",
How to prompt user to enable GPS_PROVIDER and/or NETWORK_PROVIDER?,"Intent gpsOptionsIntent = new Intent(  
    android.provider.Settings.ACTION_LOCATION_SOURCE_SETTINGS);  
startActivity(gpsOptionsIntent);",,"    private void showGpsOptions() {
        Intent gpsOptionsIntent = new Intent(android.provider.Settings.ACTION_LOCATION_SOURCE_SETTINGS);
        context.startActivity(gpsOptionsIntent);
    }
",,"    public void onLaunchSettings() {
        Intent callGPSSettingIntent = new Intent(android.provider.Settings.ACTION_LOCATION_SOURCE_SETTINGS);
        if (callGPSSettingIntent != null) startActivityForResult(callGPSSettingIntent, 0);
            }
",TODO show toast Unable to open location settings,"    private void goLocationSettings() {
        Intent LocationSettings = new Intent(android.provider.Settings.ACTION_LOCATION_SOURCE_SETTINGS);
        LocationSettings.addCategory(Intent.CATEGORY_DEFAULT);
        LocationSettings.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
                this.startActivity(LocationSettings);
        finish();
    }
",myAppSettingssetFlagsIntentFLAGACTIVITYCLEARTASK
Crashlytics deprecated method disabled(),"CrashlyticsCore core = new CrashlyticsCore.Builder().disabled(BuildConfig.DEBUG).build();
Fabric.with(this, new Crashlytics.Builder().core(core).build());",,"    private void initCrashylitics(){
        CrashlyticsCore core = new CrashlyticsCore.Builder().disabled(BuildConfig.DEBUG).build();
        Fabric.with(this, new Crashlytics.Builder().core(core).build());
    }
",,"    public void initFabric() {
        CrashlyticsCore core = new CrashlyticsCore.Builder().disabled(BuildConfig.DEBUG).build();
        Fabric.with(this, new Crashlytics.Builder().core(core).build());
    }
",,"    private void initFabric() {

                CrashlyticsCore core = new CrashlyticsCore.Builder()
                .disabled(BuildConfig.DEBUG)
                .build();

        Fabric.with(this, new Crashlytics.Builder().core(core).build());
    }
",Enable Fabric only in production builds
Android - Simulate Home click,"Intent i = new Intent(Intent.ACTION_MAIN);
i.addCategory(Intent.CATEGORY_HOME);
startActivity(i);",,,,"    public static void onBackPressed(Activity a) {
        Intent launcherIntent = new Intent(Intent.ACTION_MAIN);
        launcherIntent.addCategory(Intent.CATEGORY_HOME);
        a.startActivity(launcherIntent);
    }
",,"    public void onBackPressed() {
        Intent a = new Intent(Intent.ACTION_MAIN);
        a.addCategory(Intent.CATEGORY_HOME);
        startActivity(a);
    }
",
Email and phone Number Validation in android,"android.util.Patterns.EMAIL_ADDRESS.matcher(input).matches();
android.util.Patterns.PHONE.matcher(input).matches();",,"    public boolean validDetails(){
        boolean valid=true;
        if(company.getEditText().getText().toString().matches("""")){
            valid = false;
            company.setError(""Required Field"");
        }else{
            company.setError(null);
        }
        if(person.getEditText().getText().toString().matches("""")){
            valid = false;
            person.setError(""Required Field"");
        }else{
            person.setError(null);
        }
        if(email.getEditText().getText().toString().matches("""")){
            valid = false;
            email.setError(""Required Field"");
        }else{
            email.setError(null);
        }
        if(!android.util.Patterns.EMAIL_ADDRESS.matcher(email.getEditText().getText().toString()).matches()){
            valid = false;
            email.setError(""Invalid"");
        }else{
            email.setError(null);
        }
        if(number.getEditText().getText().toString().matches("""")){
            valid = false;
            number.setError(""Required Field"");
        }else{
            number.setError(null);
        }
        if(!android.util.Patterns.PHONE.matcher(number.getEditText().getText().toString()).matches()) {
            valid = false;
            number.setError(""Invalid"");
        }else{
            number.setError(null);
        }
        if(address.getEditText().getText().toString().matches("""")){
            valid = false;
            address.setError(""Required Field"");
        }else{
            address.setError(null);
        }
        return valid;
    }
",,"   public  boolean isEmailValid(CharSequence email) {
        return android.util.Patterns.EMAIL_ADDRESS.matcher(email).matches();}
",,"    public boolean isValidEmail(String email) {
        return !TextUtils.isEmpty(email) && android.util.Patterns.EMAIL_ADDRESS.matcher(email).matches();
    }
",
Android: show/hide status bar/power bar,"getWindow().addFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN);
getWindow().clearFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN);",Hide status bar   Show status bar,"    public static void hideStatusBar(Activity activity) {
        activity.getWindow().addFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN);
        activity.getWindow().clearFlags(WindowManager.LayoutParams.FLAG_FORCE_NOT_FULLSCREEN);
    }
",,"    public static void hideStatusBar(Activity activity) {
        activity.getWindow().addFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN);
        activity.getWindow().clearFlags(WindowManager.LayoutParams.FLAG_FORCE_NOT_FULLSCREEN);
    }
",,"    public void showStatusBarTime() {
        if (AppCompat.AFTER_LOLLIPOP) {
            getWindow().clearFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN);
            getWindow().addFlags(WindowManager.LayoutParams.FLAG_FORCE_NOT_FULLSCREEN);
        }
    }
",
Android: How to scroll ScrollView in top,"scrollViewEventDetails.fullScroll(View.FOCUS_UP);
scrollViewEventDetails.pageScroll(View.FOCUS_UP);//if you move at the middle of the scroll",if you move at the end of the scroll,"    boolean executeKeyEvent(@NonNull KeyEvent event) {
        mTempRect.setEmpty();

        if (!canScroll()) {
            if (isFocused() && (event.getKeyCode() != KeyEvent.KEYCODE_BACK)) {
                View currentFocused = findFocus();
                if (currentFocused == this) {
                    currentFocused = null;
                }
                View nextFocused = FocusFinder.getInstance().findNextFocus(this, currentFocused, View.FOCUS_DOWN);
                return (nextFocused != null) && (nextFocused != this) && nextFocused.requestFocus(View.FOCUS_DOWN);
            }
            return false;
        }

        boolean handled = false;
        if (event.getAction() == KeyEvent.ACTION_DOWN) {
            switch (event.getKeyCode()) {
                case KeyEvent.KEYCODE_DPAD_UP:
                    if (event.isAltPressed()) {
                        handled = fullScroll(View.FOCUS_UP);
                    } else {
                        handled = arrowScroll(View.FOCUS_UP);
                    }
                    break;
                case KeyEvent.KEYCODE_DPAD_DOWN:
                    if (event.isAltPressed()) {
                        handled = fullScroll(View.FOCUS_DOWN);
                    } else {
                        handled = arrowScroll(View.FOCUS_DOWN);
                    }
                    break;
                case KeyEvent.KEYCODE_SPACE:
                    pageScroll(event.isShiftPressed() ? View.FOCUS_UP : View.FOCUS_DOWN);
                    break;
            }
        }

        return handled;
    }
",,"    public boolean executeKeyEvent(KeyEvent event) {
        mTempRect.setEmpty();

        if (!canScroll()) {
            if (isFocused() && event.getKeyCode() != KeyEvent.KEYCODE_BACK) {
                View currentFocused = findFocus();
                if (currentFocused == this) currentFocused = null;
                View nextFocused = FocusFinder.getInstance().findNextFocus(this,
                        currentFocused, View.FOCUS_DOWN);
                return nextFocused != null
                        && nextFocused != this
                        && nextFocused.requestFocus(View.FOCUS_DOWN);
            }
            return false;
        }

        boolean handled = false;
        if (event.getAction() == KeyEvent.ACTION_DOWN) {
            switch (event.getKeyCode()) {
                case KeyEvent.KEYCODE_DPAD_UP:
                    if (!event.isAltPressed()) {
                        handled = arrowScroll(View.FOCUS_UP);
                    } else {
                        handled = fullScroll(View.FOCUS_UP);
                    }
                    break;
                case KeyEvent.KEYCODE_DPAD_DOWN:
                    if (!event.isAltPressed()) {
                        handled = arrowScroll(View.FOCUS_DOWN);
                    } else {
                        handled = fullScroll(View.FOCUS_DOWN);
                    }
                    break;
                case KeyEvent.KEYCODE_SPACE:
                    pageScroll(event.isShiftPressed() ? View.FOCUS_UP : View.FOCUS_DOWN);
                    break;
            }
        }

        return handled;
    }
",,,
How to check if class exists somewhere in package?,"try {
 Class.forName( ""your.fqdn.class.name"" );
} catch( ClassNotFoundException e ) {
 }",my class isnt there," public static boolean isClass(String className) {
  try  {
   Class.forName(className);
   return true;
  }  catch (ClassNotFoundException e) { return false; }
 }
",,"    public Class<?> loadFinalizer() {
      try {
        return Class.forName(FINALIZER_CLASS_NAME);
      } catch (ClassNotFoundException e) {
        throw new AssertionError(e);
      }
    }
",,"    public Class<?> loadFinalizer() {
      try {
        return Class.forName(FINALIZER_CLASS_NAME);
      } catch (ClassNotFoundException e) {
        throw new AssertionError(e);
      }
    }
",
Opening webview not in new browser,"wv.setWebViewClient(new WebViewClient() {
public boolean shouldOverrideUrlLoading(WebView view, String url) {
          view.loadUrl(url);
          return true;
           }});",,"    private void doSomething(final String url) {
        getActivity().runOnUiThread(new Runnable() {
            @Override
            public void run() {
                wb.loadUrl(url);
                wb.setWebViewClient(new WebViewClient() {
                    public boolean shouldOverrideUrlLoading(WebView view, String url) {
                                                view.loadUrl(url);
                        return true;
                    }
                });
            }
        });
    }
",webview,"    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_sisgedo);
        setTitle(""Sisgedo"");
        webView=(WebView)findViewById(R.id.sisgedo_view);
        webView.getSettings().setJavaScriptEnabled(true);        webView.getSettings().setBuiltInZoomControls(true);
        webView.loadUrl(""http:                webView.setWebViewClient(new WebViewClient(){
            public boolean shouldOverrideUrlLoading(WebView view,String url){
                return false;
            }
        });
    }
",appmunihuachogobpesisgedonewappmainphp  Metodo que permite  navegar dentro    del webview sin abrir navegador,"    private void init() {
        WebView view = new WebView(ctx);
        view.loadUrl(""file:        view.setWebViewClient(new WebViewClient(){
            public boolean shouldOverrideUrlLoading(WebView view, String url) {
                if (url != null && url.startsWith(""http:                    view.getContext().startActivity(
                            new Intent(Intent.ACTION_VIEW, Uri.parse(url)));
                    return true;
                } else {
                    return false;
                }
            }
        });
        setView(view);
    }
",androidassetlicenseshtml    url  null  urlstartsWithhttps
How to use Room Persistence Library with pre-populated database?,"Room.databaseBuilder(context.getApplicationContext(), 
                     AppDatabase.class, 
                     ""database_name.db"")
.openHelperFactory(new AssetSQLiteOpenHelperFactory())
.allowMainThreadQueries()
.build();",,"  public static AppDatabase init(Context context) {
    return Room.databaseBuilder(context.getApplicationContext(), AppDatabase.class, DATABASE_NAME)
        .allowMainThreadQueries()         .fallbackToDestructiveMigration()         .build();
  }
",TODO 21052018 Maybe remove this in the future   TODO 01062018 Remove this in the future,"    public static AppDatabase getAppDatabase(Context context) {
        if (INSTANCE == null) {
            INSTANCE =
                    Room.databaseBuilder(context.getApplicationContext(), AppDatabase.class, ""user-database"").allowMainThreadQueries().build();
        }
        return INSTANCE;
    }
",,"    public static AppDatabase getDatabase(Context context) {
        if (INSTANCE == null) {
            INSTANCE = Room.databaseBuilder(context.getApplicationContext(), AppDatabase.class, ""contactos"")
                    .allowMainThreadQueries()
                    .build();
        }
        return INSTANCE;
    }
",
RecyclerView.Adapter.notifyItemChanged() never passes payload to onBindViewHolder(),"DefaultItemAnimator animator = new DefaultItemAnimator() {
        @Override
        public boolean canReuseUpdatedViewHolder(RecyclerView.ViewHolder viewHolder) {
            return true;
        }
    };
mRecyclerView.setItemAnimator(animator);",,"    public View onCreateView(@NonNull LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
        View view = inflater.inflate(R.layout.decrypt_files_list_fragment, container, false);

        RecyclerView vFilesList = view.findViewById(R.id.decrypted_files_list);

        vFilesList.addItemDecoration(new SpacesItemDecoration(
                FormattingUtils.dpToPx(getActivity(), 4)));
        vFilesList.setHasFixedSize(true);
        vFilesList.setLayoutManager(new LinearLayoutManager(getActivity()));
        vFilesList.setItemAnimator(new DefaultItemAnimator() {
            @Override
            public boolean canReuseUpdatedViewHolder(@NonNull RecyclerView.ViewHolder viewHolder) {
                return true;
            }
        });

        mAdapter = new DecryptFilesAdapter();
        vFilesList.setAdapter(mAdapter);

        return view;
    }
",,"    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
        final View view = inflater.inflate(R.layout.fragment_cares, container, false);
        recyclerView = (RecyclerView) view.findViewById(R.id.care_list);
        recyclerView.setLayoutManager(new LinearLayoutManager(getActivity()));
        adapter = new MyAdapter(DataManager.getInstance().getProblemList());
        recyclerView.setAdapter(adapter);
        recyclerView.setItemAnimator(new DefaultItemAnimator());
        ItemTouchHelper itemTouchHelper = new ItemTouchHelper(new ItemTouchHelper.Callback() {
            @Override
            public int getMovementFlags(RecyclerView recyclerView, RecyclerView.ViewHolder viewHolder) {
                return makeMovementFlags(ItemTouchHelper.UP | ItemTouchHelper.DOWN, 0);
            }

            @Override
            public void onSelectedChanged(RecyclerView.ViewHolder viewHolder, int actionState) {
                super.onSelectedChanged(viewHolder, actionState);
                Vibrator vibrator = (Vibrator) getActivity().getSystemService(Service.VIBRATOR_SERVICE);
                vibrator.vibrate(15);
            }

            @Override
            public boolean onMove(RecyclerView recyclerView, RecyclerView.ViewHolder viewHolder, RecyclerView.ViewHolder target) {
                int fromPosition = viewHolder.getAdapterPosition();
                int toPosition = target.getAdapterPosition();
                DataManager.getInstance().swapProblemItem(fromPosition, toPosition);
                adapter.notifyItemMoved(fromPosition, toPosition);
                return true;
            }

            @Override
            public void onSwiped(RecyclerView.ViewHolder viewHolder, int direction) {
            }

            @Override
            public boolean isLongPressDragEnabled() {
                return !PreferenceManager.getDefaultSharedPreferences(AppManager.getContext()).getBoolean(""problemItemAutoSort"", true);
            }
        });
        itemTouchHelper.attachToRecyclerView(recyclerView);
        return view;
    }
",,"    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
        final View view = inflater.inflate(R.layout.fragment_cares, container, false);
        recyclerView = (RecyclerView) view.findViewById(R.id.care_list);
        recyclerView.setLayoutManager(new LinearLayoutManager(getActivity()));
        adapter = new MyAdapter(DataManager.getInstance().getCareList());
        recyclerView.setAdapter(adapter);
        recyclerView.setItemAnimator(new DefaultItemAnimator());
        ItemTouchHelper itemTouchHelper = new ItemTouchHelper(new ItemTouchHelper.Callback() {
            @Override
            public int getMovementFlags(RecyclerView recyclerView, RecyclerView.ViewHolder viewHolder) {
                return makeMovementFlags(ItemTouchHelper.UP | ItemTouchHelper.DOWN, 0);
            }

            @Override
            public void onSelectedChanged(RecyclerView.ViewHolder viewHolder, int actionState) {
                super.onSelectedChanged(viewHolder, actionState);
                Vibrator vibrator = (Vibrator) getActivity().getSystemService(Service.VIBRATOR_SERVICE);
                vibrator.vibrate(15);
            }

            @Override
            public boolean onMove(RecyclerView recyclerView, RecyclerView.ViewHolder viewHolder, RecyclerView.ViewHolder target) {
                int fromPosition = viewHolder.getAdapterPosition();
                int toPosition = target.getAdapterPosition();
                DataManager.getInstance().swapCareItem(fromPosition, toPosition);
                adapter.notifyItemMoved(fromPosition, toPosition);
                return true;
            }

            @Override
            public void onSwiped(RecyclerView.ViewHolder viewHolder, int direction) {
            }

            @Override
            public boolean isLongPressDragEnabled() {
                return !PreferenceManager.getDefaultSharedPreferences(AppManager.getContext()).getBoolean(""careItemAutoSort"", true);
            }
        });
        itemTouchHelper.attachToRecyclerView(recyclerView);
        return view;
    }
",
How to blur background images in Android,"Blurry.with(context)
  .radius(10)
  .sampling(8)
  .color(Color.argb(66, 255, 255, 0))
  .async()
  .onto(rootView);",,"    protected void onFinishInflate() {
        super.onFinishInflate();
        final Bitmap bitmap = ((BitmapDrawable) getDrawable()).getBitmap();
        Blurry.with(getContext())
                .radius(15)
                .sampling(3)
                .async()
                .color(Color.argb(25, 0, 0, 0))
                .from(bitmap)
                .into(this);
    }
",,"    private void playBackgroundAnimation() {
        mIvBg.postDelayed(new Runnable() {
            @Override
            public void run() {
                Blurry.with(mApp)
                        .radius(16)
                        .sampling(4)
                        .color(Color.parseColor(""#36000000""))
                        .animate(1600)
                        .onto((ViewGroup) f(R.id.fl_bg_cover_doing));
            }
        }, 160);
    }
",,"    public void makeBlur(Context context, View view, ImageView into) {
        Blurry.with(context)
                .async()
                .radius(25)
                .sampling(2)
                .capture(view)
                .into(into);

    }
",
How to get screen resolution of an android device using LIBGDX?,"Gdx.graphics.getWidth();
Gdx.graphics.getHeight();",,,,,,"    public void resize(int width, int height) {
        Gdx.app.log(""ScreenSize"", String.valueOf(Gdx.graphics.getWidth()) + "" "" + String.valueOf(Gdx.graphics.getHeight()));
    }
",
How do I open the Bluetooth Settings Activity programmatically?,"Intent intentOpenBluetoothSettings = new Intent();
intentOpenBluetoothSettings.setAction(android.provider.Settings.ACTION_BLUETOOTH_SETTINGS); 
startActivity(intentOpenBluetoothSettings);",,"    private boolean checkBluetoothConnection() {

        if (mBluetoothAdapter == null) {
            toast(""Device does not support Blueetooth"");
            return false;
        } else {
            if (device == null) {
                toast(""Son, you must have at least another player to play with you"");
                Intent intentOpenBluetoothSettings = new Intent();
                intentOpenBluetoothSettings.setAction(android.provider.Settings.ACTION_BLUETOOTH_SETTINGS);
                startActivity(intentOpenBluetoothSettings);
                return false;
            }
            if (device != null) {
                            }
        }
        return false;
    }
",placeBoatsView,"    private void setPreferenceBluetoothPair() {
        Preference preference = findPreference(""key_bluetooth_pair"");
        preference.setOnPreferenceClickListener(new Preference.OnPreferenceClickListener() {
            @Override
            public boolean onPreferenceClick(Preference preference) {
                Intent intent = new Intent(Intent.ACTION_MAIN, null);
                intent.setAction(android.provider.Settings.ACTION_BLUETOOTH_SETTINGS);
                startActivity(intent);
                return true;
            }
        });
    }
",,"    public void setupPreferenceScreenBluetooth(final boolean bluetoothEnabled) {
        Preference preference = findPreference(""bluetooth_onoff"");
        if (bluetoothEnabled) preference.setSummary(""ON"");
        else preference.setSummary(""OFF (click to turn on)"");
        preference.setOnPreferenceClickListener(new Preference.OnPreferenceClickListener() {
            @Override
            public boolean onPreferenceClick(Preference preference) {
                if (!bluetoothEnabled) {
                    Intent enableBtIntent = new Intent(BluetoothAdapter.ACTION_REQUEST_ENABLE);
                    startActivityForResult(enableBtIntent, 1);
                }
                return true;
            }
        });
        preference = findPreference(""bluetooth_pair"");
        preference.setEnabled(bluetoothEnabled);
        preference.setOnPreferenceClickListener(new Preference.OnPreferenceClickListener() {
            @Override
            public boolean onPreferenceClick(Preference preference) {
                Intent intent = new Intent(Intent.ACTION_MAIN, null);
                intent.setAction(android.provider.Settings.ACTION_BLUETOOTH_SETTINGS);
                startActivity(intent);
                return true;
            }
        });
    }
",
Linking back to amazon app store for ratings,"Intent goToAppstore = new Intent(Intent.ACTION_VIEW,Uri.parse(""http:goToAppstore.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
context.startActivity(goToAppstore);",wwwamazoncomgpmasdlandro idpcomyappblah,"  private void redirectStore(String updateUrl) {
    Intent intent = new Intent(Intent.ACTION_VIEW, Uri.parse(updateUrl));
    intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
    startActivity(intent);
  }
",,"    public void open(Context context, String url) {
        Intent browserIntent = new Intent(Intent.ACTION_VIEW, Uri.parse(url));
        browserIntent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
        context.startActivity(browserIntent);
    }
",,"    private void goToYouTube(Context context, String id){
        Intent i = new Intent(Intent.ACTION_VIEW, Uri.parse(""vnd.youtube:"" + id));
        i.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
        startActivity(i);
    }
",
Uncheck all RadioButton in a RadioButtonGroup,"RadioGroup radioGroup = (RadioGroup)findViewById(R.id.radiogroup);
radioGroup.clearCheck();",," private void initView() {
  mCvp = (CustomViewPager) findViewById(R.id.cvp);
  mRadiogroup = (RadioGroup) findViewById(R.id.radiogroup);
 }
",,"    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.main);
        
        bottom_layout = (RelativeLayout) findViewById(R.id.layout_bottom);
        
        tabHost = getTabHost();
        tabHost.addTab(tabHost.newTabSpec(""news"").setIndicator(""News"").setContent(new Intent(this, TabNewsActivity.class)));
        tabHost.addTab(tabHost.newTabSpec(""topic"").setIndicator(""Topic"").setContent(new Intent(this, TabTopicActivity.class)));
        tabHost.addTab(tabHost.newTabSpec(""picture"").setIndicator(""Picture"").setContent(new Intent(this, TabPicActivity.class)));
        tabHost.addTab(tabHost.newTabSpec(""follow"").setIndicator(""Follow"").setContent(new Intent(this, TabFollowActivity.class)));
        tabHost.addTab(tabHost.newTabSpec(""vote"").setIndicator(""Vote"").setContent(new Intent(this, TabVoteActivity.class)));
        
        radioGroup = (RadioGroup) findViewById(R.id.radiogroup);
        radioGroup.setOnCheckedChangeListener(checkedChangeListener);
        
        img = new ImageView(this);
        img.setImageResource(R.drawable.tab_front_bg);
        bottom_layout.addView(img);
    }
",,"    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        mRadiogroup = (RadioGroup) findViewById(R.id.radiogroup);

        mImageView = (ImageView) findViewById(R.id.image);
        mImageView.setOnClickListener(this);

        Spinner startScaleTypeSpinner = (Spinner) findViewById(R.id.spinner_start_scaletype);
        Spinner endScaleTypeSpinner = (Spinner) findViewById(R.id.spinner_end_scaletype);

        ArrayAdapter<String> adapter = new ArrayAdapter<>(this, android.R.layout.simple_spinner_dropdown_item, mScaleTypes);
        adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);

        startScaleTypeSpinner.setAdapter(adapter);
        endScaleTypeSpinner.setAdapter(adapter);

        startScaleTypeSpinner.setOnItemSelectedListener(this);
        endScaleTypeSpinner.setOnItemSelectedListener(this);
    }
",
Android Status Bar Notifications - Intent getting the old extras on the second time,"PendingIntent pintent = 
   PendingIntent.getActivity(context,0,intent,PendingIntent.FLAG_CANCEL_CURRENT);",,"    static void startPendingErrorActivity(Context context, Intent intent) throws CanceledException {
        PendingIntent pendingIntent = PendingIntent.getActivity(context, 0, intent, PendingIntent.FLAG_CANCEL_CURRENT);

        pendingIntent.send(context, 0, intent);
    }
",,"    public void restartApp(Class classToStartupWith) {
        Intent restartIntent = new Intent(_context, classToStartupWith);
        PendingIntent restartIntentP = PendingIntent.getActivity(_context, 555,
                restartIntent, PendingIntent.FLAG_CANCEL_CURRENT);
        AlarmManager mgr = (AlarmManager) _context.getSystemService(Context.ALARM_SERVICE);
        mgr.set(AlarmManager.RTC, System.currentTimeMillis() + 100, restartIntentP);
        System.exit(0);
    }
",,"    private void sendSampleNotification() {
                String title = ""get title"";
        String desc = ""get desc"";
        PendingIntent pi = PendingIntent.getActivity(mApp, 0, new Intent(mApp, MainActivity.class),
                PendingIntent.FLAG_CANCEL_CURRENT);
        sendNotification(title, desc, pi);
    }
",send
Android volley sending data twice,"JsonObjectRequest jsonObjReq = new JsonObjectRequest();
jsonObjReq.setRetryPolicy(new DefaultRetryPolicy(
    0,
    DefaultRetryPolicy.DEFAULT_MAX_RETRIES,
    DefaultRetryPolicy.DEFAULT_BACKOFF_MULT));",," private void sendRequest() {
  JsonObjectRequest jsonObjectReq = new JsonObjectRequest(JSON_URL, null,
    new Response.Listener<JSONObject>() {
     @Override
     public void onResponse(JSONObject response) {
      showResponse(response, ""Showing GET request response..."");
     }
    },
    new Response.ErrorListener() {
     @Override
     public void onErrorResponse(VolleyError error) {
     }
    });

  jsonObjectReq.setRetryPolicy(new DefaultRetryPolicy(15000,
    DefaultRetryPolicy.DEFAULT_MAX_RETRIES,
    DefaultRetryPolicy.DEFAULT_BACKOFF_MULT));

    AppController.getInstance().addToRequestQueue(jsonObjectReq, REQUEST_TAG);
 }
",Adding JsonObject request to request queue,"    public void shot1(String url1) {

        Cache cache = new DiskBasedCache(getCacheDir(), 1024 * 1024);         Network network = new BasicNetwork(new HurlStack());
        RequestQueue queue = new RequestQueue(cache, network);
        queue.start();

        final JsonObjectRequest jsonObjectRequest1 = new JsonObjectRequest(Request.Method.GET, url1, null, new Response.Listener<JSONObject>() {
            @Override
            public void onResponse(final JSONObject response) {


            }
        }, new Response.ErrorListener() {
            @Override
            public void onErrorResponse(VolleyError error) {
            }
        });
        jsonObjectRequest1.setRetryPolicy(new DefaultRetryPolicy(DefaultRetryPolicy.DEFAULT_TIMEOUT_MS * 3, DefaultRetryPolicy.DEFAULT_MAX_RETRIES, DefaultRetryPolicy.DEFAULT_BACKOFF_MULT));
        queue.add(jsonObjectRequest1);
    }
",1MB cap,"    public void explicit1(String url1) {

        Cache cache = new DiskBasedCache(getCacheDir(), 1024 * 1024);         Network network = new BasicNetwork(new HurlStack());
        RequestQueue queue = new RequestQueue(cache, network);
        queue.start();

        final JsonObjectRequest jsonObjectRequest1 = new JsonObjectRequest(Request.Method.GET, url1, null, new Response.Listener<JSONObject>() {
            @Override
            public void onResponse(final JSONObject response) {

                System.out.println(response);

            }
        }, new Response.ErrorListener() {
            @Override
            public void onErrorResponse(VolleyError error) {
            }
        });
        jsonObjectRequest1.setRetryPolicy(new DefaultRetryPolicy(DefaultRetryPolicy.DEFAULT_TIMEOUT_MS * 3, DefaultRetryPolicy.DEFAULT_MAX_RETRIES, DefaultRetryPolicy.DEFAULT_BACKOFF_MULT));
        queue.add(jsonObjectRequest1);
    }
",1MB cap
How to Programmatically Enable/Disable Accessibility Service in Android,"Settings.Secure.putString(getContentResolver(), 
    Settings.Secure.ENABLED_ACCESSIBILITY_SERVICES, ""pkgname/classname"");
Settings.Secure.putString(getContentResolver(), 
    Settings.Secure.ACCESSIBILITY_ENABLED, ""1"");",,"    private void enableAccessibilityService(String name) {
        Settings.Secure.putString(getContentResolver(), Settings.Secure.ENABLED_ACCESSIBILITY_SERVICES, name);
        Settings.Secure.putString(getContentResolver(), Settings.Secure.ACCESSIBILITY_ENABLED, VALUE_ENABLED);
    }
",,"    private void disableAccessibilityServices() {
        Settings.Secure.putString(getContentResolver(), Settings.Secure.ENABLED_ACCESSIBILITY_SERVICES, """");
        Settings.Secure.putString(getContentResolver(), Settings.Secure.ACCESSIBILITY_ENABLED, VALUE_DISABLED);
    }
",,"    public boolean isAccessibilityServiceSettingEnabled() {
        if (getContext() == null)
            return false;
        final String service = getContext().getPackageName() + ""/"" + MainService.class.getCanonicalName();
        int accessibilityEnabled = Settings.Secure.getInt(getContext().getContentResolver(), Settings.Secure.ACCESSIBILITY_ENABLED, 0);
        if (accessibilityEnabled != 1)
            return false;
        TextUtils.SimpleStringSplitter mStringColonSplitter = new TextUtils.SimpleStringSplitter(':');
        String settingValue = Settings.Secure.getString(getContext().getContentResolver(), Settings.Secure.ENABLED_ACCESSIBILITY_SERVICES);

        mStringColonSplitter.setString(settingValue);
        while (mStringColonSplitter.hasNext()) {
            String accessibilityService = mStringColonSplitter.next();
            if (accessibilityService.equalsIgnoreCase(service)) {
                return true;
            }
        }

        return false;
    }
",
Android Media Player play/pause Button,"if(mPlayer.isPlaying()){
    mPlayer.pause();
} else {
    mPlayer.start();
}",,"    private void doPauseResume() {
        if (mPlayer.isPlaying())
            mPlayer.pause();
        else
            mPlayer.start();
        updatePausePlay();
    }
",,"  private void doPauseResume() {
    if (mPlayer.isPlaying())
      mPlayer.pause();
    else
      mPlayer.start();
    updatePausePlay();
  }
",,"    public void togglePauseResume() {
        if (mediaPlayer.isPlaying()){
            mediaPlayer.pause();
        } else {
            mediaPlayer.start();
        }
    }
",
How to clear focus and remove keyboard on Android?,"InputMethodManager imm = (InputMethodManager)getSystemService(Context.INPUT_METHOD_SERVICE);
imm.hideSoftInputFromWindow(editTextField.getWindowToken(), 0);",,"    public void hideSoftInput(View v) {
        InputMethodManager imm = (InputMethodManager) getSystemService(Context.INPUT_METHOD_SERVICE);
        imm.hideSoftInputFromWindow(v.getWindowToken(), 0);
    }
",,"    private void hideKeyboard() {
        InputMethodManager imm = (InputMethodManager) getSystemService(Context.INPUT_METHOD_SERVICE);
        imm.hideSoftInputFromWindow(getWindow().getDecorView().getWindowToken(), 0);
    }
",,"    private void closeSoftInput() {
        InputMethodManager imm = (InputMethodManager) getSystemService(Context.INPUT_METHOD_SERVICE);
        imm.hideSoftInputFromWindow(drawer.getWindowToken(), InputMethodManager.HIDE_NOT_ALWAYS);
    }
",
Android Spinner using ArrayList<String>,"ArrayAdapter<String> karant_adapter = new ArrayAdapter<String>(this,
     android.R.layout.simple_spinner_item, return_likes);",,"    public void initAutoCompleteTextView() {
        ArrayAdapter<String> arrayAdapter = new ArrayAdapter<String>(this, android.R.layout.simple_list_item_1, res);
        AT_searchText.setAdapter(arrayAdapter);
    }
",,"    public void doThis(){
        ArrayAdapter<String> itemsAdapter =new ArrayAdapter<String>(this, android.R.layout.simple_list_item_1, items);
        mainListView.setAdapter(itemsAdapter);
    }
",,"    public void doThis(){
        ArrayAdapter<String> itemsAdapter =new ArrayAdapter<String>(this, android.R.layout.simple_list_item_1, items);
        mainListView.setAdapter(itemsAdapter);
    }
",
android webview stay in app,"public class myWebViewClient extends WebViewClient {
    @Override
    public boolean shouldOverrideUrlLoading(WebView view, String url) {
        view.loadUrl(url);
        return true;
    }
}",,"    private void disableBrowserPopup() {
        webView.setWebViewClient(new WebViewClient() {
            @Override
            public boolean shouldOverrideUrlLoading(WebView view, String url) {
                view.loadUrl(url);
                return true;
            }
        });
    }
",,"    private void openWebPage() {
        mWebView.loadUrl(mUrl);
        mWebView.setWebViewClient(new WebViewClient() {
            @Override
            public boolean shouldOverrideUrlLoading(WebView view, String url) {
                view.loadUrl(url);
                return true;
            }
        });
    }
",,"    private void init() {
        mWebView.loadUrl(URL);
        mWebView.setWebViewClient(new WebViewClient() {
            @Override
            public boolean shouldOverrideUrlLoading(WebView view, String url) {
                view.loadUrl(url);
                return true;
            }
        });
    }
",
How to set View alpha in lower Api than 11?,"if (Build.VERSION.SDK_INT < 11) {
  final AlphaAnimation animation = new AlphaAnimation(alpha, alpha);
  animation.setDuration(duration);
  animation.setFillAfter(true);
  view.startAnimation(animation);
} else {
  view.setAlpha(alpha);
}
",,"    static void setAlpha(View view, float alpha) {
        if (Build.VERSION.SDK_INT < 11) {
            final AlphaAnimation animation = new AlphaAnimation(alpha, alpha);
            animation.setDuration(0);
            animation.setFillAfter(true);
            view.startAnimation(animation);
        } else
            view.setAlpha(alpha);
    }
",," public static void alpha(View view, float value) {
  if (Build.VERSION.SDK_INT < 11) {
   final AlphaAnimation animation = new AlphaAnimation(value, value);
   animation.setDuration(1);
   animation.setFillAfter(true);
   view.startAnimation(animation);
  } else {
   view.setAlpha(value);
  }
 }
",,"    private void setAlpha(View view, float alpha, long durationMillis) {
        if (Build.VERSION.SDK_INT < 11) {
            final AlphaAnimation animation = new AlphaAnimation(alpha, alpha);
            animation.setDuration(durationMillis);
            animation.setFillAfter(true);
            view.startAnimation(animation);
        } else {
            view.setAlpha(alpha);
        }
    }
",
How to edit or create custom error page for WebView?,"myWebView.setWebViewClient(new WebViewClient() {
    public void onReceivedError(WebView view, int errorCode, String description, String failingUrl) {
        myWebView.loadUrl(""file:
    }
});",androidassetcustomurlerrorhtm,"    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        mWebview = new WebView(this);

        mWebview.getSettings().setJavaScriptEnabled(true); 
        final Activity activity = this;

        mWebview.setWebViewClient(new WebViewClient() {
            public void onReceivedError(WebView view, int errorCode, String description, String failingUrl) {
                Toast.makeText(activity, description, Toast.LENGTH_SHORT).show();
            }
        });

        mWebview.loadUrl(""https:        setContentView(mWebview);

    }
",enable javascript  agrisih000webhostappcomproductcategoryvegetables,"    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        mWebview = new WebView(this);

        mWebview.getSettings().setJavaScriptEnabled(true); 
        final Activity activity = this;

        mWebview.setWebViewClient(new WebViewClient() {
            public void onReceivedError(WebView view, int errorCode, String description, String failingUrl) {
                Toast.makeText(activity, description, Toast.LENGTH_SHORT).show();
            }
        });

        mWebview.loadUrl(""https:        setContentView(mWebview);

    }
",enable javascript  agrisih000webhostappcomproductcategoryvegetables,"    private void myWebConfig() {
        mywebvw.loadUrl(urlValue);
                
                mywebvw.setWebViewClient(new WebViewClient());
        final Activity activity = this;
        mywebvw.setWebChromeClient(new WebChromeClient() {
            public void onProgressChanged(WebView view, int progress) {
                                                activity.setProgress(progress * 1000);
            }
        });
        mywebvw.setWebViewClient(new WebViewClient() {
            public void onReceivedError(WebView view, int errorCode, String description, String failingUrl) {
                Toast.makeText(activity, ""Oh no! "" + description, Toast.LENGTH_SHORT).show();
            }
        });
    }
",WebSettings webSettings  mywebvwgetSettings         webSettingssetJavaScriptEnabledtrue  Enable Javascript   Force links and redirects to open in the WebView instead of in a browser   Activities and WebViews measure progress with different scales   The progress meter will automatically disappear when we reach 100
Unable to create call adapter for io.reactivex.Observable,"Retrofit retrofit = new Retrofit.Builder()
    .baseUrl(SERVICE_ENDPOINT)
    .addCallAdapterFactory(RxJava2CallAdapterFactory.create())
    .build();",,"    public void retrofitObject() {
        retrofit = new Retrofit.Builder()
                .baseUrl(BASE_URL)
                .addCallAdapterFactory(RxJava2CallAdapterFactory.create())
                .addConverterFactory(GsonConverterFactory.create())
                .build();
    }
",,"    public Retrofit provideRetrofit(GsonConverterFactory factory) {
        Retrofit retrofit = new Retrofit.Builder().baseUrl(BuildConfig.END_POINT)
                .addConverterFactory(factory)
                .addCallAdapterFactory(RxJava2CallAdapterFactory.create())
                .build();
        return retrofit;
    }
",,"    public static PeopleService create() {
        Retrofit retrofit = new Retrofit.Builder().baseUrl(BASE_URL)
                .addConverterFactory(GsonConverterFactory.create())
                .addCallAdapterFactory(RxJava2CallAdapterFactory.create())
                .build();
        return retrofit.create(PeopleService.class);
    }
",
Move snackbar above the bottom bar,"Snackbar snack = Snackbar.make(findViewById(R.id.coordinatorLayout),
    ""Your message"", Snackbar.LENGTH_LONG);
CoordinatorLayout.LayoutParams params = (CoordinatorLayout.LayoutParams)
snack.getView().getLayoutParams();
params.setMargins(leftMargin, topMargin, rightMargin, bottomBar.height);
snack.getView().setLayoutParams(params);
snack.show();",,"    private void showMarkGoalSnackBar(String goalTitle){
        
        Snackbar snack = Snackbar.make(getActivity().findViewById(android.R.id.content),
                String.format(Locale.getDefault(), ""Marked '%s' as done"", goalTitle),
                Snackbar.LENGTH_LONG).setAction(""UNDO"", new SnackBarListener());
        snack.addCallback(new Snackbar.Callback(){
            @Override
            public void onDismissed(Snackbar snackbar,int event){
                ViewPropertyAnimator animator = addGoalFab.animate().translationY(0);
                                animator.start();
            }

            @Override
            public void onShown(Snackbar snackbar){
                int snackbarHeight = snackbar.getView().getHeight();
                ViewPropertyAnimator animator = addGoalFab.animate().translationY(-snackbarHeight);
                animator.start();
                markGoalDone(goalMarkedDonePosition);
            }
        });

        FrameLayout.LayoutParams parameters = (FrameLayout.LayoutParams) snack.getView().getLayoutParams();
        float d = getContext().getResources().getDisplayMetrics().density;
        int bottomnavBarMargin = (int)(BOTTOM_NAV_BAR_HEIGHT * d);
        parameters.setMargins(0, 0, 0, bottomnavBarMargin);
        snack.getView().setLayoutParams(parameters);
        snack.show();
    }
",set snackbar layout params so that it shows above bottom nav bar  set elevation to default on snackbar dismissed,"    private void getFinalString(LocationData toSave, String response, String title) throws JSONException {
        final JSONObject obj = new JSONObject(response);
        final JSONObject results = obj.getJSONObject(""query"");
        final JSONObject pages = results.getJSONObject(""pages"");
        Iterator<String> keys = pages.keys();
        String strName = keys.next();
        final JSONObject finalObj = pages.getJSONObject(strName);
        String finalString = title + "": "" + finalObj.getString(""extract"");
        Log.d(TAG + ""479"", ""FINAL STRING IS "" + finalString);

        final String finalURL = toSave.getURL();
                Snackbar resultSB = Snackbar.make(findViewById(R.id.container), finalString, Snackbar.LENGTH_INDEFINITE)
            .setAction(""More"", new View.OnClickListener() {
                @Override
                public void onClick(View v) {
                    Intent openWiki = new Intent(getBaseContext(), WebViewActivity.class);
                    openWiki.putExtra(""url"", finalURL);
                    startActivity(openWiki);
                }
            });

        View viewSB = resultSB.getView();
        TextView tvSB = (TextView) (viewSB).findViewById(android.support.design.R.id.snackbar_text);

                CoordinatorLayout.LayoutParams paramsSB = (CoordinatorLayout.LayoutParams)viewSB.getLayoutParams();
        paramsSB.gravity = Gravity.TOP;
        viewSB.setLayoutParams(paramsSB);

        viewSB.setBackgroundColor(Color.parseColor(""#80000000""));

        tvSB.setTextSize(25);
        tvSB.setTypeface(tvSB.getTypeface(), Typeface.BOLD);
        tvSB.setMaxLines(6);

        resultSB.show();

                db.addLocation(toSave);
        Log.d(TAG, db.getAllLocations().toString());
    }
",Create the SnackBar and attach an OnClickListener   Moves the SnackBar to the top of the screen   Save the toSave data,"    private static void styleSnackBar(String message, Context context, int backgroundColor, int textColor) {
        CoordinatorLayout coordinatorLayout = (CoordinatorLayout) ((Activity) context).findViewById(R.id.SignUp_coodrinator);
        Snackbar snackbar = Snackbar.make(coordinatorLayout, message, Snackbar.LENGTH_SHORT);

        View view = snackbar.getView();
        CoordinatorLayout.LayoutParams params = (CoordinatorLayout.LayoutParams) view.getLayoutParams();
        params.gravity = Gravity.TOP;
        view.setLayoutParams(params);
        TextView textView = (TextView) view.findViewById(android.support.design.R.id.snackbar_text);
        Typeface typeface = ResourcesCompat.getFont(context, R.font.caviar_dreams);

        view.setBackgroundColor(backgroundColor);
        textView.setTextColor(textColor);
        textView.setTextSize(14);
        textView.setTypeface(Typeface.DEFAULT_BOLD);
        textView.setTypeface(typeface);
        snackbar.show();

    }
",
How to query for the default SpeechRecognizer,"String serviceComponent = Settings.Secure.getString(mContext.getContentResolver(),
        ""voice_recognition_service"");",,"    public static String getAndroidId(Context context) {
        return Settings.Secure.getString(context.getContentResolver(), Settings.Secure.ANDROID_ID);
    }
",,"    public static String getDeviceId(Context context) {
        return Settings.Secure.getString(context.getContentResolver(), Settings.Secure.ANDROID_ID);
    }
",,"    public static String getDeviceId(Context context) {
        return Settings.Secure.getString(context.getContentResolver(), Settings.Secure.ANDROID_ID);
    }
",
Android Layout make all children's not clickable,"YOUR_RELATIVE_LAYOUT.setOnTouchListener(new OnTouchListener() {
    @Override
    public boolean onTouch(View v, MotionEvent event) {
                return true;
    }
});",ignore all touch events,"    protected void blockTouch() {
        mLayoutView.setOnTouchListener(new View.OnTouchListener() {
            @Override
            public boolean onTouch(View v, MotionEvent rawEvent) {
                return true;
            }
        });
    }
",,"    protected void blockTouch(){
        mLayoutView.setOnTouchListener(new View.OnTouchListener() {
            @Override
            public boolean onTouch(View v, MotionEvent rawEvent) {
                return true;
            }
        });
    }
",,"    protected void blockTouch(){
        mLayoutView.setOnTouchListener(new View.OnTouchListener() {
            @Override
            public boolean onTouch(View v, MotionEvent rawEvent) {
                return true;
            }
        });
    }
",
"Don't navigate to other pages in WebView,disable links and references","webView.setWebViewClient(new WebViewClient(){
    public boolean shouldOverrideUrlLoading(WebView view, String url) {
        return true;
    }
});",,"    private void doSomething(final String url) {
        getActivity().runOnUiThread(new Runnable() {
            @Override
            public void run() {
                wb.loadUrl(url);
                wb.setWebViewClient(new WebViewClient() {
                    public boolean shouldOverrideUrlLoading(WebView view, String url) {
                                                view.loadUrl(url);
                        return true;
                    }
                });
            }
        });
    }
",webview,"    public void onActivityCreated(Bundle saved) {
  super.onActivityCreated(saved);
  view = (WebView) getView().findViewById(R.id.Viewport);
  
  view.setWebViewClient(new WebViewClient() {
   public boolean shouldOverrideUrlLoading(WebView view, String url) {
    try {
     navigator.setBookPage(url, index);
    } catch (Exception e) {
     errorMessage(getString(R.string.error_LoadPage));
    }
    return true;
   }
  });
  
  loadData(data);
 }
",,"    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
        View view = inflater.inflate(R.layout.fragment_about, container, false);
        ButterKnife.bind(this, view);
        progressBar.getIndeterminateDrawable().setColorFilter(0xFF000000, android.graphics.PorterDuff.Mode.MULTIPLY);
        progressBar.setVisibility(View.VISIBLE);
        webView.setWebViewClient(new WebViewClient(){
            public boolean shouldOverrideUrlLoading(WebView view, String url) {
                view.loadUrl(url);
                return true;
            }
            @Override
            public void onPageFinished(WebView view, String url) {
                super.onPageFinished(view,url);
                progressBar.setVisibility(View.GONE);
            }
        });
        webView.loadUrl(Constants.CARONAE_URL_BASE + ""sobre_mobile.html"");
        return view;
    }
",
How to disable and enable the scrolling on android ScrollView?,"mScrollView.setOnTouchListener( new OnTouchListener() {

            @Override
            public boolean onTouch(View v, MotionEvent event) 
            {
                  return true;
            }
});",,"    protected void blockTouch() {
        mLayoutView.setOnTouchListener(new View.OnTouchListener() {
            @Override
            public boolean onTouch(View v, MotionEvent rawEvent) {
                return true;
            }
        });
    }
",,"    protected void blockTouch(){
        mLayoutView.setOnTouchListener(new View.OnTouchListener() {
            @Override
            public boolean onTouch(View v, MotionEvent rawEvent) {
                return true;
            }
        });
    }
",,"    protected void blockTouch(){
        mLayoutView.setOnTouchListener(new View.OnTouchListener() {
            @Override
            public boolean onTouch(View v, MotionEvent rawEvent) {
                return true;
            }
        });
    }
",
How to Share Entire Android App with Share Intent,"Intent sendIntent = new Intent();
sendIntent.setAction(Intent.ACTION_SEND);
sendIntent.putExtra(Intent.EXTRA_TEXT,
    ""Hey check out my app at: https:sendIntent.setType(""text/plain"");
startActivity(sendIntent);",playgooglecomstoreappsdetailsidcomgoogleandroidappsplus,"    public void actionShareText() {
        Intent intent = new Intent(); intent.setAction(Intent.ACTION_SEND);
        intent.setType(""text/plain"");
        intent.putExtra(Intent.EXTRA_TEXT, reminder.getTitle() + ""\n"" + reminder.getContent());
        startActivity(Intent.createChooser(intent, getString(R.string.action_share)));
    }
",,"    public static void shareText(Context ctx, String text) {
        Intent sendIntent = new Intent();
        sendIntent.setAction(Intent.ACTION_SEND);
        sendIntent.putExtra(Intent.EXTRA_TEXT, text);
        sendIntent.setType(""text/plain"");
        ctx.startActivity(Intent.createChooser(sendIntent, ""åäº«è³""));
    }
",,"    public void share() {
        Intent sendIntent = new Intent();
        sendIntent.setAction(Intent.ACTION_SEND);
        sendIntent.putExtra(Intent.EXTRA_TEXT, getResources().getText(R.string.about_share_content));
        sendIntent.setType(""text/plain"");
        startActivity(Intent.createChooser(sendIntent, getResources().getString(R.string.share)));
    }
",
Move cursor to end of EditText?,"String newtext = editText.getText().toString() + ""the new text"";
editText.setText("""");
editText.append(newtext);",,"    public void buttonE(View v)  {
        
        if (x==16){            Intent intent = new Intent(this, SecondActivity.class);
            startActivity(intent);
        }
        else {x++;}
        TextView textView= (TextView) findViewById(R.id.editText);
        long start = System.currentTimeMillis();
        long change = start - end;
        end= start;
        ImageView imageView = (ImageView) findViewById(R.id.imageView);
        imageView.setImageResource(imageArray[x]);
        try {             File root = new File(Environment.getExternalStorageDirectory().toString());
            File savefile = new File(root, ""base.txt"");
            FileWriter writer = new FileWriter(savefile,true);
            BufferedWriter writer1 = new BufferedWriter(writer);
            String string1 = textView.getText().toString() + "","" + change + "" "";
            writer1.append(string1);
            writer1.newLine();
            writer1.flush();
            writer1.close();
            textView.setText("""");
        }
        catch (Exception e) {
            e.printStackTrace();
        }

    }
",the enter button has two primary functions          save the data recorded in the editText to a file with a timestamp of how long          the user needed to input itThen it changes the picture with a new number on it          and after the final number has been put it shuts down th application once the last picture has reached it will start the second activity  to write to txt file,"    public void buttonE(View v) {
        
        if (x1==16){            Context context = getApplicationContext();
            CharSequence text = ""This is the end of the Test!"";
            int duration = Toast.LENGTH_LONG;
            Toast toast = Toast.makeText(context, text, duration);
            toast.show();
                        Process.killProcess(Process.myPid());
            System.exit(1);
            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {
                finishAndRemoveTask ();
            }
            else{
                this.finishAffinity();
            }
        }
        x1++;        TextView textView= (TextView) findViewById(R.id.editText);
        long start = System.currentTimeMillis();
        long change = start - end;
        end= start;
        ImageView imageView = (ImageView) findViewById(R.id.imageView);
        imageView.setImageResource(imageArray[x1]);
        try {             File root = new File(Environment.getExternalStorageDirectory().toString());             File saveFile = new File(root, ""fullAS.txt"");             FileWriter writer = new FileWriter(saveFile,true);
            BufferedWriter writer1 = new BufferedWriter(writer);
            String string1 = textView.getText().toString() + "","" + change + "" "";
            writer1.append(string1);
            writer1.newLine();
            writer1.flush();
            writer1.close();
            textView.setText("""");
        }
        catch (Exception e) {
            e.printStackTrace();
        }
    }
",the enter button has two primary functions          save the data recorded in the editText to a file with a timestamp of how long          the user needed to input itThen it changes the picture with a new number on it          and after the final number has been put it shuts down th application once the last picture has reached it will Show a notification to close  shutdown system so no new entry is registered  to call upon the index f the image array  to write to txt file  gets the location of the storage  points to the txt file,"    public void onMapReady(GoogleMap googleMap) {
        mMap = googleMap;
                mMap.setOnMapClickListener(new GoogleMap.OnMapClickListener() {

            @Override
            public void onMapClick(LatLng point) {
                                mMap.clear();
                Geocoder geocoder = new Geocoder(AddEventActivity.this);
                List<Address> addresses = new ArrayList<Address>();
                try {
                    addresses = geocoder.getFromLocation(point.latitude, point.longitude,1);
                } catch (IOException e) {
                    e.printStackTrace();
                }
                if (addresses.size() != 0) {
                    android.location.Address maddress = addresses.get(0);

                    if (maddress != null) {
                        StringBuilder sb = new StringBuilder();
                        address.setText("""");
                        for (int i = 0; i < maddress.getMaxAddressLineIndex(); i++) {
                            sb.append(maddress.getAddressLine(i) + ""\n"");
                        }
                    }
                    if(addresses.get(0).getFeatureName()!=null){
                        address.setText(addresses.get(0).getFeatureName() + "", "");
                    }
                    if(addresses.get(0).getLocality()!=null){
                        address.setText(address.getText().toString() + addresses.get(0).getLocality() +"", "");
                    }
                    if(addresses.get(0).getAdminArea()!=null){
                        address.setText(address.getText().toString()+ addresses.get(0).getAdminArea() + "", "");
                    }
                    if(addresses.get(0).getCountryName()!=null){
                        address.setText(address.getText().toString() + addresses.get(0).getCountryName());
                    }
                                        Marker marker = mMap.addMarker(new MarkerOptions().position(point).title(""Event""));
                    saveLocation=String.valueOf(point.latitude)+""-""+String.valueOf(point.longitude);
                    if(address.getText()!=null&&address.getText().toString().length()>3){
                        sAddress=address.getText().toString();
                        Log.d(""yazdir"", ""onClick: ""+sAddress);
                    }
                }
            }
        });
    }
",map zerine tklama ileminde address labeline addresin yazlmas ve locationn alnmas ile ilgili ksm   TODO Autogenerated method stub  place marker where user just clicked
How to hide the horizontal line at the bottom of each item in android listview?,"lvlist.setDivider(null);
lvlist.setDividerHeight(0);",,,,"  public void onViewCreated(@NonNull final View view, final Bundle savedInstanceState) {
   super.onViewCreated(view, savedInstanceState);
   registerForContextMenu(getListView());
   getListView().setFastScrollEnabled(true);
   getListView().setDivider(null);
   getListView().setDividerHeight(0);
  }
",,,
Android Link to Market from inside another app,"Intent intent = new Intent(Intent.ACTION_VIEW);
intent.setData(Uri.parse(""market:startActivity(intent);",detailsidcomandroidexample,"    private void open(String content) {
        Intent intent = new Intent(Intent.ACTION_VIEW);
        intent.setData(Uri.parse(content));
        startActivity(intent);
    }
",,"    public void onBotClicked(View view) {
        Intent telegram = new Intent(Intent.ACTION_VIEW);
        telegram.setData(Uri.parse(""https:        startActivity(telegram);
    }
",tmemazakjctbot,"    public boolean supportsSendTextMessage() {
        Intent intent = new Intent(Intent.ACTION_VIEW);
        intent.setData(Uri.parse(""sms:""));
        return mTab.getWindowAndroid().canResolveActivity(intent);
    }
",
Enable GPS programatically Android (without navigating to the location settings),"Intent intent = new Intent(Settings.ACTION_LOCATION_SOURCE_SETTINGS);
startActivity(intent);",,"    public static void openGpsSettings() {
        Intent intent = new Intent(Settings.ACTION_LOCATION_SOURCE_SETTINGS);
        Utils.getApp().startActivity(intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK));
    }
",,"    private void navigateToGPSSettings() {
        Intent gpsSettingsIntent = new Intent(Settings.ACTION_LOCATION_SOURCE_SETTINGS);
        context.startActivity(gpsSettingsIntent);
    }
",,"    public void openSettings(){
        Intent intent = new Intent(Settings.ACTION_LOCATION_SOURCE_SETTINGS);
        startActivity(intent);
    }
",
BitmapFactory.decodeFile out of memory with images 2400x2400,"BitmapFactory.Options options = new BitmapFactory.Options();
 options.inJustDecodeBounds = false;
 options.inPreferredConfig = Config.RGB_565;
 options.inDither = true;",," public static Bitmap decodeSampledBitmapFromFileForSmall(String filename, int reqWidth, int reqHeight) {
  final BitmapFactory.Options options = new BitmapFactory.Options();
  options.inJustDecodeBounds = true;
  BitmapFactory.decodeFile(filename, options);

  options.inSampleSize = calculateInSampleSize(options, reqWidth,reqHeight);
  options.inJustDecodeBounds = false;
  options.inDither = false;
  options.inPreferredConfig = Bitmap.Config.RGB_565;
  
  return BitmapFactory.decodeFile(filename, options);
 }
",," public static Bitmap decodeSampledBitmapFromDescriptor(FileDescriptor fileDescriptor, int reqWidth, int reqHeight) {
  final BitmapFactory.Options options = new BitmapFactory.Options();
  options.inJustDecodeBounds = true;
  BitmapFactory.decodeFileDescriptor(fileDescriptor, null, options);

  options.inSampleSize = calculateInSampleSize(options, reqWidth, reqHeight);
    
  options.inJustDecodeBounds = false;
  options.inDither = false;
  options.inPreferredConfig = Bitmap.Config.RGB_565;

  Bitmap tBitmap = BitmapFactory.decodeFileDescriptor(fileDescriptor, null, options);
  return tBitmap;
 }
",,"    private Bitmap decodeDefaultResource(int thumbnailBoundsHeightLimit, int thumbnailBoundsWidthLimit) {
        BitmapFactory.Options opt = new BitmapFactory.Options();  
        opt.inJustDecodeBounds = true;
        BitmapFactory.decodeResource(mResources, R.drawable.aurora_attach_default_bg, opt);
        int outWidth = opt.outWidth;
        int outHeight = opt.outHeight;
        opt.inDither = false;
        opt.inPreferredConfig = Bitmap.Config.RGB_565; 
        opt.inSampleSize = 1;
        while ((outWidth / opt.inSampleSize > thumbnailBoundsWidthLimit)
                || (outHeight / opt.inSampleSize > thumbnailBoundsHeightLimit)) {
            opt.inSampleSize *= 2;
        }
        opt.inJustDecodeBounds = false;
        Bitmap bitmap = BitmapFactory.decodeResource(mResources, R.drawable.aurora_attach_default_bg, opt);
        return bitmap;
    }
",
Disable Action Bar button in Android,"if (disableButtonFlag) {
    menu.findItem(R.id.your_item).setEnabled(false);
} else {
    menu.findItem(R.id.your_item).setEnabled(true);
}",,"    public boolean onPrepareOptionsMenu (Menu menu) {
        super.onPrepareOptionsMenu(menu);
        menu.findItem(R.id.preview_mode).setEnabled(true);
        if (!mCalibrator.isCalibrated())
            menu.findItem(R.id.preview_mode).setEnabled(false);

        return true;
    }
",,"    public boolean onPrepareOptionsMenu (Menu menu) {
        super.onPrepareOptionsMenu(menu);
        menu.findItem(R.id.preview_mode).setEnabled(true);
        if (!mCalibrator.isCalibrated())
            menu.findItem(R.id.preview_mode).setEnabled(false);

        return true;
    }
",,,
Disable center button in MyLocation at Google Map API V2,"map.setMyLocationEnabled(true);
map.getUiSettings().setMyLocationButtonEnabled(false);",,"  @Override public void onMapReady(GoogleMap googleMap) {
    mMap = googleMap;
    mMap.getUiSettings().setMyLocationButtonEnabled(false);
    mMap.getUiSettings().setAllGesturesEnabled(false);
    mMap.getUiSettings().setZoomControlsEnabled(false);
  }
",,"  private void initMapsView() {
    mMap.getUiSettings().setCompassEnabled(true);
    mMap.getUiSettings().setMapToolbarEnabled(false);
    mMap.getUiSettings().setMyLocationButtonEnabled(true);
    mMap.getUiSettings().setZoomControlsEnabled(false);
    mMap.setBuildingsEnabled(false);
    mMap.setMapType(GoogleMap.MAP_TYPE_NORMAL);
  }
",,"    private void useUserLocation() {
        runOnUiThread(() -> {
            googleMap.setMyLocationEnabled(true);
            googleMap.getUiSettings().setMyLocationButtonEnabled(false);
            locationManager = (LocationManager) getSystemService(Context.LOCATION_SERVICE);
            Objects.requireNonNull(locationManager).requestLocationUpdates(LocationManager.GPS_PROVIDER, MIN_TIME, MIN_DISTANCE, this);
        });
    }
",
Soft keyboard enter key event handle,"if (keyCode == KeyEvent.KEYCODE_ENTER && event.getAction() == KeyEvent.ACTION_DOWN) {
    Log.d(TAG, ""enter_key_called"");
}",,"    public boolean onKey(View v, int keyCode, KeyEvent event) {
        if (keyCode == KeyEvent.KEYCODE_ENTER && event.getAction() == KeyEvent.ACTION_DOWN) {
            signupOrLogin(v);
        }
        return false;
    }
",,"    public boolean onKey(View view, int keyCode, KeyEvent event) {
      if (keyCode == KeyEvent.KEYCODE_ENTER && event.getAction() == KeyEvent.ACTION_DOWN) {
        launchSearch();
        return true;
      }
      return false;
    }
",,"        public boolean onKey(View view, int keyCode, KeyEvent event) {
            if (keyCode == KeyEvent.KEYCODE_ENTER && event.getAction() == KeyEvent.ACTION_DOWN) {
                launchSearch();
                return true;
            }
            return false;
        }
",
How to disable status bar / notification bar on android programmatically?,"requestWindowFeature(Window.FEATURE_NO_TITLE);
getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,
                     WindowManager.LayoutParams.FLAG_FULLSCREEN);",,"    private void hideStatusBar() {
        requestWindowFeature(Window.FEATURE_NO_TITLE);
        this.getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN);
    }
",,"    private void hideStatusBar() {
        requestWindowFeature(Window.FEATURE_NO_TITLE);
        this.getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN);
    }
",,"    private void hideStatusBar() {
        requestWindowFeature(Window.FEATURE_NO_TITLE);
        this.getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN);
    }
",
How to minimize whole application in android?,"Intent startMain = new Intent(Intent.ACTION_MAIN);
startMain.addCategory(Intent.CATEGORY_HOME);
startMain.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
startActivity(startMain);",,"    public static void makeAppBackToHome(Context context) {
        Intent intent = new Intent(Intent.ACTION_MAIN);
        intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
        intent.addCategory(Intent.CATEGORY_HOME);
        context.startActivity(intent);
    }
",,"    public void onBackPressed() {
        Intent intent = new Intent(Intent.ACTION_MAIN);
        intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
        intent.addCategory(Intent.CATEGORY_HOME);
        getAppContext().startActivity(intent);
    }
",,"    public void onBackPressed() {
        Intent intent = new Intent(Intent.ACTION_MAIN);
        intent.addCategory(Intent.CATEGORY_HOME);
        intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
        startActivity(intent);
    }
",
Start Google search query from activity - Android,"Intent intent = new Intent(Intent.ACTION_WEB_SEARCH);
intent.putExtra(SearchManager.QUERY, query); startActivity(intent);",query contains search string,"    public static void search(Context context, String string) {
        Intent intent = new Intent(Intent.ACTION_WEB_SEARCH);
        intent.putExtra(SearchManager.QUERY, string);
        context.startActivity(intent);
    }
",,"    public static Intent buildWebSearchIntent(String query) {
        Intent intent = new Intent(Intent.ACTION_WEB_SEARCH);
        intent.putExtra(SearchManager.QUERY, query);
        return intent;
    }
",," public Intent getIntent() throws CommandParseException {
  Intent intent = new Intent(Intent.ACTION_WEB_SEARCH);
  intent.putExtra(SearchManager.QUERY, getCommand());
  return intent;
 }
",
How to Launch Home Screen Programmatically in Android,"Intent startMain = new Intent(Intent.ACTION_MAIN);
        startMain.addCategory(Intent.CATEGORY_HOME);
        startMain.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
        startActivity(startMain);",,"    public static void makeAppBackToHome(Context context) {
        Intent intent = new Intent(Intent.ACTION_MAIN);
        intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
        intent.addCategory(Intent.CATEGORY_HOME);
        context.startActivity(intent);
    }
",,"    public void onBackPressed() {
        Intent intent = new Intent(Intent.ACTION_MAIN);
        intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
        intent.addCategory(Intent.CATEGORY_HOME);
        getAppContext().startActivity(intent);
    }
",,"    public void onBackPressed() {
        Intent intent = new Intent(Intent.ACTION_MAIN);
        intent.addCategory(Intent.CATEGORY_HOME);
        intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
        startActivity(intent);
    }
",
How to kill my own Activity - the hard way,"public void onDestroy() {
        super.onDestroy();
        android.os.Process.killProcess(android.os.Process.myPid());
    }",,"    protected void onDestroy() {
        android.os.Process.killProcess(android.os.Process.myPid());
        super.onDestroy();
    }
",,"    protected void onDestroy() {
        super.onDestroy();
        android.os.Process.killProcess(android.os.Process.myPid());
    }
",," protected void onDestroy() {
  android.os.Process.killProcess(android.os.Process.myPid());
  super.onDestroy();
 }
",
How to check availability of space on external storage?,"File externalStorageDir = Environment.getExternalStorageDirectory();
StatFs statFs = new StatFs(externalStorageDir.getAbsolutePath());  
long blocks = statFs.getAvailableBlocks();
long free = (blocks * statFs.getBlockSize()) / 1024 / 1024;",,"    public static long getDiskAvailableSize() {
        if (!existsSdcard()) return 0;
        File path = Environment.getExternalStorageDirectory();         StatFs stat = new StatFs(path.getAbsolutePath());
        long blockSize = stat.getBlockSize();
        long availableBlocks = stat.getAvailableBlocks();
        return availableBlocks * blockSize;
                    }
",sdcard   availableBlocks  blockSize1024 KIB    availableBlocks  blockSize1024 1024 MIB," public static double getSdcardAvail() {
 if (checkCard() == 0) {
     StatFs sf = new StatFs(Environment.getExternalStorageDirectory().getAbsolutePath());
     long blockSize = sf.getBlockSize();
     long availCount = sf.getAvailableBlocks();
     return availCount * blockSize / 1024 / 1024;
 } else {
     return 0;
 }
    }
",,"    public static boolean isExternalStorageSpaceEnough(long fileSize) {
        File sdcard = Environment.getExternalStorageDirectory();
        StatFs statFs = new StatFs(sdcard.getAbsolutePath());
        return getAvailableSize(statFs) > fileSize;
    }
",
Open url with an browser,"Intent intent= new Intent(Intent.ACTION_VIEW,Uri.parse(YOUR_URL));
startActivity(intent);",,"    public void onExternalPageRequest(String url) {
        Intent browserIntent = new Intent(Intent.ACTION_VIEW, Uri.parse(url));
        startActivity(browserIntent);
    }
",,"    private void openGithubPage() {
        Intent browserIntent = new Intent(Intent.ACTION_VIEW, Uri.parse(""http:        context.startActivity(browserIntent);
    }
",wwwgithubcomvarunest,"    public static void openURL(String url, Context context) {
        Intent i = new Intent(Intent.ACTION_VIEW, Uri.parse(url));
        context.startActivity(i);
    }
",
How to set multiple parent activities for using android back button,"switch (item.getItemId()) {
    case android.R.id.home:
        finish();
        return true;
    default:        
         return super.onOptionsItemSelected(item);
}",,"    public boolean onOptionsItemSelected(MenuItem item) {
        switch (item.getItemId()) {
            case android.R.id.home:
                finish();
                return true;
            default:
                return super.onOptionsItemSelected(item);
        }
    }
",,"    public boolean onOptionsItemSelected(MenuItem item) {
        switch (item.getItemId()){
            case android.R.id.home:
                finish();
                return true;
                            default: return super.onOptionsItemSelected(item);
        }
    }
",this is to prevent empty activity from loading up on up button press which could lead to app crash,"    public boolean onOptionsItemSelected(MenuItem item) {
        switch (item.getItemId()) {
            case android.R.id.home:
                finish();
                return true;
            default:
                return super.onOptionsItemSelected(item);
        }
    }
",
Android - width and height of bitmap without loading it,"BitmapFactory.Options options = new BitmapFactory.Options();
options.inJustDecodeBounds = true;
BitmapFactory.decodeResource(getResources(), R.id.myimage, options);
int imageHeight = options.outHeight;
int imageWidth = options.outWidth;",,"    private void setImg() {
        BitmapFactory.Options opts;
        opts = new BitmapFactory.Options();
                opts.inJustDecodeBounds = true;
        BitmapFactory.decodeResource(getResources(), R.drawable.launch, opts);
                int imageHeight = opts.outHeight;
        int imageWidth = opts.outWidth;

                WindowManager wm = (WindowManager) getSystemService(WINDOW_SERVICE);
        Point size = new Point();
        if (wm != null) {
            wm.getDefaultDisplay().getSize(size);
        }

                int scaleX = imageWidth / size.x;
        int scaleY = imageHeight / size.y;
        int scale = scaleX;

                        opts.inSampleSize = scale;
        opts.inJustDecodeBounds = false;

        Bitmap bitmap =
                BitmapFactory.decodeResource(getResources(), R.drawable.launch, opts);

        ImageView img = findViewById(R.id.img_launch);

        Log.i(TAG, ""image-height :\t"" + imageHeight);
        Log.i(TAG, ""image-width  :\t"" + imageWidth);
        Log.i(TAG, ""window-height:\t"" + size.y);
        Log.i(TAG, ""window-width :\t"" + size.x);
        Log.i(TAG, ""scaleX       :\t"" + scaleX);
        Log.i(TAG, ""scaleY       :\t"" + scaleY);
        Log.i(TAG, ""scale        :\t"" + scale);
        Log.i(TAG, ""final-height :\t"" + bitmap.getHeight());
        Log.i(TAG, ""final-width  :\t"" + bitmap.getWidth());
    }
",Options   Android      false                     ImageHelperdecodeSampledBitmapFromResourcegetResources Rdrawablestart sizex sizey          imgsetImageBitmapbitmap,"    public String imageWidthAndHeight(int drawId) {
        BitmapFactory.Options opts = new BitmapFactory.Options();
        opts.inJustDecodeBounds = true;
        BitmapFactory.decodeResource(getResources(), drawId, opts);
        opts.inSampleSize = 1;
        opts.inJustDecodeBounds = false;
        int width = opts.outWidth;
        int height = opts.outHeight;
        return ""å¾ççä¿¡æ¯ï¼é«-->"" + height + "",å®½-->"" + width;
    }
",Bitmap mBitmap BitmapFactorydecodeResourcegetResources drawId opts,"    public void setCentralMap(@NonNull CentralMap centralMap) {
        super.setCentralMap(centralMap);

                BitmapFactory.Options opts = new BitmapFactory.Options();
        opts.inJustDecodeBounds = true;
        BitmapFactory.decodeResource(centralMap.getResources(), R.drawable.final_destination, opts);
        mMarkerWidth = opts.outWidth;
        mMarkerHeight = opts.outHeight;

                mMetrics = new DisplayMetrics();
        centralMap.getWindowManager().getDefaultDisplay().getMetrics(mMetrics);
    }
",Get the size of the marker  Well need this for later   Build up our metrics too
programmatic click in Android WebView,"webView.loadUrl(""javascript:(function(){""+
    ""l=document.getElementById('mA');""+
    ""e=document.createEvent('HTMLEvents');""+
    ""e.initEvent('click',true,true);""+
    ""l.dispatchEvent(e);""+
    ""})()"");",,"        public void onPageFinished(WebView view, String url) {
            mWebClient.loadUrl(""javascript:(function(){"" +
                    ""document.getElementsByClassName('header-main show-logo-center nav-dark')[0].style.display='none';"" +
                    ""})()"");
        }
",,"    private void addImageClickListener() {
        this.mWebView.loadUrl(""javascript:(function(){"" + "" var objs = document.getElementsByTagName(\""img\""); "" + "" var arr=new Array(); for   "" +
                ""(var i=0;i <objs.length;i++) { arr[i]= objs[i].src;}  "" + ""for(var i=0;i<objs.length;i++)  "" + ""{"" + ""    objs[i].onclick=function"" +
                ""()  "" + ""    {  "" + ""        window.imagelistner.openImage(arr,this.src);  "" + ""    }  "" + ""}"" + ""})()"");

    }
",," private void addImageClickListner() {
    web_customer.loadUrl(""javascript:(function(){""
    + ""var objs = document.getElementsByTagName(\""img\""); ""
    + ""for(var i=0;i<objs.length;i++)  "" + ""{""
    + ""    objs[i].onclick=function()  "" + ""    {  ""
    + ""        window.imagelistner.openImage(this.src);  ""
    + ""    }  "" + ""}"" + ""})()"");
 }
",jsimgonclickjavaurl
Check whether headphones are plugged in,"AudioManager audioManager = (AudioManager)getSystemService(Context.AUDIO_SERVICE);
audioManager.isWiredHeadsetOn();",,"    private void checkHeadsetState() {
                mAudioManager = (AudioManager) getSystemService(Context.AUDIO_SERVICE);
                mComponentName = new ComponentName(getPackageName(),
                HeadsetButtonReceiver.class.getName());
        boolean wiredHeadsetOn = mAudioManager.isWiredHeadsetOn();
        if(wiredHeadsetOn){
            mAudioManager.registerMediaButtonEventReceiver(mComponentName);
        }
    }
",AudioManagerMediaButton,"    private static void initSensor() {

        if (!isRegisterSensor) {

            registerMediaBottom();

            headsetPluginReciver = new HeadsetPluginReciver();
            
            mSensorManager = (SensorManager) context.getSystemService(Context.SENSOR_SERVICE);
            mProximity = mSensorManager.getDefaultSensor(Sensor.TYPE_PROXIMITY);
            sensorEventListener = new SensorEventListener() {
                @Override
                public void onSensorChanged(SensorEvent event) {

                    if (event.sensor.getType() == Sensor.TYPE_PROXIMITY) {

                        AudioManager am = (AudioManager) G.context.getSystemService(AUDIO_SERVICE);
                        if (am.isWiredHeadsetOn() || am.isSpeakerphoneOn()) {
                            return;
                        }

                        boolean newIsNear = Math.abs(event.values[0]) < Math.min(event.sensor.getMaximumRange(), 3);
                        if (newIsNear != isNearDistance) {
                            isNearDistance = newIsNear;
                            if (isVoice) {
                                changeStreamType();
                            }
                        }
                    }
                }

                @Override
                public void onAccuracyChanged(Sensor sensor, int accuracy) {

                }
            };

            IntentFilter filter = new IntentFilter(Intent.ACTION_HEADSET_PLUG);
            context.registerReceiver(headsetPluginReciver, filter);

                        
            registerDistanceSensor();

            isRegisterSensor = true;
        }
    }
",bluetoothCallbacks  new BluetoothCallbacks  IntentFilter filterBluetooth  new IntentFilterBluetoothAdapterACTIONSTATECHANGED  contextregisterReceiverbluetoothCallbacks filterBluetooth,"package irdc.ex07_08;  import android.app.Activity; import android.content.Context; import android.media.AudioManager; import android.os.Bundle; import android.view.View; import android.widget.Button; import android.widget.ImageButton; import android.widget.ImageView; import android.widget.ProgressBar; public class EX07_08 extends Activity {  private ImageView myImage; private ImageButton downButton; private ImageButton upButton; private ImageButton normalButton; private ImageButton muteButton; private ImageButton vibrateButton; private ProgressBar myProgress; private AudioManager audioMa; private int volume=0; @Override public void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.main);  audioMa = (AudioManager)getSystemService(Context.AUDIO_SERVICE); myImage = (ImageView)findViewById(R.id.myImage); myProgress = (ProgressBar)findViewById(R.id.myProgress); downButton = (ImageButton)findViewById(R.id.downButton); upButton = (ImageButton)findViewById(R.id.upButton); normalButton = (ImageButton)findViewById(R.id.normalButton); muteButton = (ImageButton)findViewById(R.id.muteButton); vibrateButton = (ImageButton)findViewById(R.id.vibrateButton);  volume=audioMa.getStreamVolume(AudioManager.STREAM_RING); myProgress.setProgress(volume);  int mode=audioMa.getRingerMode(); if(mode==AudioManager.RINGER_MODE_NORMAL) { myImage.setImageDrawable(getResources() .getDrawable(R.drawable.normal)); } else if(mode==AudioManager.RINGER_MODE_SILENT) { myImage.setImageDrawable(getResources() .getDrawable(R.drawable.mute)); } else if(mode==AudioManager.RINGER_MODE_VIBRATE) { myImage.setImageDrawable(getResources() .getDrawable(R.drawable.vibrate)); }  downButton.setOnClickListener(new Button.OnClickListener() { @Override public void onClick(View arg0) {  audioMa.adjustVolume(AudioManager.ADJUST_LOWER, 0); volume=audioMa.getStreamVolume(AudioManager.STREAM_RING); myProgress.setProgress(volume);  int mode=audioMa.getRingerMode(); if(mode==AudioManager.RINGER_MODE_NORMAL) { myImage.setImageDrawable(getResources() .getDrawable(R.drawable.normal)); } else if(mode==AudioManager.RINGER_MODE_SILENT) { myImage.setImageDrawable(getResources() .getDrawable(R.drawable.mute)); } else if(mode==AudioManager.RINGER_MODE_VIBRATE) { myImage.setImageDrawable(getResources() .getDrawable(R.drawable.vibrate)); } } });  upButton.setOnClickListener(new Button.OnClickListener() { @Override public void onClick(View arg0) {  audioMa.adjustVolume(AudioManager.ADJUST_RAISE, 0); volume=audioMa.getStreamVolume(AudioManager.STREAM_RING); myProgress.setProgress(volume);  int mode=audioMa.getRingerMode(); if(mode==AudioManager.RINGER_MODE_NORMAL) { myImage.setImageDrawable(getResources() .getDrawable(R.drawable.normal)); } else if(mode==AudioManager.RINGER_MODE_SILENT) { myImage.setImageDrawable(getResources() .getDrawable(R.drawable.mute)); } else if(mode==AudioManager.RINGER_MODE_VIBRATE) { myImage.setImageDrawable(getResources() .getDrawable(R.drawable.vibrate)); } } });  normalButton.setOnClickListener(new Button.OnClickListener() { @Override public void onClick(View arg0) {  audioMa.setRingerMode(AudioManager.RINGER_MODE_NORMAL);  volume=audioMa.getStreamVolume(AudioManager.STREAM_RING); myProgress.setProgress(volume); myImage.setImageDrawable(getResources() .getDrawable(R.drawable.normal)); } });  muteButton.setOnClickListener(new Button.OnClickListener() { @Override public void onClick(View arg0) {  audioMa.setRingerMode(AudioManager.RINGER_MODE_SILENT);  volume=audioMa.getStreamVolume(AudioManager.STREAM_RING); myProgress.setProgress(volume); myImage.setImageDrawable(getResources() .getDrawable(R.drawable.mute)); } });  vibrateButton.setOnClickListener(new Button.OnClickListener() { @Override public void onClick(View arg0) {  audioMa.setRingerMode(AudioManager.RINGER_MODE_VIBRATE);  volume=audioMa.getStreamVolume(AudioManager.STREAM_RING); myProgress.setProgress(volume); myImage.setImageDrawable(getResources() .getDrawable(R.drawable.vibrate)); } }); } }
",importclass               Button         Button         Button   NORMAL      Button   SILENT      Button   VIBRATE
How to ignore accent in SQLite query (Android),"String asciiName = Normalizer.normalize(unicodeName, Normalizer.Form.NFD)
    .replaceAll(""[^\\p{ASCII}]"", """");",,,,,,,
Android open camera from button,"Intent intent = new Intent(""android.media.action.IMAGE_CAPTURE"");
startActivity(intent);",,"    private void openCamera() {
        Intent intent = new Intent(""android.media.action.IMAGE_CAPTURE"");
        startActivity(intent);
    }
",,"    private void takePhoto() {
        Intent i = new Intent(""android.media.action.IMAGE_CAPTURE"");
        context.startActivityForResult(i, Activity.DEFAULT_KEYS_DIALER);
    }
",,"        public void onReportImgClick(View v) {
            Intent i = new Intent(""android.media.action.IMAGE_CAPTURE"");
            startActivityForResult(i, Activity.DEFAULT_KEYS_DIALER);
        }
",
"Make Tabs on ActionBar scroll when reach limit, rather than create a dropdown-list","actionBar.setDisplayShowTitleEnabled(false);
actionBar.setNavigationMode(ActionBar.NAVIGATION_MODE_TABS);",,"    private void buildActionBarAndViewPagerTitles() {
        ActionBar actionBar = getActionBar();
        actionBar.setDisplayHomeAsUpEnabled(true);
        actionBar.setDisplayShowHomeEnabled(true);
        actionBar.setDisplayUseLogoEnabled(false);
        actionBar.setDisplayShowTitleEnabled(true);

        actionBar.setTitle(getString(R.string.search));
        actionBar.setNavigationMode(ActionBar.NAVIGATION_MODE_TABS);

        actionBar.addTab(actionBar.newTab()
                .setText(getString(R.string.status))
                .setTabListener(tabListener));

        actionBar.addTab(actionBar.newTab()
                .setText(getString(R.string.user))
                .setTabListener(tabListener));
    }
",,"    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        ActionBar actionBar = getSupportActionBar();
        actionBar.setNavigationMode(ActionBar.NAVIGATION_MODE_TABS);
        actionBar.setDisplayShowTitleEnabled(false);
        actionBar.setDisplayShowHomeEnabled(false);

        mSelectedLayoutId = DEFAULT_LAYOUT;
        if (savedInstanceState != null) {
            mSelectedLayoutId = savedInstanceState.getInt(ARG_SELECTED_LAYOUT_ID);
        }

        addLayoutTab(
                actionBar, R.layout.layout_list, R.drawable.ic_list, ""list"");
        addLayoutTab(
                actionBar, R.layout.layout_grid, R.drawable.ic_grid, ""grid"");
        addLayoutTab(
                actionBar, R.layout.layout_staggered_grid, R.drawable.ic_staggered, ""staggered"");
        addLayoutTab(
                actionBar, R.layout.layout_spannable_grid, R.drawable.ic_spannable, ""spannable"");
    }
",,"    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.two_way_view_activity_main);

        ActionBar actionBar = getSupportActionBar();
        actionBar.setNavigationMode(ActionBar.NAVIGATION_MODE_TABS);
        actionBar.setDisplayShowTitleEnabled(false);
        actionBar.setDisplayShowHomeEnabled(false);

        mSelectedLayoutId = DEFAULT_LAYOUT;
        if (savedInstanceState != null) {
            mSelectedLayoutId = savedInstanceState.getInt(ARG_SELECTED_LAYOUT_ID);
        }

        addLayoutTab(
                actionBar, R.layout.two_way_view_layout_list, R.drawable.two_way_view_ic_list, ""list"");
        addLayoutTab(
                actionBar, R.layout.two_way_view_layout_grid, R.drawable.two_way_view_ic_grid, ""grid"");
        addLayoutTab(
                actionBar, R.layout.two_way_view_layout_staggered_grid, R.drawable.two_way_view_ic_staggered, ""staggered"");
        addLayoutTab(
                actionBar, R.layout.two_way_view_layout_spannable_grid, R.drawable.two_way_view_ic_spannable, ""spannable"");
    }
",
The onClick() of ClickableSpan is not working for URLSpan?,strBuilder.removeSpan(span);,The original URLSpan needs to be removed to block the behavior of browser opening,"    public static void stopSelecting(View view, Spannable content) {
        content.removeSpan(SELECTING);
    }
",,"    private void removeSpan(Object what) {
        spannable.removeSpan(what);
    }
",,"    private void removeSpan(Spannable spannable, Object what) {
        spannable.removeSpan(what);
    }
",
How to know if an activity is called using startActivityForResult or simply called by using startActivity?,"if (getCallingActivity() == null) {
    } else {
   }",This Activity was called by startActivity   This Activity was called by startActivityForResult,,,"    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.com_spotify_sdk_login_activity);

        mRequest = getRequestFromIntent();

        mAuthenticationClient.setOnCompleteListener(this);

        if (getCallingActivity() == null) {
            Log.e(TAG, NO_CALLER_ERROR);
            finish();
        } else if (mRequest == null) {
            Log.e(TAG, NO_REQUEST_ERROR);
            setResult(Activity.RESULT_CANCELED);
            finish();
        } else {
            Log.d(TAG, mRequest.toUri().toString());
            mAuthenticationClient.authenticate(mRequest);
        }
    }
",,"    private String getPrompt() {
        String prompt = getExtras().getString(RecognizerIntent.EXTRA_PROMPT);
        if (prompt == null && getExtraResultsPendingIntent() == null && getCallingActivity() == null) {
            return getString(R.string.promptSearch);
        }
        return prompt;
    }
",
How to open phones gallery through code,"Intent intent = new Intent();
intent.setType(""image/*"");
intent.setAction(Intent.ACTION_GET_CONTENT);
startActivityForResult(Intent.createChooser(intent, ""Select Picture""),SELECT_IMAGE);",,"    public void openGallery() {
        Intent intent = new Intent();
        intent.setType(""image/*"");
        intent.setAction(Intent.ACTION_GET_CONTENT);
        startActivityForResult(Intent.createChooser(intent, ""Select Image""), PICK_IMAGE);
    }
",,"    private void chooseImage() {
        Intent intent = new Intent();
        intent.setType(""image/*"");
        intent.setAction(Intent.ACTION_GET_CONTENT);
        startActivityForResult(Intent.createChooser(intent, ""Select Picture""), PICK_IMAGE_REQUEST);
    }
",,"    private void chooseImage() {
        Intent intent = new Intent();
        intent.setType(""image/*"");
        intent.setAction(Intent.ACTION_GET_CONTENT);
        startActivityForResult(Intent.createChooser(intent, ""Select Picture""), PICK_IMAGE_REQUEST);
    }
",
Android: How can I add HTML links inside a ListView?,"textcontent.setText(Html.fromHtml(item.get_text()));
textcontent.setAutoLinkMask(Linkify.WEB_URLS);",,"    protected void initialize(final Activity activity, Tab tab) {
        Resources resources = activity.getResources();
        mSuccessColor = colorToHexValue(ApiCompatibilityUtils.getColor(resources,
                R.color.physical_web_diags_success_color));
        mFailureColor = colorToHexValue(ApiCompatibilityUtils.getColor(resources,
                R.color.physical_web_diags_failure_color));
        mIndeterminateColor = colorToHexValue(ApiCompatibilityUtils.getColor(resources,
                R.color.physical_web_diags_indeterminate_color));

        LayoutInflater inflater = LayoutInflater.from(activity);
        mPageView = inflater.inflate(R.layout.physical_web_diagnostics, null);

        mLaunchButton = (Button) mPageView.findViewById(R.id.physical_web_launch);
        mLaunchButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                activity.startActivity(createListUrlsIntent());
            }
        });

        mDiagnosticsText = (TextView) mPageView.findViewById(R.id.physical_web_diagnostics_text);
        mDiagnosticsText.setAutoLinkMask(Linkify.WEB_URLS);
        mDiagnosticsText.setText(Html.fromHtml(createDiagnosticsReportHtml()));
    }
",,"    protected void initialize(final Activity activity, NativePageHost host) {
        Resources resources = activity.getResources();
        mSuccessColor = colorToHexValue(ApiCompatibilityUtils.getColor(resources,
                R.color.physical_web_diags_success_color));
        mFailureColor = colorToHexValue(ApiCompatibilityUtils.getColor(resources,
                R.color.physical_web_diags_failure_color));
        mIndeterminateColor = colorToHexValue(ApiCompatibilityUtils.getColor(resources,
                R.color.physical_web_diags_indeterminate_color));

        LayoutInflater inflater = LayoutInflater.from(activity);
        mPageView = inflater.inflate(R.layout.physical_web_diagnostics, null);

        mLaunchButton = (Button) mPageView.findViewById(R.id.physical_web_launch);
        mLaunchButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                PhysicalWebUma.onActivityReferral(PhysicalWebUma.DIAGNOSTICS_REFERER);
                PhysicalWeb.showUrlList();
            }
        });

        mDiagnosticsText = (TextView) mPageView.findViewById(R.id.physical_web_diagnostics_text);
        mDiagnosticsText.setAutoLinkMask(Linkify.WEB_URLS);
        mDiagnosticsText.setText(Html.fromHtml(createDiagnosticsReportHtml()));
    }
",,,
Redirect user to the Subscription page in the playstore,"Intent browserIntent = new Intent(Intent.ACTION_VIEW,
          Uri.parse(""https:  startActivity(browserIntent);",playgooglecomstoreaccount,"    public void onExternalPageRequest(String url) {
        Intent browserIntent = new Intent(Intent.ACTION_VIEW, Uri.parse(url));
        startActivity(browserIntent);
    }
",,"    private void openGithubPage() {
        Intent browserIntent = new Intent(Intent.ACTION_VIEW, Uri.parse(""http:        context.startActivity(browserIntent);
    }
",wwwgithubcomvarunest,"    public static void openURL(String url, Context context) {
        Intent i = new Intent(Intent.ACTION_VIEW, Uri.parse(url));
        context.startActivity(i);
    }
",
Using full screen Activity,"getWindow().getDecorView().setSystemUiVisibility(
  View.SYSTEM_UI_FLAG_LAYOUT_STABLE
| View.SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION
| View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN
| View.SYSTEM_UI_FLAG_HIDE_NAVIGATION
| View.SYSTEM_UI_FLAG_FULLSCREEN
| View.SYSTEM_UI_FLAG_IMMERSIVE_STICKY);",,"    public static void requestImmersiveStickyMode(Activity activity) {
        activity.getWindow().getDecorView().setSystemUiVisibility(View.SYSTEM_UI_FLAG_LAYOUT_STABLE
                | View.SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION
                | View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN
                | View.SYSTEM_UI_FLAG_HIDE_NAVIGATION
                | View.SYSTEM_UI_FLAG_FULLSCREEN
                | View.SYSTEM_UI_FLAG_IMMERSIVE_STICKY);
    }
",,"    protected void hideSystemUI() {
        getWindow().getDecorView().setSystemUiVisibility(View.SYSTEM_UI_FLAG_LAYOUT_STABLE
                | View.SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION
                | View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN
                | View.SYSTEM_UI_FLAG_HIDE_NAVIGATION
                | View.SYSTEM_UI_FLAG_FULLSCREEN
                | View.SYSTEM_UI_FLAG_IMMERSIVE_STICKY);
    }
",,"    protected void hideSystemUI() {
        getWindow().getDecorView().setSystemUiVisibility(View.SYSTEM_UI_FLAG_LAYOUT_STABLE
                | View.SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION
                | View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN
                | View.SYSTEM_UI_FLAG_HIDE_NAVIGATION
                | View.SYSTEM_UI_FLAG_FULLSCREEN
                | View.SYSTEM_UI_FLAG_IMMERSIVE_STICKY);
    }
",
When do we use the recyclerView.setHasFixedSize?,"RecyclerView recyclerView = (RecyclerView) findViewById(R.id.list);
recyclerView.setHasFixedSize(true);",,"    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_curved_motion_grid);

        RecyclerView list = (RecyclerView) findViewById(R.id.list);
        list.setLayoutManager(new LinearLayoutManager(this));
        list.setAdapter(new MessageAdapter(this));
        list.setHasFixedSize(true);
    }
",,"    private void initViews() {
        FloatingActionButton fab = (FloatingActionButton) findViewById(R.id.fab);
        fab.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                showAddPerson();
            }
        });

        mEmptyTextView = (TextView) findViewById(R.id.emptyTextView);

        RecyclerView recyclerView = (RecyclerView) findViewById(R.id.list);
        recyclerView.setHasFixedSize(true);
        recyclerView.setLayoutManager(new LinearLayoutManager(this));
        mPeopleAdapter = new PeopleAdapter(this);
        recyclerView.setAdapter(mPeopleAdapter);
    }
",,"    private void initializeRecylerView() {

        mAdapter = new GalleryAdapter(GalleryDatabaseService.getInstance(this).getDatabaseList(), this);
        mAdapter.setAnimationOnScrolling(false);

        mRecyclerView = (RecyclerView) findViewById(R.id.list);
        mRecyclerView.setLayoutManager(createNewGridLayoutManager());
        mRecyclerView.setAdapter(mAdapter);
        mRecyclerView.setHasFixedSize(true);
        mRecyclerView.setItemAnimator(new DefaultItemAnimator());
        FastScroller fastScroller = (FastScroller) findViewById(R.id.fast_scroller);
        mAdapter.setFastScroller(fastScroller,
                Utils.getColorAccent(this), this);

        mAdapter.setDisplayHeadersAtStartUp(true)
                .setStickyHeaders(true)
                .showAllHeaders();

    }
",
When I run Thread second time: java.lang.IllegalThreadStateException: Thread already started,"if (thread.getState() == Thread.State.NEW)
{
     thread.start();
}",,"    public void onClick(View view) {
        switch(view.getId()){
            case R.id.btn_s_listen_for_clients:
                                if(serverThread.getState() == Thread.State.NEW)                     serverThread.start();
                break;
            case R.id.btn_s_start_game_initialization:

                break;
        }
    }
",start server  httpsdeveloperandroidcomreferencejavalangThreadStatehtmlRUNNABLE,"    public void surfaceCreated(SurfaceHolder holder) {
        Log.d(TAG, ""surfaceCreated: "");
        SharedPreferences prefs = getContext().getSharedPreferences(ARCADE_PREF_KEY, Context.MODE_PRIVATE);
        long pauseStartTime = prefs.getLong(""pauseStartTime"", 0);
        long pauseTime = System.currentTimeMillis() - pauseStartTime;
        StartTime += pauseTime;
                thread = new ArcadeModeThread(getHolder(), this);
        thread.setRunning(true);
        if (thread.getState() == Thread.State.NEW) {
            thread.start();
        }
    }
",create the game loop thread,"    private void queuePhoto(String url, Context _context, ImageView imageView, ProgressBar progressBar)
    {
                photosQueue.Clean(imageView);
        PhotoToLoad p=new PhotoToLoad(url, imageView, progressBar);
        synchronized(photosQueue.photosToLoad){
            photosQueue.photosToLoad.push(p);
            photosQueue.photosToLoad.notifyAll();
        }
        
                if(photoLoaderThread.getState()==Thread.State.NEW)
            photoLoaderThread.start();
    }
",This ImageView may be used for other images before So there may be some old tasks in the queue We need to discard them   start thread if its not started yet
Is there a way an app can check if it is allowed to access notifications?,"String enabledListeners = Settings.Secure.getString(context.getContentResolver(), 
    ""enabled_notification_listeners"");",,"    public static boolean weCanListenToNotifications(Context c) {
        String listOfEnabledNotificationListeners = Settings.Secure.getString(c.getContentResolver(), ""enabled_notification_listeners"");
        String ourNotificationListener = c.getApplicationContext().getPackageName();
        return listOfEnabledNotificationListeners != null &&
                listOfEnabledNotificationListeners.contains(ourNotificationListener);
    }
",,"    private boolean checkAccess(Context context) {
        ComponentName cn = new ComponentName(context, ReadNotService.class);
        String flat = Settings.Secure.getString(context.getContentResolver(), ""enabled_notification_listeners"");
        boolean enabled = flat != null && flat.contains(cn.flattenToString());
        return enabled;
    }
",,"    private boolean isNotificationListenerSettingEnabled() {
        if (getContext() == null)
            return false;
        String notificationEnabled = Settings.Secure.getString(getContext().getContentResolver(), ""enabled_notification_listeners"");
        if (TextUtils.isEmpty(notificationEnabled))
            return false;
        for (String name : notificationEnabled.split("":"")) {
            ComponentName cn = ComponentName.unflattenFromString(name);
            if (cn != null) {
                if (TextUtils.equals(getContext().getPackageName(), cn.getPackageName())) {
                    return true;
                }
            }
        }
        return false;
    }
",
How to determine which platform the current app is running on in LibGDX?,"if(Gdx.app.getType() == ApplicationType.iOS) {
    }",Do awesome stuff for iOS here,"    private static void resolve () {
                try {
                        if (Gdx.app.getType() == Application.ApplicationType.iOS) {
                try {
                                        Class<?> iapClazz =
                        ClassReflection.forName(""com.badlogic.gdx.pay.ios.apple.PurchaseManageriOSApple"");
                    PurchaseSystem.setManager((PurchaseManager) ClassReflection.newInstance(iapClazz));

                                        Gdx.app.log(TAG, ""IAP: gdx-pay successfully instantiated."");
                } catch (Exception e) {
                                        Gdx.app.log(TAG, ""IAP: Error creating IAP for iOS (are the gdx-pay**.jar files installed?)."", e);
                }
                return;
            }

                        if (Gdx.app.getType() == Application.ApplicationType.Android) {
                try {
                                        Class<?> iapClazz = ClassReflection.forName(""com.badlogic.gdx.pay.android.IAP"");
                    Method method = ClassReflection.getMethod(iapClazz, ""setup"");
                    method.invoke(null);
                } catch (Exception e) {
                                        Gdx.app.log(TAG,
                        ""IAP: Error creating IAP for Android (are the gdx-pay**.jar files installed?)."", e);
                }
                return;
            }

                        Gdx.app.log(TAG, ""IAP: gdx-pay not instantiated via reflection."");
        } catch (Exception e) {
                    }
    }
",obtain the Gdx class   check if we are on iOS   look for gdxpayiosrobovm or gdxpayiosmoe and if it exists instantiate it gdxpay jars need to be in place   notify of success   some jar files appear to be missing   check if we are on Android   look for gdxpayandroid and if it exists instantiate it gdxpay jars need to be in place   some jar files appear to be missing   notify not reflection   we appear not to be on libGDX," public static boolean isPhone() {
  if (Gdx.app.getType() == ApplicationType.Android || Gdx.app.getType() == ApplicationType.iOS) {
   return true;
  } else {
   return false;
  }
 }
",," public static void generateMipMap (int target, Pixmap pixmap, int textureWidth, int textureHeight) {
  if (!useHWMipMap) {
   generateMipMapCPU(target, pixmap, textureWidth, textureHeight);
   return;
  }

  if (Gdx.app.getType() == ApplicationType.Android || Gdx.app.getType() == ApplicationType.WebGL
   || Gdx.app.getType() == ApplicationType.iOS) {
   generateMipMapGLES20(target, pixmap);
  } else {
   generateMipMapDesktop(target, pixmap, textureWidth, textureHeight);
  }
 }
",
Setting WebView to view Desktop Site and Not Mobile Site,"String newUA= ""Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.4) Gecko/20100101 Firefox/4.0"";
 mWebView.getSettings().setUserAgentString(newUA);",,"    public void setUserAgentToDesktop(boolean desktop){
        if (desktop){
            String osString = userAgent.substring(userAgent.indexOf(""(""), userAgent.indexOf("")"") + 1);
            web.getSettings().setUserAgentString(userAgent.replace(osString,""(X11; Linux x86_64)""));
        }else{
            web.getSettings().setUserAgentString(userAgent);
        }
    }
",,"    public void setUserAgent(Context context, WebView mWebView, boolean choice, String url) {
        if (mWebView != null) {
            String DEFAULT_USER_AGENT = getDefaultUA(context);
            if (choice) {
                CookieManager mCookieManager = CookieManager.getInstance();
                clearCookieByUrl(url, mCookieManager);
                mWebView.getSettings().setUserAgentString(DESKTOP_USER_AGENT);
                mWebView.zoomOut();
            } else {
                CookieManager mCookieManager = CookieManager.getInstance();
                clearCookieByUrl(url, mCookieManager);
                mWebView.getSettings().setUserAgentString(DEFAULT_USER_AGENT);
                mWebView.zoomOut();
            }
        }
    }
",,"    private void setUpWebView() {

        tgWebView.getSettings().setJavaScriptEnabled(true);
        tgWebView.addJavascriptInterface(new TGWebAppInterface(this), ""Android"");
        tgWebView.getSettings().setUserAgentString(""Mozilla/5.0 (iPhone; U; CPU like Mac OS X; en) AppleWebKit/420+ (KHTML, like Gecko) Version/3.0 Mobile/1A543a Safari/419.3"");

                tgWebView.setWebViewClient(new WebViewClient() {

                        public void onPageFinished(WebView view, String url) {
                tgProgressBar.setVisibility(View.GONE);             }
        });

        tgWebView.loadUrl(currentURL);     }
",Sets a listener for the WebView   onPageFinished Runs when the WebView has fully loaded   Hides the progress bar   Loads the URL for the WebView
How to get a reference to LocationManager inside a Fragment,"LocationManager mgr = 
(LocationManager)getActivity().getSystemService(Context.LOCATION_SERVICE);",,"    private LatLng getLastKnownLatLng() {
        Location location = ((LocationManager) getActivity().getSystemService(Context.LOCATION_SERVICE)).getLastKnownLocation(""gps"");
        return locationToLatLng(location);
    }
",,"    public void onCreate(@Nullable Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        mLocationManager = (LocationManager) getActivity().getSystemService(Context.LOCATION_SERVICE);
    }
",,"    public void onPause() {
        LocationManager locMan = (LocationManager) getActivity().getSystemService(Context.LOCATION_SERVICE);
        locMan.removeUpdates(this);
        super.onPause();
    }
",
Open Twitter application user profile from Android application,"try {
   startActivity(new Intent(Intent.ACTION_VIEW, Uri.parse(""twitter:}catch (Exception e) {
   startActivity(new Intent(Intent.ACTION_VIEW, Uri.parse(""https:}",userscreenname  twitterusername  twittercom  twitterusername,"    public void twitterClicked(View v, String name) {
        Intent intent = null;
        try {
                    getPackageManager().getPackageInfo(""com.twitter.android"", 0);
            intent = new Intent(Intent.ACTION_VIEW, Uri.parse(""twitter:            intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
        } catch (Exception e) {
                    intent = new Intent(Intent.ACTION_VIEW, Uri.parse(""https:        }
        startActivity(intent);
    }
",get the Twitter app if possible  userscreenname  name   no Twitter app revert to browser  twittercom  name,"    void onTwitterNameClicked() {
        if (user == null) {
            return;
        }

        try {
            getContext().startActivity(new Intent(Intent.ACTION_VIEW,
                    Uri.parse(""twitter:        } catch (Exception e) {
            getContext().startActivity(new Intent(Intent.ACTION_VIEW,
                    Uri.parse(""https:        }
    }
",userscreenname  usergetTwitterScreenName  twittercom  usergetTwitterScreenName,"    public static void startTwitter(Activity context, String name) {
        try {
            context.getPackageManager().getPackageInfo(""com.twitter.android"", 0);
            Intent intent = new Intent(Intent.ACTION_VIEW, Uri.parse(""twitter:            intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
            context.startActivity(intent);
        } catch (Exception e) {
            try {
                Intent intent = new Intent(Intent.ACTION_VIEW, Uri.parse(""https:                context.startActivity(intent);
            } catch (Exception e1) {
                Toast.makeText(context, R.string.egab_can_not_open, Toast.LENGTH_SHORT).show();
            }
        }
    }
",userscreenname  name  twittercom  name
deleting android sqllite rows older than x days,"String sql = ""DELETE FROM myTable WHERE Save_Date <= date('now','-2 day')""; 
db.execSQL(sql);",,"    private void updateAccount(Database db, String realId) {
        db.execSQL(""UPDATE Accounts SET REAL_ID = ?"", new String[]{realId});
    }
",,"    public void testExecSQLWithEmptyBindArgs() throws Exception {
        database.execSQL(""insert into exectable (first_column) values ('eff');"", new String[]{});
    }
",,"    public void testExecSQLTooManyBindArguments() throws Exception {
        database.execSQL(""insert into exectable (first_column) values ('kjhk');"", new String[]{""xxxx""});
    }
",
How to get elements(findViewById) for a layout which is dynamically loaded(setView) in a dialog?,"View view = (View) LayoutInflater.from(ctx).inflate(R.layout.preference_report_bug_layout, null);
EditText editText = view.findViewById(R.id.bug_description_edittext);
builder.setView(view);",,"    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
        View view = inflater.inflate(R.layout.fragment_description, container, false);
        descriptionContent = (EditText) view.findViewById(R.id.description_content);
        descriptionLastedEditedTime = (TextView) view.findViewById(R.id.description_last_edited_time);
        descriptionContent.setText(care.getDescription());
        descriptionLastedEditedTime.setText(SimpleDateFormat.getDateInstance(DateFormat.LONG, AppManager.LOCALE).format(new Date(care.getDescriptionLastEditedTime())) + ""  "");
        descriptionLastedEditedTime.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                final EditText title = (EditText) LayoutInflater.from(getActivity()).inflate(R.layout.dialog_edit_text, null);
                title.setText(care.getDescriptionTitle());
                new AlertDialog.Builder(getActivity())
                        .setTitle(R.string.edit_description_title)
                        .setView(title)
                        .setNegativeButton(R.string.cancel, null)
                        .setPositiveButton(R.string.save, new DialogInterface.OnClickListener() {
                            @Override
                            public void onClick(DialogInterface dialog, int which) {
                                descriptionTitle = title.getText().toString();
                                care.setDescriptionTitle(descriptionTitle);
                                getActivity().recreate();
                                dialog.dismiss();
                            }
                        })
                        .create().show();
            }
        });
        return view;
    }
",,"    public void showAddBookmarkDlg(final ActionEx action) {
        final Context context = getContext();
        final View view = action.getParameter(IActionController.VIEW_PROPERTY);
        final Bookmark bookmark = (Bookmark) view.getTag();

        final EditText input = (EditText) LayoutInflater.from(getContext()).inflate(R.layout.bookmark_edit, null);
        final ActionDialogBuilder builder = new ActionDialogBuilder(getContext(), actions);
        builder.setMessage(R.string.add_bookmark_name);
        builder.setView(input);

        if (bookmark == null) {
            builder.setTitle(R.string.menu_add_bookmark);

            final SeekBar seekbar = (SeekBar) findViewById(R.id.seekbar);
            final int viewIndex = seekbar.getProgress();

            input.setText(context.getString(R.string.text_page) + "" "" + (viewIndex + offset));
            input.selectAll();

            builder.setPositiveButton(R.id.actions_addBookmark, new EditableValue(""input"", input), new Constant(
                    ""viewIndex"", viewIndex));
        } else {
            builder.setTitle(R.string.menu_edit_bookmark);

            input.setText(bookmark.name);
            input.selectAll();

            builder.setPositiveButton(R.id.actions_addBookmark, new EditableValue(""input"", input), new Constant(
                    ""bookmark"", bookmark));
        }

        builder.setNegativeButton().show();
    }
",,"    public static void showKeyboardDialog() {
        Activity topActivity = ActivityUtils.getTopActivity();
        if (topActivity == null) return;
        final View dialogView = LayoutInflater.from(topActivity).inflate(R.layout.dialog_keyboard, null);
        final EditText etInput = dialogView.findViewById(R.id.et_input);
        final AlertDialog dialog = new AlertDialog.Builder(topActivity).setView(dialogView).create();
        dialog.setCanceledOnTouchOutside(false);
        View.OnClickListener listener = new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                switch (v.getId()) {
                    case R.id.btn_hide_soft_input:
                        KeyboardUtils.hideSoftInput(etInput);
                        break;
                    case R.id.btn_show_soft_input:
                        KeyboardUtils.showSoftInput(etInput);
                        break;
                    case R.id.btn_toggle_soft_input:
                        KeyboardUtils.toggleSoftInput();
                        break;
                    case R.id.btn_close_dialog:
                        KeyboardUtils.hideSoftInput(etInput);
                        dialog.dismiss();
                        break;
                }
            }
        };
        dialogView.findViewById(R.id.btn_hide_soft_input).setOnClickListener(listener);
        dialogView.findViewById(R.id.btn_show_soft_input).setOnClickListener(listener);
        dialogView.findViewById(R.id.btn_toggle_soft_input).setOnClickListener(listener);
        dialogView.findViewById(R.id.btn_close_dialog).setOnClickListener(listener);
        dialog.show();
    }
",
"How do I check HoneyComb or higher is running, and accordingly call a method for that Version?","if (android.os.Build.VERSION.SDK_INT>=android.os.Build.VERSION_CODES.HONEYCOMB) {
  }",call something for API Level 11,"    private boolean setTransactionSuccessful(SQLiteDatabase db) {
        if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.HONEYCOMB)
            db.setTransactionSuccessful();
        return true;
    }
",,"    protected void onPause() {
        super.onPause();
        if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.HONEYCOMB) {
            overridePendingTransition(R.anim.activity_open_scale, R.anim.activity_close_translate);
        }

    }
",,"    private void drawShadow() {

        if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.HONEYCOMB) {
            setLayerType(LAYER_TYPE_SOFTWARE, paintBorder);
        }

        paintBorder.setShadowLayer(shadowRadius, 0.0f, shadowRadius / 2, shadowColor);
    }
",
Cancelling a PendingIntent,"PendingIntent.getBroadcast(context, 0, intent, 
                           PendingIntent.FLAG_UPDATE_CURRENT).cancel();",,"    public void cancelReminder(int remindId) {
        Intent i = new Intent(context, OnAlarmReceiver.class);
        PendingIntent pi = PendingIntent.getBroadcast(context, remindId, i, PendingIntent.FLAG_UPDATE_CURRENT);

        alarmManager.cancel(pi);
        pi.cancel();
    }
",,"    public static void cancelAlarm(Context context, Intent intent, int notificationId) {
        AlarmManager alarmManager = (AlarmManager) context.getSystemService(Context.ALARM_SERVICE);
        PendingIntent pendingIntent = PendingIntent.getBroadcast(context, notificationId, intent, PendingIntent.FLAG_UPDATE_CURRENT);
        alarmManager.cancel(pendingIntent);
        pendingIntent.cancel();

        removeAlarmId(context, notificationId);
    }
",,"    private void cancelLocationScheduleAlarm() {
        Intent intent = new Intent(getApplicationContext(), LocationScheduleAlarmReceiver.class);
        PendingIntent pendingIntent = PendingIntent.getBroadcast(getApplicationContext(), 0, intent, PendingIntent.FLAG_UPDATE_CURRENT);
        pendingIntent.cancel();
        AlarmManager alarmManager = (AlarmManager) getSystemService(Context.ALARM_SERVICE);
        if (alarmManager != null) {
            alarmManager.cancel(pendingIntent);
        }
    }
",
Android: Special url to open Marketplace to a specific app?,"Intent intent = new Intent(Intent.ACTION_VIEW);
intent.setData(Uri.parse(""market:startActivity(intent);",detailsidcomexampleandroid,"    private void open(String content) {
        Intent intent = new Intent(Intent.ACTION_VIEW);
        intent.setData(Uri.parse(content));
        startActivity(intent);
    }
",,"    public void onBotClicked(View view) {
        Intent telegram = new Intent(Intent.ACTION_VIEW);
        telegram.setData(Uri.parse(""https:        startActivity(telegram);
    }
",tmemazakjctbot,"    public boolean supportsSendTextMessage() {
        Intent intent = new Intent(Intent.ACTION_VIEW);
        intent.setData(Uri.parse(""sms:""));
        return mTab.getWindowAndroid().canResolveActivity(intent);
    }
",
Programatically set '?selectableItemBackground' on Android view,"TypedValue outValue = new TypedValue();
getContext().getTheme().resolveAttribute(android.R.attr.selectableItemBackground, outValue, true);
cardView.setBackgroundResource(outValue.resourceId);",,"        private void onDeselected() {
            TypedValue outValue = new TypedValue();
            collectionView.getContext()
                    .getTheme()
                    .resolveAttribute(android.R.attr.selectableItemBackground, outValue, true);
            collectionView.setBackgroundResource(outValue.resourceId);
        }
",,"    private LinearLayoutCompat item() {
        final LinearLayoutCompat layoutCompat = new LinearLayoutCompat(getContext());
        LinearLayout.LayoutParams param = new LinearLayout.LayoutParams(LayoutParams.MATCH_PARENT, LayoutParams.MATCH_PARENT, 1.0f);
        param.gravity = Gravity.BOTTOM | Gravity.CENTER;
        layoutCompat.setLayoutParams(param);
        layoutCompat.setOrientation(LinearLayout.VERTICAL);

                TypedValue outValue = new TypedValue();
        getContext().getTheme().resolveAttribute(android.R.attr.selectableItemBackground, outValue, true);
        layoutCompat.setBackgroundResource(outValue.resourceId);

        return layoutCompat;
    }
",selector effect item,"    private void setupIconRippleStyle() {
        if(Build.VERSION.SDK_INT > Build.VERSION_CODES.JELLY_BEAN) {
            TypedValue rippleStyle = new TypedValue();
            if (borderlessRippleEnabled && Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {
                getContext().getTheme().resolveAttribute(android.R.attr.selectableItemBackgroundBorderless, rippleStyle, true);
            } else {
                getContext().getTheme().resolveAttribute(android.R.attr.selectableItemBackground, rippleStyle, true);
            }
            navIcon.setBackgroundResource(rippleStyle.resourceId);
            searchIcon.setBackgroundResource(rippleStyle.resourceId);
            menuIcon.setBackgroundResource(rippleStyle.resourceId);
            arrowIcon.setBackgroundResource(rippleStyle.resourceId);
            clearIcon.setBackgroundResource(rippleStyle.resourceId);
        }else{
            Log.w(TAG, ""setupIconRippleStyle() Only Available On SDK Versions Higher Than 16!"");
        }
    }
",
"Height of screen without status bar, actionBar and tabs","int resource = context.getResources().getIdentifier(""status_bar_height"", ""dimen"", ""android"");
    if (resource > 0) {
        statusBarHeight = context.getResources().getDimensionPixelSize(resource);
    }",,,,"    public static int getStatusBarHeight(Context mApplicationContent) {
        int result = mApplicationContent.getResources().getDimensionPixelSize(R.dimen.yms_dimens_50_0_px);
        int resourceId = mApplicationContent.getResources().getIdentifier(""status_bar_height"", ""dimen"", ""android"");
        if (resourceId > 0) {
            result = mApplicationContent.getResources().getDimensionPixelSize(resourceId);
        }
        return result;
    }
",,"    public static int getStatusBarHeight(Context context) {
        int result = 0;
        int resourceId = context.getResources().getIdentifier(""status_bar_height"", ""dimen"", ""android"");
        if (resourceId > 0) {
            result = context.getResources().getDimensionPixelSize(resourceId);
        }
        return result;
    }
",
How to hide current location in google map?,"map.setMyLocationEnabled(false);
map.getUiSettings().setMyLocationButtonEnabled(false);",,"    private void useUserLocation() {
        runOnUiThread(() -> {
            googleMap.setMyLocationEnabled(true);
            googleMap.getUiSettings().setMyLocationButtonEnabled(false);
            locationManager = (LocationManager) getSystemService(Context.LOCATION_SERVICE);
            Objects.requireNonNull(locationManager).requestLocationUpdates(LocationManager.GPS_PROVIDER, MIN_TIME, MIN_DISTANCE, this);
        });
    }
",,"    public void updateLocationUI(){
        checkLocationPermission();
        if (hasLocationPremmision) {
            map.setMyLocationEnabled(true);
            map.getUiSettings().setMyLocationButtonEnabled(true);
        } else {
            map.setMyLocationEnabled(false);
            map.getUiSettings().setMyLocationButtonEnabled(false);
            lastKnownLocation = null;
        }
    }
",,"    public void onMapReady(GoogleMap googleMap) {
        this.googleMap = googleMap;
        if (ActivityCompat.checkSelfPermission(getActivity(), Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED && ActivityCompat.checkSelfPermission(getActivity(), Manifest.permission.ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED) {

            return;
        }
        googleMap.setMyLocationEnabled(false);
        googleMap.getUiSettings().setMyLocationButtonEnabled(false);
        googleMap.getUiSettings().setZoomControlsEnabled(false);
        googleMap.getUiSettings().setZoomGesturesEnabled(false);
    }
",
Hide status bar android,"requestWindowFeature(Window.FEATURE_NO_TITLE);    getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,
    WindowManager.LayoutParams.FLAG_FULLSCREEN);",hide statusbar of Android,"    private void hideStatusBar() {
        requestWindowFeature(Window.FEATURE_NO_TITLE);
        this.getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN);
    }
",,"    private void hideStatusBar() {
        requestWindowFeature(Window.FEATURE_NO_TITLE);
        this.getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN);
    }
",,"    private void hideStatusBar() {
        requestWindowFeature(Window.FEATURE_NO_TITLE);
        this.getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN);
    }
",
Showing the soft keyboard for SearchView on ActionBar,"((InputMethodManager)getSystemService(Context.INPUT_METHOD_SERVICE)).
    toggleSoftInput(InputMethodManager.SHOW_FORCED,
                    InputMethodManager.HIDE_IMPLICIT_ONLY);",,"    public boolean onKeyUp(int keyCode, KeyEvent event) {
        if (keyCode == KeyEvent.KEYCODE_BACK) {
            ((InputMethodManager) getSystemService(Context.INPUT_METHOD_SERVICE)).toggleSoftInput
                    (InputMethodManager.SHOW_FORCED, InputMethodManager.HIDE_IMPLICIT_ONLY);
        }
        return super.onKeyUp(keyCode, event);
    }
",,"    public boolean onKeyDown(int keyCode, KeyEvent event) {
        if (keyCode == KeyEvent.KEYCODE_BACK) {
            ((InputMethodManager) getSystemService(Context.INPUT_METHOD_SERVICE)).toggleSoftInput
                    (InputMethodManager.SHOW_FORCED, InputMethodManager.HIDE_IMPLICIT_ONLY);
        }
        return super.onKeyDown(keyCode, event);
    }
",,"    protected void onNewIntent(Intent intent) {

        super.onNewIntent(intent);

        Log.v(TAG, ""Action: ""+intent.getAction());

                if (Intent.ACTION_SEARCH.equals(intent.getAction())) {

            String query = intent.getStringExtra(SearchManager.QUERY);
            Log.d(TAG, ""Query: "" + query);
            handleSearch(query);

                } else if(Intent.ACTION_VIEW.equals(intent.getAction())) {

            String query = intent.getDataString();
            if (query==null)
                return;
            if (!query.contains(""/"")) {
                if (searchView.isIconified()) {
                    searchItem.setOnActionExpandListener(null);
                    searchView.setIconified(false);
                    searchItem.expandActionView();
                    searchItem.setOnActionExpandListener(this);
                }
                searchView.setQuery(query+""/"", false);
                ((InputMethodManager) getSystemService(Context.INPUT_METHOD_SERVICE))
                        .toggleSoftInput(InputMethodManager.SHOW_FORCED, InputMethodManager.HIDE_IMPLICIT_ONLY);
            } else {
                searchView.setQuery(query, true);
            }

        }
    }
",search stargazers   handle suggestion click or direct user search                      new MenuItemOnActionExpandListener                           Override                          public boolean onMenuItemActionExpandMenuItem item                               return true                                                      Override                          public boolean onMenuItemActionCollapseMenuItem item                               return true
How can I post on Twitter with Intent Action_send?,"String url = ""http:Intent i = new Intent(Intent.ACTION_VIEW);
i.setData(Uri.parse(url));
startActivity(i);",wwwtwittercomintenttweeturlYOURURLtextYOURTEXT,"    private void viewAndPlayTrailer(Trailer trailer) {
        String url = ""https:        Intent i = new Intent(Intent.ACTION_VIEW);
        i.setData(Uri.parse(url));
        startActivity(i);
    }
",wwwyoutubecomwatchv  trailergetKey,"    public void viewProfile() {
        String url = AppConstants.PROFILE_LINK;
        Intent i = new Intent(Intent.ACTION_VIEW);
        i.setData(Uri.parse(url));
        startActivity(i);
    }
",,"    public void onClick() {
        String url = getString(R.string.butterknife_link);
        Intent i = new Intent(Intent.ACTION_VIEW);
        i.setData(Uri.parse(url));
        startActivity(i);
    }
",
How to Inflate view from XML in Android?,"LayoutInflater inflater = (LayoutInflater)getApplicationContext().getSystemService
 (Context.LAYOUT_INFLATER_SERVICE);
View view = inflater.inflate(R.layout.new_layout,null);
main.addView(view);",,"    protected void onCreate(Bundle savedInstanceState) {
        setErrorTimeout(1500);
        setTitle("""");
        setDarkPrimaryColor(R.color.white);

        if (savedInstanceState == null)
            StoryPosition = 1;
        else
            StoryPosition = savedInstanceState.getInt(getResources().getString(R.string.story_position),1);

        addStep(createFragment(new StoryContentFragment()));
        addStep(createFragment(new StoryContentFragment()));
        addStep(createFragment(new StoryContentFragment()));

        super.onCreate(savedInstanceState);


                        LayoutInflater vi = (LayoutInflater) getApplicationContext().getSystemService(Context.LAYOUT_INFLATER_SERVICE);
        View v = vi.inflate(R.layout.toolbar_story_content, null);
        getToolbar().addView(v);
}
",Cant remove toolbar   only add layouts as views,"    public void onCreate() {
        super.onCreate();
        active = true;
        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M
                && !Settings.canDrawOverlays(getApplicationContext())) {
                        stopSelf();
        } else {
            mHandler = new Handler();
            LayoutInflater mInflater = (LayoutInflater) getSystemService(Context.LAYOUT_INFLATER_SERVICE);
            mView = mInflater.inflate(R.layout.toast_layout, null);
            mView.measure(View.MeasureSpec.UNSPECIFIED, View.MeasureSpec.UNSPECIFIED);

            toast_view = mView.findViewById(R.id.toast_text);
            mView.setVisibility(View.GONE);
                        mView.setOnTouchListener(mViewTouchListener);
                        mParams = new WindowManager.LayoutParams(
                    WindowManager.LayoutParams.WRAP_CONTENT,
                    WindowManager.LayoutParams.WRAP_CONTENT,
                    getWindowLayoutType(),
                    WindowManager.LayoutParams.FLAG_NOT_FOCUSABLE | WindowManager.LayoutParams.FLAG_WATCH_OUTSIDE_TOUCH,
                    PixelFormat.TRANSLUCENT);

            mParams.gravity = Gravity.TOP | Gravity.START;
            Display display = ((WindowManager) getApplicationContext().getSystemService(Context.WINDOW_SERVICE)).getDefaultDisplay();
            Point size = new Point();
            display.getSize(size);
            screenWidth = size.x;
            screenHeight = size.y;
            Log.e(""KCA"", ""w/h: "" + String.valueOf(screenWidth) + "" "" + String.valueOf(screenHeight));
            mManager = (WindowManager) getSystemService(WINDOW_SERVICE);
            mManager.addView(mView, mParams);
        }
    }
",Can not draw overlays pass  mViewsetOnClickListenermViewClickListener   Button Fairy Settings,,
Is it possible that when click edittext it will show dialog message?,"mDateDisplay.setClickable(true);
mDateDisplay.setOnClickListener(new View.OnClickListener() {
    @Override
    public void onClick(View v) {
        showDialog(DATE_DIALOG_ID);
    }
});",,"  private void addOnExpandableViewClickListener() {
    toggleView.setClickable(true);
    toggleView.setOnClickListener(new View.OnClickListener() {
      @Override public void onClick(View view) {
        onActionPerformed();
      }
    });
  }
",,,," private void setOnClick(LinearLayout parent, int position){
  parent.setClickable(true);
  parent.setId(position);
  parent.setOnClickListener(new View.OnClickListener() {
   @Override
   public void onClick(View parent) {
    int position = parent.getId();
    LauncherMethods.chosenFile(context, picturesArrList.get(position)  + "".txt"", position, picturesArrList);

   }
  });
 }
",
How can we turn automatic brightness off in android?,"Settings.System.putInt(getContentResolver(), 
    Settings.System.SCREEN_BRIGHTNESS_MODE, Settings.System.SCREEN_BRIGHTNESS_MODE_MANUAL);",,"    protected void onHandleIntent(Intent intent) {
                SharedPreferences prefCurrent = U.getPrefCurrent(this);
        SharedPreferences prefMain = U.getPrefMain(this);
        DisplayManager dm = (DisplayManager) getSystemService(DISPLAY_SERVICE);
        Display[] displays = dm.getDisplays();

        if(!prefCurrent.getBoolean(""not_active"", true)
            && prefCurrent.getBoolean(""backlight_off"", false)
            && (displays[displays.length - 1].getDisplayId() != Display.DEFAULT_DISPLAY
            || prefMain.getBoolean(""force_backlight_off"", false))) {

                        Settings.System.putInt(getContentResolver(), Settings.System.SCREEN_BRIGHTNESS_MODE, Settings.System.SCREEN_BRIGHTNESS_MODE_MANUAL);

                        Settings.System.putInt(getContentResolver(), Settings.System.SCREEN_BRIGHTNESS, 0);

                        for(File backlightOff : U.backlightOff) {
                if(backlightOff.exists()) {
                    U.runCommand(this, ""sleep 2 && echo 0 > "" + backlightOff.getAbsolutePath());
                    break;
                }
            }
        }
    }
",Turn the backlight back off after the device wakes up   Turn autobrightness off so it doesnt mess with things   Attempt to set screen brightness to 0 first to avoid complications later   Run superuser command to blank screen again after device was turned off,"    public static void stopAutoBrightness(Activity activity) {
        Settings.System.putInt(activity.getContentResolver(), Settings.System.SCREEN_BRIGHTNESS_MODE,
                Settings.System.SCREEN_BRIGHTNESS_MODE_MANUAL);
    }
",,"    public static void stopAutoBrightness(Activity activity) {
        Settings.System.putInt(activity.getContentResolver(),
                Settings.System.SCREEN_BRIGHTNESS_MODE,  Settings.System.SCREEN_BRIGHTNESS_MODE_MANUAL);
    }
",
How to prevent OnItemClickListener work when long click performed?,"public boolean onItemLongClick(AdapterView<?> parent, View view, int position, long id) {   
   return true;
}",,"    private void setupListViewListener() {
        lvItems.setOnItemLongClickListener(new AdapterView.OnItemLongClickListener() {
            @Override
            public boolean onItemLongClick(AdapterView<?> parent, View view, int position, long id) {
                items.remove(position);
                itemsAdapter.notifyDataSetChanged();
                writeItems();
                return true;
            }
        });
    }
",,"    private void initializeEventList() {
        this.events = new EventAdapter(this);
        ListView listEvents = (ListView) this.findViewById(R.id.list_events);
        listEvents.setEmptyView(this.findViewById(R.id.txt_no_events));
        listEvents.setAdapter(this.events);
        listEvents.setOnItemLongClickListener(new AdapterView.OnItemLongClickListener() {
            @Override
            public boolean onItemLongClick(AdapterView<?> parent, View view, int position, long id) {
                Event event = events.getItem(position);
                return true;
            }
        });
    }
",,"    private void setDataAdapter(){
        GridViewAdapter gridviewAdapter = new GridViewAdapter(mainActivity.getApplicationContext(), R.layout.grid_view_layout, data);
        gridview.setAdapter(gridviewAdapter);

                gridview.setOnItemLongClickListener(new AdapterView.OnItemLongClickListener() {
            @Override
            public boolean onItemLongClick(AdapterView<?> arg0, View arg1, int pos, long id) {
                if (pos != (getListSize() - 1)) deleteItemDialog(pos);
                return true;
            }
        });
    }
",Long Click Listener
Prevent repeating alarm from occurring on weekend,"  int today  = calendar.get(Calendar.DAY_OF_WEEK);
  boolean isWeekend = (today == Calendar.SUNDAY) || (today == Calendar.SATURDAY);
  if(isWeekend && noWeekends == true) {
                try {
            Thread.sleep(1);  
        } catch (InterruptedException e) {
            e.printStackTrace();
        }
    }",Alarm is not wanted on the weekend,"    public static Calendar getFirstDayOfWeek(int year) {
        Calendar c = new GregorianCalendar();
        c.set(year, Calendar.JANUARY, 1, 0, 0, 0);
        int dayOfWeek = c.get(Calendar.DAY_OF_WEEK);
                if (dayOfWeek == Calendar.FRIDAY || dayOfWeek == Calendar.SATURDAY || dayOfWeek == Calendar.SUNDAY) {
            while (c.get(Calendar.DAY_OF_WEEK) != Calendar.MONDAY) {
                c.add(Calendar.DAY_OF_YEAR, 1);
            }
        }
        return c;
    }
",11,"    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
        final Activity activity = getActivity();
        AppBarLayout appBarLayout = activity.findViewById(R.id.appbar);

                if (appBarLayout.getChildCount() != 1) appBarLayout.removeViewAt(1);

        final View rootView = inflater.inflate(R.layout.content_week, container, false);

                weekToDisplay = new TimelessDate();
        int iDay = weekToDisplay.get(Calendar.DAY_OF_WEEK);
        if (iDay == Calendar.SATURDAY || iDay == Calendar.SUNDAY) {
            DateUtilities.Backport.NextWeek(weekToDisplay);
        }
        DateUtilities.Backport.Normalize(weekToDisplay);
                TextView actTitle = activity.findViewById(R.id.toolbar_title);
        actTitle.setText(new SimpleDateFormat(""MMM yyyy"", Locale.GERMANY).format(weekToDisplay.getTime()));
        actTitle.setOnClickListener(v -> pickWeek(rootView, activity));
        TimetableManager.getInstance().loadOfflineGlobals(activity.getApplication(), () -> {
            Log.i(""TTM"", ""Successfully loaded offline globals for week fragment."");
            applyGlobalContent(true, false, rootView, activity);
        });

        return rootView;
    }
",Handle the tabs from navigation fragment   Reset to today   activitysetTitle,"    public void onDateInc() {
        selectedDay.add(Calendar.DAY_OF_MONTH, 1);
        if (skipWeekend) {
            int day = selectedDay.get(Calendar.DAY_OF_WEEK);
            if (day == Calendar.SATURDAY || day == Calendar.SUNDAY) {
                while (selectedDay.get(Calendar.DAY_OF_WEEK) != Calendar.MONDAY) {
                                        if (skipOnlyEmptyDays && cache.getDay(selectedDay).size() > 0) {
                        break;
                    }

                    selectedDay.add(Calendar.DAY_OF_MONTH, 1);
                }
            }
        }
        updateContent();
    }
",dont skip if we see events
How do I know if my app is running with Robolectric?,"public static boolean isRoboUnitTest() {
    return ""robolectric"".equals(Build.FINGERPRINT);
}",,"    private boolean isRoboUnitTest() {
        return ""robolectric"".equals(Build.FINGERPRINT);
    }
",,"    private static boolean isRoboUnitTest(){
        return ""robolectric"".equals(Build.FINGERPRINT);
    }
",,"    public void runBackgroundSetup() {
        if (!""robolectric"".equals(Build.FINGERPRINT) && BuildCompat.isAtLeastNMR1()) {
            new Thread(new Runnable() {
                @Override
                public void run() {
                    try {
                        NotificationChannelUtil.createNotificationChannels(App.this);
                    } catch (Exception e) {
                        e.printStackTrace();
                    }

                    EmojiUtils.init(App.this);

                    try {
                        new DynamicShortcutUtils(App.this).buildProfileShortcut();
                    } catch (Exception e) {
                        e.printStackTrace();
                    }

                }
            }).start();
        }
    }
",
I need to minimize the android application on back button click,"public void minimizeApp() {
    Intent startMain = new Intent(Intent.ACTION_MAIN);
    startMain.addCategory(Intent.CATEGORY_HOME);
    startMain.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
    startActivity(startMain);
}",,"    public static void makeAppBackToHome(Context context) {
        Intent intent = new Intent(Intent.ACTION_MAIN);
        intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
        intent.addCategory(Intent.CATEGORY_HOME);
        context.startActivity(intent);
    }
",,"    public void onBackPressed() {
        Intent intent = new Intent(Intent.ACTION_MAIN);
        intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
        intent.addCategory(Intent.CATEGORY_HOME);
        getAppContext().startActivity(intent);
    }
",,"    public void onBackPressed() {
        Intent intent = new Intent(Intent.ACTION_MAIN);
        intent.addCategory(Intent.CATEGORY_HOME);
        intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
        startActivity(intent);
    }
",
"Cannot use getSystemService(""usagestats"") Android Studio","UsageStatsManager usageStatsManager=(UsageStatsManager)context.getSystemService(""usagestats"");",noinspection ResourceType,"    private static UsageStatsManager getUsageStatsManager(Context context){
        UsageStatsManager usm = (UsageStatsManager) context.getSystemService(""usagestats"");
        return usm;
    }
",,"    private static UsageStatsManager getUsageStatsManager(Context context){
        UsageStatsManager usm = (UsageStatsManager) context.getSystemService(""usagestats"");
        return usm;
    }
",,"    private boolean isNoSwitch() {
        long ts = System.currentTimeMillis();
        UsageStatsManager usageStatsManager = (UsageStatsManager) getApplicationContext()
                .getSystemService(""usagestats"");
        List<UsageStats> queryUsageStats = usageStatsManager.queryUsageStats(
                UsageStatsManager.INTERVAL_BEST, 0, ts);
        if (queryUsageStats == null || queryUsageStats.isEmpty()) {
            return false;
        }
        return true;
    }
",
Set Title inToolBar from Fragment in Android,"TextView mTitle = view.findViewById(R.id.toolbar_title);
 mTitle.setText(""set your title"");",,"    protected void toolbarTitle(@StringRes int resId)
    {
        TextView textView = view.findViewById(R.id.toolbar_title);
        textView.setText(resId);
    }
",,"    public void onViewCreated(View view, @Nullable Bundle savedInstanceState) {
        super.onViewCreated(view, savedInstanceState);
                TextView actTitle = getActivity().findViewById(R.id.toolbar_title);
        actTitle.setText(""Notifications"");
        actTitle.setOnClickListener(null);
    }
",getActivitysetTitleNotifications,"    public void onViewCreated(View view, @Nullable Bundle savedInstanceState) {
        super.onViewCreated(view, savedInstanceState);
                TextView actTitle = getActivity().findViewById(R.id.toolbar_title);
        actTitle.setText(""Today"");
        actTitle.setOnClickListener(null);
        Log.d(""TODAY"", ""onViewCreated"");
    }
",getActivitysetTitleToday
MPAndroidChart: bottom x-axis and multiple y-axes,"XAxis xAxis = chart.getXAxis();
xAxis.setPosition(XAxis.XAxisPosition.BOTTOM);",,"    private void formatChart(LineChart chart) {
        XAxis xAxis = chart.getXAxis();
        xAxis.setTextColor(Color.WHITE);
        xAxis.setValueFormatter(new DateFormatter());
        xAxis.setPosition(XAxis.XAxisPosition.BOTTOM);

        Legend legend = chart.getLegend();
        legend.setEnabled(false);
    }
",,"    private void setupXAxis(BarLineChartBase chart, IAxisValueFormatter formatter) {
        XAxis x = chart.getXAxis();
        x.setGranularity(1.0f);
        x.setDrawGridLines(false);
        x.setPosition(XAxis.XAxisPosition.BOTTOM);
        x.setDrawAxisLine(false);
        x.setCenterAxisLabels(true);
        x.setAxisMinimum(2.0f);
        x.setAxisMaximum(5.0f);
        x.setValueFormatter(formatter);
    }
",,"    private void drawChart() {
        final XAxis xAxis = chart.getXAxis();
        xAxis.setPosition(XAxis.XAxisPosition.BOTTOM);
        xAxis.setDrawAxisLine(true);
        xAxis.setDrawGridLines(false);
        chart.getDescription().setText(""å¯å¯çç¬¬"" + currCount + freq + project + ""è®°å½"");

        if (entries.size() > 0) {
            final LineDataSet lineDataSet = new LineDataSet(entries, currCount + freq);
            LineData lineData = new LineData(lineDataSet);
            chart.setData(lineData);
            chart.invalidate();
        } else {
            chart.clear();
        }
    }
",
How to disable marker click event?,"map.setOnMarkerClickListener(new OnMarkerClickListener() {
        @Override
        public boolean onMarkerClick(Marker marker) {
            return true;
        }
    });",,"    public void onMapReady(GoogleMap googleMap) {
        mMap = googleMap;

        LatLng seattle = new LatLng(47.62,-122.35);
                mMap.addMarker(new MarkerOptions().position(seattle).title(""My Location""));
        mMap.moveCamera(CameraUpdateFactory.newLatLngZoom(seattle,12));
                addCams();
                mMap.setOnMarkerClickListener(new GoogleMap.OnMarkerClickListener() {
            @Override
            public boolean onMarkerClick(Marker marker) {
                marker.showInfoWindow();
                return true;
            }
        });
    }
",Add a marker in Sydney and move the camera  add markers  click a marker,"    private void setUpMapIfNeeded() {
        if (googleMap == null) {
            SupportMapFragment mapFrag
                    = (SupportMapFragment) getSupportFragmentManager().findFragmentById(R.id.fragment_map);
            mapFrag.getMapAsync(this);
            if (googleMap != null) {
                googleMap.setOnMarkerClickListener(new GoogleMap.OnMarkerClickListener() {
                    @Override
                    public boolean onMarkerClick(Marker marker) {
                        marker.showInfoWindow();
                        marker.setIcon(BitmapDescriptorFactory.defaultMarker(BitmapDescriptorFactory.HUE_AZURE));
                        return true;
                    }
                });
            }
        }

    }
",,"    private void addEvent() {
        if (map != null) {
                        map.setOnMarkerClickListener(new GoogleMap.OnMarkerClickListener() {
                @Override
                public boolean onMarkerClick(Marker marker) {
                    if (marker.getSnippet() != null){
                        String snippet = marker.getSnippet();
                        int space = snippet.lastIndexOf("" "");
                                                map.animateCamera(CameraUpdateFactory.newLatLngZoom(marker.getPosition(), DataProvider.MAP_ZOOM_CURRENT));
                    }
                    return true;
                }
            });
            map.setOnMapClickListener(new GoogleMap.OnMapClickListener() {
                @Override
                public void onMapClick(LatLng latLng) {
                }
            });
        }
    }
",Markers  animate camera
Android Alert dialog from inside an intent service,"public class MyDialog extends Activity {
    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        final AlertDialog alertDialog = new AlertDialog.Builder(this).create();
        alertDialog.setTitle(""your title"");
        alertDialog.setMessage(""your message"");
        alertDialog.setIcon(R.drawable.icon);

        alertDialog.show();
    }
}",,"    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);

                String extra = getIntent().getStringExtra(ARG_EXTRA);
        String title;
        if (extra.startsWith(""+"")) {
            int morePhotos = Integer.valueOf(extra.substring(1));
            title = getResources().getQuantityString(R.plurals.more_photos, morePhotos, morePhotos);
        } else {
            title = String.format(getString(R.string.photo_clicked), extra);
        }

                final AlertDialog alertDialog = new AlertDialog.Builder(this).create();
        alertDialog.setTitle(title);
        alertDialog.setIcon(R.mipmap.ic_launcher);
        alertDialog.setButton(Dialog.BUTTON_POSITIVE, getString(R.string.ok),
                new DialogInterface.OnClickListener() {
                    @Override
                    public void onClick(DialogInterface dialogInterface, int i) {
                        finish();
                    }
                });
        alertDialog.show();
    }
",get title   show dialog,"    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);


        StringBuilder message = new StringBuilder();
        Intent intent = getIntent();
        
        if (intent != null) {
            Object uri = intent.getData();
            message.append(MessageFormat.format(""Received action:{0}\n - data:{1}\n"", intent.getAction(), uri));

            IGeoPointInfo geo = (uri != null) ? parser.fromUri(uri.toString()) : null;
            if (geo != null) {
                message.append(MessageFormat.format(
                        ""\nlat:{0} lon:{1} zoom:{2} name:{3}\n""
                        , geo.getLatitude(), geo.getLongitude(), geo.getZoomMin(), geo.getName()));

            }
        }

        final AlertDialog.Builder builder = new AlertDialog.Builder(this);

        builder.setTitle(this.getClass().getSimpleName());
        builder.setMessage(message)
                .setPositiveButton(""OK"",
                        new DialogInterface.OnClickListener() {
                            @Override
                            public void onClick(
                                    final DialogInterface dialog,
                                    final int id) {
                                finish();
                            }
                        }
                );

        final AlertDialog alert = builder.create();
        alert.show();

    }
",,"    protected void onCreate(Bundle savedStates) {
        super.onCreate(savedStates);

        DevicePolicyManager dpm =
                (DevicePolicyManager) getSystemService(Context.DEVICE_POLICY_SERVICE);

        final AlertDialog.Builder builder = new AlertDialog.Builder(this);
        builder.setTitle(R.string.ssl_ca_cert_dialog_title);
        builder.setCancelable(true);
        hasDeviceOwner = dpm.getDeviceOwner() != null;
        int buttonLabel;
        if (hasDeviceOwner) {
                        String message = this.getResources().getString(R.string.ssl_ca_cert_info_message,
                    dpm.getDeviceOwnerName());
            builder.setMessage(message);
            buttonLabel = R.string.done_button;
        } else {
                        builder.setIcon(android.R.drawable.stat_notify_error);
            builder.setMessage(R.string.ssl_ca_cert_warning_message);
            buttonLabel = R.string.ssl_ca_cert_settings_button;
        }

        builder.setPositiveButton(buttonLabel, this);

        final Dialog dialog = builder.create();
        dialog.getWindow().setType(WindowManager.LayoutParams.TYPE_SYSTEM_ALERT);
        try {
            WindowManagerGlobal.getWindowManagerService().dismissKeyguard();
        } catch (RemoteException e) {
        }
        dialog.setOnCancelListener(new DialogInterface.OnCancelListener() {
            @Override public void onCancel(DialogInterface dialog) {
                finish();
            }
        });

        dialog.show();
    }
",Institutional case  Show informational message   Consumer case  Show scary warning
dismiss the popup window by back button,"if(popup!=null){
      popup.dismiss();
      popup=null;
}",dismiss the popup  make popup null again,"            public void onClick(DialogInterface dialog, int which) {
                dialog.dismiss();
            }
",,"    public void dismiss() {
        dialog.dismiss();
    }
",,"    public void hideProgressDialog() {
        materialDialog.dismiss();
    }
",
Disable animation of drawer icon in double navigation drawer for right drawer,"@Override
  public void onDrawerSlide(View drawerView, float slideOffset) 
  {
        if(drawerView!=null && drawerView == rightDrawerListView){
              super.onDrawerSlide(drawerView, 0);
        }else{
              super.onDrawerSlide(drawerView, slideOffset);
        }
  }",,"        public void onDrawerSlide(View drawerView, float slideOffset) {
            super.onDrawerSlide(drawerView, 0);
        }
",,"            public void onDrawerSlide(View drawerView, float slideOffset) {
                super.onDrawerSlide(drawerView, 0);
            }
",,"            public void onDrawerOpened(View drawerView) {
                super.onDrawerSlide(drawerView, 0);
            }
",
How can I check if GPS is enabled before I try to use it,"if (locationManager.isProviderEnabled(LocationManager.GPS_PROVIDER)){
            }else{
            }",Do what you need if enabled  Do what you need if not enabled,"        public void onReceive(GpsIconData icon, Intent intent) {
            if (icon.locationManager.isProviderEnabled(LocationManager.GPS_PROVIDER)) {
                if (isLocationFixed(icon)) {
                    icon.onIconUpdate(1);
                } else
                    icon.onIconUpdate(0);
            } else icon.onIconUpdate(-1);
        }
",,"    private void upMyLocationOverlayLayers() {
        LocationManager locationManager = (LocationManager) getSystemService(LOCATION_SERVICE);
        if (locationManager.isProviderEnabled(LocationManager.GPS_PROVIDER)) {
            overlayMyLocationLayers();
        } else {
            showGPSDisabledAlertToUser();
        }

    }
",,"    private boolean isGPSEnabled()
    {

        if (mLocationManager.isProviderEnabled(LocationManager.GPS_PROVIDER)){
            return  true;
        }else{
            return false;
        }
    }
",
Don't display the overlay with the Android Navigation Drawer,"mDrawerLayout.setScrimColor(Color.WHITE);
mDrawerLayout.setScrimColor(Color.TRANSPARENT);",OR,"    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_navigation_view_demo);
        toolbar = (Toolbar) findViewById(R.id.toolbar);
        setSupportActionBar(toolbar);
        getSupportActionBar().setDisplayHomeAsUpEnabled(true);
        final DrawerArrowDrawable indicator = new DrawerArrowDrawable(this);
        indicator.setColor(Color.WHITE);
        getSupportActionBar().setHomeAsUpIndicator(indicator);
        bottomNavigationBar = (BottomNavigationBar) findViewById(R.id.bottom_navigation_bar);
        bottomNavigationBar.setMode(BottomNavigationBar.MODE_CLASSIC);

        bottomNavigationBar
                .addItem(new BottomNavigationItem(R.mipmap.ic_location_on_white_24dp, ""UI"").setActiveColor(R.color.orange))
                .addItem(new BottomNavigationItem(R.mipmap.ic_find_replace_white_24dp, ""ç½ç»"").setActiveColor(R.color.blue))
                .addItem(new BottomNavigationItem(R.mipmap.ic_favorite_white_24dp, ""è¿é¶"").setActiveColor(R.color.green))
                .addItem(new BottomNavigationItem(R.mipmap.ic_book_white_24dp, ""ç»¼å"").setActiveColor(R.color.blue))
                .setFirstSelectedPosition(lastSelectedPosition )                .initialise();

        bottomNavigationBar.setTabSelectedListener(this);

        setTransformer();
                drawerLayout = (DrawerLayout) findViewById(R.id.drawerLayout);
        drawerLayout.setScrimColor(Color.TRANSPARENT);
        drawerLayout.addDrawerListener(new DrawerLayout.SimpleDrawerListener() {
            @Override
            public void onDrawerSlide(View drawerView, float slideOffset) {
                if (((ViewGroup) drawerView).getChildAt(1).getId() == R.id.leftSideBar) {
                    indicator.setProgress(slideOffset);
                }
            }
        });
        setDefaultFragment();


    }
",setListener,,,"  public static Builder builder() {
    return new AutoValue_PlaceOptions.Builder()
      .backgroundColor(Color.TRANSPARENT)
      .toolbarColor(Color.WHITE)
      .limit(10);
  }
",
Restore default actionbar layout,"getActivity().getActionBar().setDisplayOptions(
    ActionBar.DISPLAY_SHOW_HOME | ActionBar.DISPLAY_SHOW_TITLE);",," public void setupHomeActivity() {
  super.setupHomeActivity();
        if (UIUtils.isTablet(mActivity)) {
   mActivity.getActionBar().setDisplayOptions(0, ActionBar.DISPLAY_SHOW_HOME | ActionBar.DISPLAY_SHOW_TITLE);
  } else {
   ActionBar actionBar = mActivity.getActionBar();

            actionBar.setDisplayOptions(ActionBar.DISPLAY_USE_LOGO,
     ActionBar.DISPLAY_USE_LOGO | ActionBar.DISPLAY_SHOW_TITLE);


        }
 }
",NOTE there needs to be a content view set before this is called so   this method   should be called in onPostCreate,"    private void configureActionBar() {
        ActionBar actionBar = getActionBar();
        
        if (ContactsApplication.sIsGnContactsSupport) {
         actionBar.setDisplayOptions(ActionBar.DISPLAY_HOME_AS_UP | ActionBar.DISPLAY_SHOW_TITLE);
         actionBar.setTitle("""");
         return;
        }
        
        if (actionBar != null) {
            actionBar.setDisplayOptions(ActionBar.DISPLAY_HOME_AS_UP | ActionBar.DISPLAY_SHOW_HOME);
        }
    }
",,"    protected void onCreate(Bundle savedInstanceState) {
                if (MmsApp.mTransparent) {
            setTheme(R.style.TabActivityTheme);
        } else if (MmsApp.mLightTheme) {
            setTheme(R.style.GnMmsLightTheme);
        } else if (MmsApp.mDarkTheme) {
            setTheme(R.style.GnMmsDarkTheme);
        }
                super.onCreate(savedInstanceState);
                                getActionBar().setDisplayHomeAsUpEnabled(true);
        getActionBar().setDisplayShowTitleEnabled(false);
        getActionBar().setDisplayShowHomeEnabled(false);
        getActionBar().setCustomView(R.layout.gn_multi_action_view);
        getActionBar().setDisplayOptions(ActionBar.DISPLAY_SHOW_CUSTOM,
                ActionBar.DISPLAY_SHOW_CUSTOM | ActionBar.DISPLAY_SHOW_HOME | ActionBar.DISPLAY_SHOW_TITLE);
        mTitleView = getActionBar().getCustomView();
                mTitleBack = (ImageButton) mTitleView.findViewById(R.id.gn_action_view_back);
        mTitleBack.setOnClickListener(new View.OnClickListener() {
            
            @Override
            public void onClick(View v) {
                                finish();
            }
        });
        mTitleTextView = (TextView) mTitleView.findViewById(R.id.gn_select_count_text);
        mTitleCheckBox = (CheckBox) mTitleView.findViewById(R.id.gn_select_check_box);
        mTitleCheckBox.setOnClickListener(this);
                checkAction();
        bindService();
        setContentView(R.layout.gn_multi_import_export);
        initViews(savedInstanceState);
        setListeners();
    }
",gionee gaoj 2012530 added for CR00555790 start  gionee gaoj 2012530 added for CR00555790 end  requestWindowFeatureWindowFEATUREINDETERMINATEPROGRESS  gionee gaoj 20121215 added for CR00725602 start   Aurora liugj 20130913 modified for auroras new feature start   Aurora liugj 20130913 modified for auroras new feature end   TODO Autogenerated method stub  gionee gaoj 20121215 added for CR00725602 end
Custom android AccelerateDecelerateInterpolator,"public class MVAccelerateDecelerateInterpolator implements Interpolator {

        public float getInterpolation(float t) {
        float x = t*2.0f;
        if (t<0.5f) return 0.5f*x*x*x*x*x;
        x = (t-0.5f)*2-1;
        return 0.5f*x*x*x*x*x+1;
    }
}",easeInOutQuint,,,"    public static Interpolator aIf() {
        if (npf == null) {
            npf = new Interpolator() {
                public final float getInterpolation(float f) {
                    return f >= 0.9f ? 1.0f - ((f - 0.9f) * 10.0f) : 1.0f;
                }
            };
        }
        return npf;
    }
",,"    public static Interpolator getDefaultAlphaInterpolator() {
        if (defaultAlphaInterpolator == null) {
            defaultAlphaInterpolator = new Interpolator() {
                @Override
                public float getInterpolation(float v) {
                    return v >= 0.9f ? 1f - (v - 0.9f) * 10f : 1f;
                }
            };
        }
        return defaultAlphaInterpolator;
    }
",
How to open number dialer pad programmatically in android?,"Intent intent = new Intent(Intent.ACTION_DIAL); 
startActivity(intent);",,"    private void dial() {
        Intent intent = new Intent(Intent.ACTION_DIAL);
        startActivity(intent);
    }
",,"    public void onClickCall(View view) {
        Intent intent = new Intent(Intent.ACTION_DIAL);
        intent.setData(Uri.parse(""tel:1234567890""));
        startActivity(intent);
    }
",,,
"Android, how to choose save file location?","String extStorage = Environment.getExternalStorageState();
path = extStorage+""/Android/data/com.mydomain.myapp/"";",,"    public static boolean isExternalStorageWritable() {
        String state = Environment.getExternalStorageState();
        return Environment.MEDIA_MOUNTED.equals(state);
    }
",,"  public static boolean isExternalStorageWritable() {
    String state = Environment.getExternalStorageState();
    return Environment.MEDIA_MOUNTED.equals(state);
  }
",,"    public static boolean hasSdcard() {
        String state = Environment.getExternalStorageState();
        return state.equals(Environment.MEDIA_MOUNTED);
    }
",
Higher API calls when lower SDK targeted,"if(android.os.Build.VERSION.SDK_INT >= 14) {
    }
else {
    }",Do something fancy   Do something regular,"  synchronized void onActivity() {
    cancel();
    inactivityTask = new InactivityAsyncTask();
    if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.HONEYCOMB) inactivityTask.executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR);    else inactivityTask.execute();      }
",by rafik,"    public static Locale getLocaleAtual() {
        if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.N)
            return Resources.getSystem().getConfiguration().getLocales().get(0);
        else
            return Resources.getSystem().getConfiguration().locale;
    }
",,"    private void endTransaction(SQLiteDatabase db, boolean success) {
        if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.HONEYCOMB)
            db.endTransaction();
        else
            db.execSQL(success ? ""COMMIT"" : ""ROLLBACK"");
    }
",
Restarting Android application after process is killed,"Intent reLaunchMain=new Intent(this,MainActivity.class);
reLaunchMain.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
startActivity(reLaunchMain);",,"    public void onBackPressed() {
        Intent intent = new Intent(this, MainActivity.class);
        intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
        startActivity(intent);
    }
",,"    public void onBackPressed() {
        Intent intent = new Intent(this, MainActivity.class);
        intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
        startActivity(intent);
    }
",," public void onBackPressed() {
  final Intent intent = new Intent(this, MainActivity.class);
  intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
  startActivity(intent);
 }
",
How to make a callback after the view is completely rendered?,"@Override
public void onWindowFocusChanged(boolean hasFocus) {
    super.onWindowFocusChanged(hasFocus);
    doWhateverAfterScreenViewIsRendered();
}",,"package com.github.nuptboyzhb.lib;
",,,,,
Actionbar Sherlock: Setting and hiding title bar,"setTitle(""Title"");
getSupportActionBar().hide();",,,,"    public boolean createActionMenu(ActionMode mode, Menu menu) {
        getMenuInflater().inflate(R.menu.menu_gridview_context,menu);
        mode.setTitle(""Select Items"");
        mode.setSubtitle(""One item selected"");
        getSupportActionBar().hide();
        return true;
    }
",,"    protected void onResume() {
        getSupportActionBar().setTitle("""");
        getSupportActionBar().hide();
        super.onResume();
    }
",getWindowrequestFeatureWindowFEATUREACTIONBAR          getActionBarhide
"Error getting window size on android: ""The method getWindowManager is undefined""","((WindowManager) getContext().getSystemService(Context.WINDOW_SERVICE))
  .getDefaultDisplay().getMetrics(metrics);",,,,"    public void init(Activity activity, JDSelector selector) {
        LayoutInflater inflater = activity.getLayoutInflater();
        View dialogSelector = inflater.inflate(R.layout.dialog_selector, null, false);
        dialogSelector.findViewById(R.id.iv_close).setOnClickListener(v -> dismiss());
        if (selector != null) {
            ((FrameLayout) dialogSelector.findViewById(R.id.fl_selector)).addView(selector.getContextView());
        }
        setContentView(dialogSelector);
        Window window = getWindow();
        WindowManager.LayoutParams params = window.getAttributes();
        params.width = WindowManager.LayoutParams.MATCH_PARENT;
        DisplayMetrics dm = new DisplayMetrics();
        WindowManager windowManager = (WindowManager) (getContext()).getSystemService(Context.WINDOW_SERVICE);
        windowManager.getDefaultDisplay().getMetrics(dm);
        params.height = dm.heightPixels / 2;
        window.setAttributes(params);
        window.setGravity(Gravity.BOTTOM);
    }
",,"    private void show() {
        mLayoutParams = new WindowManager.LayoutParams();
        mLayoutParams.type = WindowManager.LayoutParams.TYPE_APPLICATION_SUB_PANEL;
        mLayoutParams.format = PixelFormat.RGBA_8888;
        mLayoutParams.flags = WindowManager.LayoutParams.FLAG_NOT_FOCUSABLE;
        mLayoutParams.flags = mLayoutParams.flags | WindowManager.LayoutParams.FLAG_WATCH_OUTSIDE_TOUCH;
        mLayoutParams.flags = mLayoutParams.flags | WindowManager.LayoutParams.FLAG_LAYOUT_NO_LIMITS;
        mLayoutParams.gravity = Gravity.START | Gravity.TOP;

        mLayoutParams.x = 0;
        mLayoutParams.y = 0;

        DisplayMetrics dm = new DisplayMetrics();
        WindowManager manager = (WindowManager) getContext().getSystemService(Context.WINDOW_SERVICE);
        manager.getDefaultDisplay().getMetrics(dm);

        mLayoutParams.width = dm.widthPixels;
        mLayoutParams.height = dm.heightPixels;
        layout = new FrameLayout(getContext());
        mWindowManager.addView(layout, mLayoutParams);

        FrameLayout.LayoutParams params = new FrameLayout.LayoutParams(layoutWidth, layoutHeight);
        setX(mCreateX);
        setY(mCreateY);
        layout.addView(this, params);

        mTargetView.setVisibility(INVISIBLE);
    }
",
Easiest way to launch webpage in android with an icon,"String url = ""http:Intent i = new Intent(Intent.ACTION_VIEW);
i.setData(Uri.parse(url));
startActivity(i);",wwwYOURURLcom,"    private void open(String content) {
        Intent intent = new Intent(Intent.ACTION_VIEW);
        intent.setData(Uri.parse(content));
        startActivity(intent);
    }
",,"    public void onBotClicked(View view) {
        Intent telegram = new Intent(Intent.ACTION_VIEW);
        telegram.setData(Uri.parse(""https:        startActivity(telegram);
    }
",tmemazakjctbot,"    public boolean supportsSendTextMessage() {
        Intent intent = new Intent(Intent.ACTION_VIEW);
        intent.setData(Uri.parse(""sms:""));
        return mTab.getWindowAndroid().canResolveActivity(intent);
    }
",
How to get the current sqlite database size or package size in Android?,"File f = context.getDatabasePath(dbName);
long dbSize = f.length();",," private boolean checkDataBase() {
  Log.d(""dbhelper"", ""checkDataBase"");

  int sizeDBAsset = 0;
  try {
   sizeDBAsset = myContext.getAssets().open(""databases/"" + ASSET_DB_NAME).available();
  } catch (IOException e1) {
  }

  long sizeDBLocal = 0;
  File outFile = myContext.getDatabasePath(DB_NAME);
  sizeDBLocal = outFile.length();

  if (sizeDBLocal >= sizeDBAsset) {
   return true;
  }
  return false;

 }
",,"    public long size() {
        if(db == null){
            return 0;
        }

        File dbFile = application.getDatabasePath(dbName);
        return dbFile.length();
    }
",,"    public boolean importContacts() throws Exception {
        String path = mContext.getDatabasePath(DATABASE_NAME).getPath();
        File file = new File(path);
        if (!file.exists()) {
            Log.i(TAG, ""Legacy contacts database does not exist at "" + path);
            return true;
        }

        Log.w(TAG, ""Importing contacts from "" + path);

        for (int i = 0; i < MAX_ATTEMPTS; i++) {
            try {
                mSourceDb = SQLiteDatabase.openDatabase(path, null, SQLiteDatabase.OPEN_READONLY);
                importContactsFromLegacyDb();
                Log.i(TAG, ""Imported legacy contacts: "" + mContactCount);
                mContactsProvider.notifyChange();
                return true;

            } catch (SQLiteException e) {
                Log.e(TAG, ""Database import exception. Will retry in "" + DELAY_BETWEEN_ATTEMPTS
                        + ""ms"", e);

                                                Thread.sleep(DELAY_BETWEEN_ATTEMPTS);

            } finally {
                if (mSourceDb != null) {
                    mSourceDb.close();
                }
            }
        }

        long oldDatabaseSize = file.length();
        mEstimatedStorageRequirement = oldDatabaseSize * DATABASE_SIZE_MULTIPLIER / 1024 / 1024;
        if (mEstimatedStorageRequirement < DATABASE_MIN_SIZE) {
            mEstimatedStorageRequirement = DATABASE_MIN_SIZE;
        }

        return false;
    }
",We could get a database locked exception here in which   case we should retry
Click on notification starts activity twice,"notificationIntent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP
                            |Intent.FLAG_ACTIVITY_SINGLE_TOP);",,"  private @NonNull PendingIntent createNotificationIntent() {
    Intent notificationIntent = new Intent(this, MainActivityView.class);
    notificationIntent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP | Intent.FLAG_ACTIVITY_SINGLE_TOP);
    return PendingIntent.getActivity(this, PendingIntent.FLAG_UPDATE_CURRENT, notificationIntent, 0);
  }
",," public static void showInstance( Activity context ) {
  Intent intent = new Intent( context, SettingsActivity.class );
  intent.setFlags( Intent.FLAG_ACTIVITY_CLEAR_TOP|Intent.FLAG_ACTIVITY_SINGLE_TOP );
  ActivityCompat.startActivityForResult( context, intent, REQ, null );
 }
",,"    protected void onNavToRepoClicked() {
        Intent intent = RepoDetailActivity.createIntent(this, viewModel.getRepoId(), viewModel.getLogin(), Tab.ISSUES);
        intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP | Intent.FLAG_ACTIVITY_SINGLE_TOP);
        startActivity(intent);
        finish();
    }
",
Video recording format(.3gp or mp4) in android?,"recorder = new MediaRecorder(); 
recorder.setOutputFormat(MediaRecorder.OutputFormat.MPEG_4);",,"    public void prepare() throws IOException {
        mRecorder = new MediaRecorder();
        mRecorder.setAudioSource(MediaRecorder.AudioSource.MIC);
        mRecorder.setOutputFormat(MediaRecorder.OutputFormat.MPEG_4);
        mRecorder.setAudioEncoder(MediaRecorder.AudioEncoder.AAC);
        mRecorder.setAudioSamplingRate(44100);
        mRecorder.setAudioEncodingBitRate(96000);
        mRecorder.setOutputFile(mFilePath);
        mRecorder.prepare();
    }
",,"    public static void recordAudio(String fileName) {
        final MediaRecorder recorder = new MediaRecorder();
        ContentValues values = new ContentValues(3);
        values.put(MediaStore.MediaColumns.TITLE, fileName);
        recorder.setAudioSource(MediaRecorder.AudioSource.MIC);
        recorder.setOutputFormat(MediaRecorder.OutputFormat.MPEG_4);
        recorder.setAudioEncoder(MediaRecorder.AudioEncoder.DEFAULT);
        recorder.setOutputFile(""/sdcard/sound/"" + fileName);
        recorder.start();
        recorder.stop();
        recorder.release();
    }
",,"    private void startRecording(String fileName) throws IOException {
        if (!recording) {
            this.fileName = fileName;
            recording = true;
            recorder = new MediaRecorder();
            recorder.setAudioSource(MediaRecorder.AudioSource.MIC);
            recorder.setOutputFormat(MediaRecorder.OutputFormat.MPEG_4);
            recorder.setAudioEncoder(MediaRecorder.AudioEncoder.AAC);
            recorder.setOutputFile(fileName);
            recorder.prepare();
            recorder.start();
        }
    }
",
How to Retrieve Text from Textbox in Android widget?,"EditText editText = (EditText)findViewById(R.id.yourId);
String editTextStr = editText.getText().toString();",,"    public void handleButtonClick(View view){
        EditText urlInput = (EditText)findViewById(R.id.url_bar);
        String url = urlInput.getText().toString();
        startArticleIntent(url);
    }
",,"    public void validateUser(View view){
       EditText employeeId=(EditText) findViewById(R.id.empId);
       String id =  employeeId.getText().toString();
        System.out.print(""test Function"");
        new UserResistration().validateUser(view);
    };
",,"  public void showMe(View v) {
    EditText urlField=(EditText)findViewById(R.id.url);
    String url=urlField.getText().toString();

    startActivity(new Intent(Intent.ACTION_VIEW, Uri.parse(url)));
  }
",
Changing text color in a WebView?,"_webView.setWebViewClient(new WebViewClient() {
    public void onPageFinished(WebView view, String url) {
        _webView.loadUrl(
            ""javascript:document.body.style.setProperty(\""color\"", \""white\"");""
        );
    }
});",," private WebView getWebView(
 ) {
  final WebView webView = new WebView(getContext());

  webView.loadData(getString(R.string.app_description_html), ""text/html"", ""UTF-8"");
  webView.setBackgroundColor(0x00000000);
  webView.getSettings().setDefaultFontSize(14);

    final String color = ColorUtil.getHexStringFromInt( mAppVersionText.getTextColors().getDefaultColor());
  webView.getSettings().setJavaScriptEnabled(true);
  webView.setWebViewClient(new WebViewClient() {
   public void onPageFinished(WebView view, String url) {
    try {
     webView.loadUrl(
      ""javascript:document.body.style.setProperty(\""color\"", \"""" + color + ""\"");""
     );
    } catch (Exception ignored) {
    }
   }
  });

  return webView;
 }
",Change the webview font color,"    private void loadLicenses() {
        mLicensesWebView.setWebViewClient(new WebViewClient() {
            public void onPageFinished(WebView view, String url) {
                hideLoading();
            }
        });
        mLicensesWebView.loadUrl(Constants.LICENSES_ASSET_URI);
    }
",,"    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(LAYOUT);

        WebView authWebView = (WebView) findViewById(R.id.authWebView);

        authWebView.setWebViewClient(new WebViewClient() {
            public void onPageFinished(WebView view, String url) {
                if (VkUtilities.checkIsAuthDone(url)) {
                    setResult(RESULT_OK, VkUtilities.getAuthIntent(url));
                    finish();
                }
            }
        });

        authWebView.loadUrl(VkConfig.getInstance().getAuthorizationUrl());
    }
",
Android Google Sign In: check if User is signed in,"if (mGoogleApiClient != null && mGoogleApiClient.isConnected()) {
      } else {
      }",signed in Show the sign out button and explanation      not signed in Show the sign in button and explanation,"    private static boolean isConnected(NetworkInfo networkInfo) {
        return networkInfo != null && networkInfo.isAvailable() && networkInfo.isConnected();
    }
",,"    public boolean isConnected() {
        return mSocket != null && mSocket.isConnected() && (mState == STATE_CONNECTED);
    }
",,"        public boolean isSocketConnected() throws RemoteException {
            return mIClient != null && mIClient.isConnected();
        }
",
Navigation drawer menu icon is not displayed correctly,"NavigationView navigationView = (NavigationView) findViewById(R.id.nav_view);
 navigationView.setItemIconTintList(null);
 navigationView.setNavigationItemSelectedListener(this);",,"    private void setupActionBar(){
        actionBar = (Toolbar) findViewById(R.id.toolbar);
        setSupportActionBar(actionBar);
        sideNavDrawer = (DrawerLayout) findViewById(R.id.drawer_layout);

                ActionBarDrawerToggle toggle = new ActionBarDrawerToggle(this, sideNavDrawer, actionBar, 0, 0);
        toggle.syncState();

        NavigationView navigationView = (NavigationView) findViewById(R.id.nav_view);
        navigationView.setItemIconTintList(null);
        navigationView.setNavigationItemSelectedListener(this);      }
",creates toggle for action bar and anchors the side navigation drawer object to it   uses the methods in this class to listen for onclick events for the side nav drawer,"    private void showNavigationDrawer() {
        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
        setSupportActionBar(toolbar);
        mDrawerLayout = (DrawerLayout) findViewById(R.id.drawer_layout);
        actionBarDrawerToggle = new ActionBarDrawerToggle(
                this, mDrawerLayout, toolbar, R.string.navigation_drawer_open, R.string.navigation_drawer_close);
        mDrawerLayout.setDrawerListener(actionBarDrawerToggle);
        actionBarDrawerToggle.syncState();

        navigationView = (NavigationView) findViewById(R.id.nav_view);
        navigationView.setNavigationItemSelectedListener(this);
        navigationView.setItemIconTintList(null);
    }
",,"    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_navigation);
        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
        setSupportActionBar(toolbar);

        DrawerLayout drawer = (DrawerLayout) findViewById(R.id.drawer_layout);
        ActionBarDrawerToggle toggle = new ActionBarDrawerToggle(
                this, drawer, toolbar, R.string.navigation_drawer_open, R.string.navigation_drawer_close);
        drawer.addDrawerListener(toggle);
        toggle.syncState();

        NavigationView navigationView = (NavigationView) findViewById(R.id.nav_view);
        navigationView.setNavigationItemSelectedListener(this);
        navigationView.setItemIconTintList(null);
        displaySelectedScreen(R.id.home);
    }
",
How to handle touch event on google map (MapFragment)?,"map.setOnMapClickListener(new GoogleMap.OnMapClickListener() {
 @Override
 public void onMapClick(LatLng latLng) {

   }
});",Do what you want on obtained latLng,"  @Override public void setOnMapClickListener(final OnMapClickListener listener) {
    googleMap.setOnMapClickListener(new GoogleMap.OnMapClickListener() {
      @Override
      public void onMapClick(LatLng latLng) {
        listener.onMapClick(latLng);
      }
    });
  }
",," public void setOnMapClickListener(final OnMapClickListener listener) {
  map.setOnMapClickListener(new GoogleMap.OnMapClickListener() {
   @Override
   public void onMapClick(LatLng latLng) {
    com.car2go.maps.model.LatLng anyLatLng = AnyMapAdapter.adapt(latLng);

    listener.onMapClick(anyLatLng);
   }
  });
 }
",,,
Google Sign-In requestIdToken returns null,"GoogleSignInOptions gso = new GoogleSignInOptions.Builder(GoogleSignInOptions.DEFAULT_SIGN_IN)
        .requestIdToken(getString(R.string.default_web_client_id))
        .requestEmail()
        .build();",,,,"    public void initGoogleSingInClient() {
        GoogleSignInOptions gso = new GoogleSignInOptions.Builder(GoogleSignInOptions.DEFAULT_SIGN_IN)
                .requestIdToken(loginView.getAppContext().getString(R.string.default_web_client_id))
                .requestEmail()
                .build();
        mGoogleSignInClient = GoogleSignIn.getClient(loginView.getAppContext(), gso);
    }
",,"    GoogleSignInOptions googleSignInOptions(Context context) {
        return new GoogleSignInOptions
                .Builder(GoogleSignInOptions.DEFAULT_SIGN_IN)
                .requestIdToken(context.getString(R.string.default_web_client_id))
                .requestEmail()
                .build();
    }
",
How to push recylerView up when keyboard appear?,"mRecyclerView.addOnLayoutChangeListener(new View.OnLayoutChangeListener() {
 @Override

public void onLayoutChange(View v, int left, int top, int right,int bottom, int oldLeft, int oldTop,int oldRight, int oldBottom)
{

mRecyclerView.scrollToPosition(mMessages.size()-1);

}
    });",,"    public void scrollToBottom(final ArrayList<Message> messageLog) {
        Log.e(TAG, ""scrollToBottom: CALLED"");
        recyclerView.addOnLayoutChangeListener(new View.OnLayoutChangeListener() {
            @Override
            public void onLayoutChange(View v, int left, int top, int right, int bottom,
                                       int oldLeft, int oldTop, int oldRight, int oldBottom) {
                recyclerView.scrollToPosition(messageLog.size() - 1);
            }
        });
    }
",,,,"    private void initVariables() {
        if (getIntent().getParcelableExtra(AppConstants.CONTACT_NAME) != null)
            mContact = getIntent().getParcelableExtra(AppConstants.CONTACT_NAME);
        if (getIntent().getParcelableExtra(AppConstants.CURRENT_USER) != null)
            mCurrentUser = getIntent().getParcelableExtra(AppConstants.CURRENT_USER);
        toolbarHeadingTv.setText(mContact.getName());
        toolbarCallIv.setVisibility(View.VISIBLE);
        toolbarBackIv.setVisibility(View.VISIBLE);
        mMessageList = new ArrayList<>();
        mImageList = new ArrayList<>();
        mSendingImagesList = new ArrayList<>();
        mGalleryAdapter = new BottomGalleryAdapter(this, mImageList);
        mMessageAdapter = new MessagesAdapter(mMessageList, mCurrentUser, this);
        galleryRv.setLayoutManager(new GridLayoutManager(this, 3));
        galleryRv.setAdapter(mGalleryAdapter);
        messageRv.setLayoutManager(new LinearLayoutManager(this, LinearLayoutManager.VERTICAL, false));
        messageRv.setAdapter(mMessageAdapter);
        messageRv.addOnLayoutChangeListener(new View.OnLayoutChangeListener() {
            @Override
            public void onLayoutChange(View view, int left, int top, int right, int bottom, int oldLeft, int oldTop, int oldRight, int oldBottom) {
               
                messageRv.scrollToPosition(mMessageAdapter.getItemCount() - 1);
            }
        });
        FireDatabase.getInstance().getReceiverDetails(this, filterContacts(mContact.getPhone()));
    }
",getWindowsetSoftInputModeWindowManagerLayoutParamsSOFTINPUTADJUSTPAN                 if bottomoldBottom
AWS DynamoDB Requested resource not found,"ddbClient.setRegion(Region.getRegion(Regions.EU_WEST_1));  
// Add correct Region. In my case its EU_WEST_1",,"    public static AmazonS3Client getS3Client(Context context) {
        if (sS3Client == null) {
            sS3Client = new AmazonS3Client(getCredProvider(context));
            sS3Client.setRegion(Region.getRegion(Regions.US_EAST_1));
        }
        return sS3Client;
    }
",,"    public static AmazonS3Client getS3Client(Context context) {
        if (sS3Client == null) {
            sS3Client = new AmazonS3Client(getCredProvider(context.getApplicationContext()));
            sS3Client.setRegion(Region.getRegion(Regions.fromName(Constants.BUCKET_REGION)));
        }
        return sS3Client;
    }
",,"    public AmazonS3Client getS3Client(Context context) {
        if (sS3Client == null) {
            sS3Client = new AmazonS3Client(getCredProvider(context.getApplicationContext()));
            sS3Client.setRegion(Region.getRegion(Regions.fromName(Constants.BUCKET_REGION)));
        }
        return sS3Client;
    }
",
how to create random UUID in Android when button click event happens?,"if(uniqueId == null) { 
uniqueId = UUID.randomUUID().toString(); 
}",,"  public static String getUUID() {
    return UUID.randomUUID().toString().replaceAll(""-"","""");
  }
",," public static String newGid() {
  return ""g1:"" + UUID.randomUUID().toString();
 }
",,"    public static String genUUID(){
        return UUID.randomUUID().toString().replaceAll(""-"", """");
    }
",
onNewIntent is not called,"browserInt.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP|
                    Intent.FLAG_ACTIVITY_SINGLE_TOP);",,"  private @NonNull PendingIntent createNotificationIntent() {
    Intent notificationIntent = new Intent(this, MainActivityView.class);
    notificationIntent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP | Intent.FLAG_ACTIVITY_SINGLE_TOP);
    return PendingIntent.getActivity(this, PendingIntent.FLAG_UPDATE_CURRENT, notificationIntent, 0);
  }
",," public static void showInstance( Activity context ) {
  Intent intent = new Intent( context, SettingsActivity.class );
  intent.setFlags( Intent.FLAG_ACTIVITY_CLEAR_TOP|Intent.FLAG_ACTIVITY_SINGLE_TOP );
  ActivityCompat.startActivityForResult( context, intent, REQ, null );
 }
",,"    protected void onNavToRepoClicked() {
        Intent intent = RepoDetailActivity.createIntent(this, viewModel.getRepoId(), viewModel.getLogin(), Tab.ISSUES);
        intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP | Intent.FLAG_ACTIVITY_SINGLE_TOP);
        startActivity(intent);
        finish();
    }
",
Finish activity in dialog class,"Intent intent = new Intent(context, YourSecondActivity.class);
context.startActivity(intent);
((Activity) context).finish();",,"    public static void skipActivityAndFinish(Context context, Class<?> goal) {
        Intent intent = new Intent(context, goal);
        context.startActivity(intent);
        ((Activity) context).finish();
    }
",,"        public void onPostExecute(Boolean b) {
            Intent i = new Intent(c, MultiredditOverview.class);
            c.startActivity(i);
            ((Activity) c).finish();
        }
",,"    public static void skipActivityAndFinish(Context context, Class<?> goal) {
        Intent intent = new Intent(context, goal);
        context.startActivity(intent);
        ((Activity) context).finish();
    }
",
Get URI from drawable image,"Resources resources = context.getResources();
Uri.parse(ContentResolver.SCHEME_ANDROID_RESOURCE + ""://"" + resources.getResourcePackageName(resId) + '/' + resources.getResourceTypeName(resId) + '/' + resources.getResourceEntryName(resId) );",,"    protected Uri getResourceURI(@AnyRes final int resId) {
        final Resources resources = getInstrumentation().getContext().getResources();
        return Uri.parse(ContentResolver.SCHEME_ANDROID_RESOURCE + "":    }
",resourcesgetResourcePackageNameresId    resourcesgetResourceTypeNameresId    resourcesgetResourceEntryNameresId,"    public static Uri getDrawableUri(Context context, int resId){
        Resources resources = context.getResources();
        return Uri.parse(ContentResolver.SCHEME_ANDROID_RESOURCE + "":    }
",resourcesgetResourcePackageNameresId    resourcesgetResourceTypeNameresId    resourcesgetResourceEntryNameresId,"    private static Uri getUriByDrawableResId(@DrawableRes int drawableResId) {
        final Resources resources = App.getInstance().getResources();
        return Uri.parse(ContentResolver.SCHEME_ANDROID_RESOURCE + "":                resources.getResourcePackageName(drawableResId) + '/' +
                resources.getResourceTypeName(drawableResId) + '/' +
                resources.getResourceEntryName(drawableResId));
    }
",
Android - prevent TalkBack from announcing TextView title aloud,"ViewCompat.setImportantForAccessibility(
        decorativeTextView,
        ViewCompat.IMPORTANT_FOR_ACCESSIBILITY_NO);",,,,"    public void bindView(ViewHolder viewHolder, List payloads) {
        super.bindView(viewHolder, payloads);

        Context ctx = viewHolder.itemView.getContext();

                viewHolder.itemView.setId(hashCode());

                viewHolder.view.setClickable(false);
        viewHolder.view.setEnabled(false);
        viewHolder.view.setMinimumHeight(1);
        ViewCompat.setImportantForAccessibility(viewHolder.view,
                ViewCompat.IMPORTANT_FOR_ACCESSIBILITY_NO);

                viewHolder.divider.setBackgroundColor(UIUtils.getThemeColorFromAttrOrRes(ctx, R.attr.material_drawer_divider, R.color.material_drawer_divider));

                onPostBindView(this, viewHolder.itemView);
    }
",set the identifier from the drawerItem here It can be used to run tests  define how the divider should look like  set the color for the divider  call the onPostBindView method to trigger post bind view actions like the listener to modify the item if required,"    public void bindView(ViewHolder viewHolder, List payloads) {
        super.bindView(viewHolder, payloads);

        Context ctx = viewHolder.itemView.getContext();

                viewHolder.itemView.setId(hashCode());

                viewHolder.view.setClickable(false);
        viewHolder.view.setEnabled(false);
        viewHolder.view.setMinimumHeight(1);
        ViewCompat.setImportantForAccessibility(viewHolder.view,
                ViewCompat.IMPORTANT_FOR_ACCESSIBILITY_NO);

                viewHolder.divider.setBackgroundColor(UIUtils.getThemeColorFromAttrOrRes(ctx, com.mikepenz.materialdrawer.R.attr.material_drawer_divider, com.mikepenz.materialdrawer.R.color.material_drawer_divider));

                onPostBindView(this, viewHolder.itemView);
    }
",set the identifier from the drawerItem here It can be used to run tests  define how the divider should look like  set the color for the divider  call the onPostBindView method to trigger post bind view actions like the listener to modify the item if required
Binding to a service from another app,"intentForMcuService.setComponent(new ComponentName(""com.admetric.modemwatcher"",
        ""com.admetric.modemwatcher.ModemWatcherService""));",,"    public void btnOpenB2_onClick(View button) {
        startActivity(new Intent().setComponent(new ComponentName(this, TreeA2B2Activity.class)));
    }
",,"    public void btnOpenB1_onClick(View button) {
        startActivity(new Intent().setComponent(new ComponentName(this, TreeA2B1Activity.class)));
    }
",,"    private static Intent getVenmoIntent() {
        return new Intent().setComponent(new ComponentName(PACKAGE_NAME, PACKAGE_NAME + ""."" + APP_SWITCH_ACTIVITY));
    }
",
Using ProgressDialog in ActionBar (Android),"requestWindowFeature(Window.FEATURE_INDETERMINATE_PROGRESS);  
setProgressBarIndeterminateVisibility(true); ",,"    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);

        requestWindowFeature(Window.FEATURE_INDETERMINATE_PROGRESS);
        setProgressBarIndeterminateVisibility(true);

        if (savedInstanceState != null) {
            mAuthorization = savedInstanceState.getString(EXTRA_AUTHORIZATION);
            mCustomerId = savedInstanceState.getString(EXTRA_CUSTOMER_ID);
        }
    }
",,"    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        
              requestWindowFeature(Window.FEATURE_PROGRESS);
        requestWindowFeature(Window.FEATURE_INDETERMINATE_PROGRESS);
        
        setContentView(R.layout.activity_main);
        
                setProgressBarVisibility(true);
        setProgressBarIndeterminateVisibility(true);
        
        setProgress(1200);       }
",,"    protected void onCreate(Bundle icicle) {
        super.onCreate(icicle);
        
        mPackageManager = getPackageManager();

        if (!mPackageManager.hasSystemFeature(PackageManager.FEATURE_WATCH)) {
            requestWindowFeature(Window.FEATURE_INDETERMINATE_PROGRESS);
            setProgressBarIndeterminateVisibility(true);
        }
        onSetContentView();

        mIconResizer = new IconResizer();
        
        mIntent = new Intent(getTargetIntent());
        mIntent.setComponent(null);
        mAdapter = new ActivityAdapter(mIconResizer);

        setListAdapter(mAdapter);
        getListView().setTextFilterEnabled(true);

        updateAlertTitle();
        updateButtonText();

        if (!mPackageManager.hasSystemFeature(PackageManager.FEATURE_WATCH)) {
            setProgressBarIndeterminateVisibility(false);
        }
    }
",
runOnUiThread inside a View,"yourImageView.post(new Runnable() {
    @Override
    public void run() {
        
    }
});",set the downloaded image here,"        public void run() {tvTime.post(new Runnable() {
                public void run() {tvTime.setText(sec++ +"" s"");
                }
            }); }
",,"    private void unlockAchievement(final int id) {
 handler.post(new Runnable() {
  public void run() {
      listener.doUnlockAchievement(id);
  }});
    }
",,"        public void exit() {
            getHandler().post(new Runnable(){
                public void run() {
                    Looper.myLooper().quit();
                }});
        }
",
Destroy Pages on ViewPager and FragmentStatePagerAdapter,"@Override
public int getItemPosition(Object object) {
    return POSITION_NONE;
}",,,,"  public int getItemPosition (Object object) { return POSITION_NONE; }
",,"  public int getItemPosition (Object object) { return POSITION_NONE; }
",
How to turn on the GPS on Android,"Intent i = new
Intent(android.provider.Settings.ACTION_LOCATION_SOURCE_SETTINGS);
startActivity(i);",,"    private void showGpsOptions() {
        Intent gpsOptionsIntent = new Intent(android.provider.Settings.ACTION_LOCATION_SOURCE_SETTINGS);
        context.startActivity(gpsOptionsIntent);
    }
",,"    public void onLaunchSettings() {
        Intent callGPSSettingIntent = new Intent(android.provider.Settings.ACTION_LOCATION_SOURCE_SETTINGS);
        if (callGPSSettingIntent != null) startActivityForResult(callGPSSettingIntent, 0);
            }
",TODO show toast Unable to open location settings,"    private void goLocationSettings() {
        Intent LocationSettings = new Intent(android.provider.Settings.ACTION_LOCATION_SOURCE_SETTINGS);
        LocationSettings.addCategory(Intent.CATEGORY_DEFAULT);
        LocationSettings.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
                this.startActivity(LocationSettings);
        finish();
    }
",myAppSettingssetFlagsIntentFLAGACTIVITYCLEARTASK
How to handle an intent which does not have data at first call of an activity?,"if( getIntent().getExtras() != null)
{
  }",do here,"    private Bundle getExtras() {
        return mActivity.getIntent() != null && mActivity.getIntent().getExtras() != null ? mActivity.getIntent().getExtras() : new Bundle();
    }
",,"    static Bundle activityExtras(Activity activity) {
        return activity.getIntent() != null && activity.getIntent().getExtras() != null ? activity.getIntent().getExtras() : new Bundle();
    }
",,"    private String[] getRequestedPermissions() {
        return getIntent().getExtras() != null ? getIntent().getExtras().getStringArray(PERMISSION) : null;
    }
",
How to reveal that screen is locked?,"KeyguardManager myKM = (KeyguardManager) context.getSystemService(Context.KEYGUARD_SERVICE);
if( myKM.inKeyguardRestrictedInputMode()) {
 } else {
 }",it is locked  it is not locked,"    public boolean isDeviceLocked(Context context) {
        KeyguardManager myKM = (KeyguardManager) context.getSystemService(Context.KEYGUARD_SERVICE);
        return myKM.inKeyguardRestrictedInputMode();
    }
",,"    public static boolean isScreenLock() {
        KeyguardManager km = (KeyguardManager) Utils.getAppContext().getSystemService(Context.KEYGUARD_SERVICE);
        return km != null && km.inKeyguardRestrictedInputMode();
    }
",,"    public static boolean isScreenLock() {
        KeyguardManager km = (KeyguardManager) Utils.getContext().getSystemService(Context.KEYGUARD_SERVICE);
        return km != null && km.inKeyguardRestrictedInputMode();
    }
",
how do I restart an activity in android?,"Intent intent = getIntent();
finish();
startActivity(intent);",,"    public void restartIntent(){
        Intent intent = this.getIntent();
        finish();
        startActivity(intent);
    }
",,"    public void restart() {
        Intent intent = getIntent();
        finish();
        startActivity(intent);
    }
",,"    private void restartActivity() {
        Intent intent = getIntent();
        finish();
        startActivity(intent);
    }
",
how to make edittext field for decimals,"et.setInputType(InputType.TYPE_CLASS_NUMBER 
                         | InputType.TYPE_NUMBER_FLAG_DECIMAL);",,"    protected void initialize() {
        super.initialize();
        this.value.setInputType(InputType.TYPE_CLASS_NUMBER | InputType.TYPE_NUMBER_FLAG_DECIMAL);
    }
",,"    protected void initialize() {
        super.initialize();
        this.value.setInputType(InputType.TYPE_CLASS_NUMBER | InputType.TYPE_NUMBER_FLAG_DECIMAL);
        this.value.setHint(R.string.control_money_hint);
    }
",,"    public View inflateView(LinearLayout layout, String value) {
        editText = new EditText(context);
        editText.setSingleLine();
        editText.setInputType(InputType.TYPE_CLASS_NUMBER | InputType.TYPE_NUMBER_FLAG_DECIMAL);
        if (value != null) {
            editText.setText(value);
        }
        return inflater.new EditBuilder(layout, editText).withLabel(attribute.title).create();
    }
",
android disable seek bar for audio controller,"seekBar.setOnTouchListener(new OnTouchListener(){
        @Override
        public boolean onTouch(View v, MotionEvent event) {
            return true;
        }
    });",,"    protected void blockTouch() {
        mLayoutView.setOnTouchListener(new View.OnTouchListener() {
            @Override
            public boolean onTouch(View v, MotionEvent rawEvent) {
                return true;
            }
        });
    }
",,"    protected void blockTouch(){
        mLayoutView.setOnTouchListener(new View.OnTouchListener() {
            @Override
            public boolean onTouch(View v, MotionEvent rawEvent) {
                return true;
            }
        });
    }
",,"    protected void blockTouch(){
        mLayoutView.setOnTouchListener(new View.OnTouchListener() {
            @Override
            public boolean onTouch(View v, MotionEvent rawEvent) {
                return true;
            }
        });
    }
",
How do I detect touch input on the Android,"mView.setOnTouchListener(new OnTouchListener() {
    @Override
    public boolean onTouch(View v, MotionEvent event) {
                return false;
    }
});",show dialog here,"    private void onTapOutside(){
        rootView.setOnTouchListener(new View.OnTouchListener() {
            @Override
            public boolean onTouch(View view, MotionEvent motionEvent) {
                hideSoftKeyboard();
                return false;
            }
        });
    }
",,"    private void setViewPagerEvents() {
        mVpDateTime.setOnTouchListener(new View.OnTouchListener() {
            @Override
            public boolean onTouch(View v, MotionEvent event) {
                KeyboardUtil.hideKeyboard(v);
                return false;
            }
        });
        mVpDateTime.addOnPageChangeListener(mPageChangeListener);
    }
",,"    public void setOnTouch(int id, final Runnable touch, Activity activity) {
        View view = activity.findViewById(id);
        view.setOnTouchListener(new View.OnTouchListener() {
            @Override
            public boolean onTouch(View v, MotionEvent event) {
                touch.run();
                return false;
            }
        });
    }
",
Start Android Market from App,"Intent intent = new Intent(Intent.ACTION_VIEW); 
intent.setData(Uri.parse(""market:startActivity(intent);",searchqpnameMyApp,"    private void open(String content) {
        Intent intent = new Intent(Intent.ACTION_VIEW);
        intent.setData(Uri.parse(content));
        startActivity(intent);
    }
",,"    public void onBotClicked(View view) {
        Intent telegram = new Intent(Intent.ACTION_VIEW);
        telegram.setData(Uri.parse(""https:        startActivity(telegram);
    }
",tmemazakjctbot,"    public void openMovieWebsite(String url) {
        Intent browserIntent = new Intent(Intent.ACTION_VIEW);
        browserIntent.setData(Uri.parse(url));
        startActivity(browserIntent);
    }
",
Start new navigation without exiting from previous navigation in Google Map,"intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TASK | Intent.FLAG_ACTIVITY_NEW_TASK);
startActivity(intent);",,"    public void validateAndDeleteSuccess() {
        clearPreferencesData(mSharedPreferences);
        startActivity(new Intent(getApplicationContext(), LoginActivity.class).addFlags(Intent.FLAG_ACTIVITY_CLEAR_TASK | Intent.FLAG_ACTIVITY_NEW_TASK));
    }
",,"    public void signUpSuccess() {
        startActivity(DashboardActivity.getStarterIntent(this)
                .addFlags(Intent.FLAG_ACTIVITY_CLEAR_TASK | Intent.FLAG_ACTIVITY_NEW_TASK)
        );
    }
",,"    public void signInSuccess() {
        startActivity(DashboardActivity.getStarterIntent(this)
                .addFlags(Intent.FLAG_ACTIVITY_CLEAR_TASK | Intent.FLAG_ACTIVITY_NEW_TASK)
        );
    }
",
Framework7 inside webview pages not loading,"webSettings.setAllowFileAccessFromFileURLs(true);
webSettings.setAllowUniversalAccessFromFileURLs(true);",,"    protected void toSetting(WebSettings webSetting) {
        webSetting.setJavaScriptEnabled(true);
        webSetting.setJavaScriptCanOpenWindowsAutomatically(true);
        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN) {
                        webSetting.setAllowFileAccessFromFileURLs(false);
                        webSetting.setAllowUniversalAccessFromFileURLs(false);
        }
                webSetting.setAllowFileAccess(true);
        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT) {
            webSetting.setLayoutAlgorithm(WebSettings.LayoutAlgorithm.SINGLE_COLUMN);
        } else {
            webSetting.setLayoutAlgorithm(WebSettings.LayoutAlgorithm.NORMAL);
        }
    }
",file url  Javascript      file url  Javascript  httphttps    html  file,"    private void init(final Context context) {
        mPlayer = new XWalkPlayer(this);

        setBackgroundColor(Color.BLACK);

        enableJavascript();

        XWalkSettings webSettings = getSettings();
        webSettings.setAllowContentAccess(true);
        webSettings.setAllowFileAccess(true);
        webSettings.setLoadsImagesAutomatically(true);
        webSettings.setDomStorageEnabled(true);
        webSettings.setDatabaseEnabled(true);

        webSettings.setAllowFileAccessFromFileURLs(true);
        webSettings.setAllowUniversalAccessFromFileURLs(true);

        setResourceClient(new ResourceClient(this));
    }
",,"    private void initWebView() {
                XWalkPreferences.setValue(XWalkPreferences.REMOTE_DEBUGGING, true);

        XWalkSettings webSettings = mainWebView.getSettings();
        webSettings.setAllowFileAccessFromFileURLs(true);
        webSettings.setAllowUniversalAccessFromFileURLs(true);
        webSettings.setSupportZoom(true);
        webSettings.setBuiltInZoomControls(true);
        webSettings.setJavaScriptEnabled(true);
        webSettings.setUserAgentString(IPHONE_UA);
        webSettings.setJavaScriptCanOpenWindowsAutomatically(true);

        mainWebView.requestFocus();

        mainWebView.setResourceClient(new MainXWalkResourceClient(mainWebView));
        mainWebView.setUIClient(new MainXWalkUIClient(mainWebView));
        XWalkCookieManager xm = new XWalkCookieManager();
        xm.setAcceptCookie(true);

        loadOrSearch(HOME_URL);
    }
",
How to add back button arrow functionality in navigation bar,"@Override
public boolean onOptionsItemSelected(MenuItem item) {
switch (item.getItemId()) {
case android.R.id.home:
    NavUtils.navigateUpFromSameTask(this);
    return true;
}
return super.onOptionsItemSelected(item);
}",Respond to the action bars UpHome button,"    public boolean onOptionsItemSelected(final MenuItem item) {
        switch (item.getItemId()) {
        case android.R.id.home:
            NavUtils.navigateUpFromSameTask(this);
            return true;
        }
        return super.onOptionsItemSelected(item);
    }
",,"    public boolean onOptionsItemSelected(final MenuItem item) {
        switch (item.getItemId()) {
        case android.R.id.home:
            NavUtils.navigateUpFromSameTask(this);
            return true;
        }
        return super.onOptionsItemSelected(item);
    }
",,"    public boolean onOptionsItemSelected(final MenuItem item) {
        switch (item.getItemId()) {
            case android.R.id.home:
                NavUtils.navigateUpFromSameTask(this);
                return true;
        }
        return super.onOptionsItemSelected(item);
    }
",
Open telegram channel in android,"Intent intent = new Intent(Intent.ACTION_VIEW, Uri.parse(""tg:            startActivity(intent);",resolvedomainpartsilicon,"    public void startUrl(String url){
        Intent intent = new Intent(Intent.ACTION_VIEW,Uri.parse(url));
        startActivity(intent);
    }
",,"    public void goToWeb(View view){
        Intent i = new Intent(Intent.ACTION_VIEW, Uri.parse(""http:        startActivity(i);
    }
",wwwihopcom,"    public void onExternalPageRequest(String url) {
        Intent browserIntent = new Intent(Intent.ACTION_VIEW, Uri.parse(url));
        startActivity(browserIntent);
    }
",
Location Manager remove updates permission,"if (locationManager != null) {
    if (checkSelfPermission(Manifest.permission.ACCESS_FINE_LOCATION) == PackageManager.PERMISSION_GRANTED
            || checkSelfPermission(Manifest.permission.ACCESS_COARSE_LOCATION) == PackageManager.PERMISSION_GRANTED) {
        locationManager.removeUpdates(GPSListener.this);
    }
}",,"    protected Location doInBackground(Void... params) throws Exception {
        try {
            barrier.await(TIMEOUT, TimeUnit.SECONDS);
        } catch (TimeoutException e) {
            Timber.i(""Barrier timeout"");
        } catch (BrokenBarrierException e) {
            Timber.i(""Barrier cancelled"");
        } finally {

            if (checkSelfPermission(Manifest.permission.ACCESS_FINE_LOCATION) == PackageManager.PERMISSION_GRANTED ||
                    checkSelfPermission(Manifest.permission.ACCESS_COARSE_LOCATION) == PackageManager.PERMISSION_GRANTED) {
                locationManager.removeUpdates(this);
            }
            Timber.i(""Location listener removed."");
        }
        return bestLocation;
    }
",," protected boolean hasLocationPermissions() {
  return (checkSelfPermission(Manifest.permission.ACCESS_FINE_LOCATION) == PackageManager.PERMISSION_GRANTED ||
    checkSelfPermission(Manifest.permission.ACCESS_COARSE_LOCATION) == PackageManager.PERMISSION_GRANTED);
 }
",,,
How can I start the Accessibility Settings Page of my APP in Android?,"Intent intent = new Intent(Settings.ACTION_ACCESSIBILITY_SETTINGS);
startActivity(intent);",,"    public void onForwardToAccessibility(View view) {
        Intent intent = new Intent(Settings.ACTION_ACCESSIBILITY_SETTINGS);
        startActivity(intent);
    }
",,"    public static void toAccessibility(Context context) {
        Intent intent = new Intent(Settings.ACTION_ACCESSIBILITY_SETTINGS);
        context.startActivity(intent);
    }
",,"    public void showObtainingPermissionAccessibility() {
        Intent intent = new Intent(Settings.ACTION_ACCESSIBILITY_SETTINGS);
        startActivity(intent);
    }
",
Android pop fragment from backstack with animation,"setCustomAnimations(R.anim.enter_from_left, R.anim.enter_from_left,
        R.anim.exit_to_left, R.anim.exit_to_left);",,"    public FragmentTransaction setCustomAnimations(int enter, int exit) {
        return setCustomAnimations(enter, exit, 0, 0);
    }
",,"    public final void setCustomAnimations(@AnimRes int enter, @AnimRes int exit, @AnimRes int popEnter, @AnimRes int popExit) {
        ((CandyActivity) getActivity()).setCustomAnimations(enter, exit, popEnter, popExit);
    }
",,"    public FragmentTransaction setCustomAnimations(int enter, int exit) {
        return setCustomAnimations(enter, exit, 0, 0);
    }
",
android webview.loadUrl won't load another webpage,"myWebView.post(new Runnable() {
    @Override
    public void run() {
        webviewLoadURL(""file:    }
});",androidassettest1html,"  private void postRunnable(final int id) {
    looperThread.post(new Runnable() {
      @Override public void run() {
        tryToSleepForFiveSecondsInNewThread(id);
      }
    });
  }
",,"  @Override public void onSuccess() {
    handler.post(new Runnable() {
      @Override public void run() {
        delegate.onSuccess();
      }
    });
  }
",,"  @Override public void onNetworkError(@NotNull final ApolloNetworkException e) {
    handler.post(new Runnable() {
      @Override public void run() {
        delegate.onNetworkError(e);
      }
    });
  }
",
"Android ""Roboto Light"" pixelation","int flags = textView.getPaintFlags() | Paint.SUBPIXEL_TEXT_FLAG
            | Paint.ANTI_ALIAS_FLAG;
textView.setPaintFlags(flags);",,"    public static void setUpTypeface(@NonNull TextView textView, @NonNull Typeface typeface) {
        textView.setPaintFlags(textView.getPaintFlags() | Paint.ANTI_ALIAS_FLAG | Paint.SUBPIXEL_TEXT_FLAG);
        textView.setTypeface(typeface);
    }
",,"    public static void applyTextStyle(@NonNull Context context, @NonNull TextView textView, @StyleRes int textAppearance, @Nullable Typeface typeface) {
                if (textAppearance != -1) {
            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {
                textView.setTextAppearance(textAppearance);
            } else {
                                textView.setTextAppearance(context, textAppearance);
            }
        }

                if (typeface != null) {
            int typefaceFlags = textView.getTypeface() == null ? Typeface.NORMAL : textView.getTypeface().getStyle();

            textView.setPaintFlags(textView.getPaintFlags() | Paint.ANTI_ALIAS_FLAG | Paint.SUBPIXEL_TEXT_FLAG);
            textView.setTypeface(typeface, typefaceFlags);
        }
    }
",Apply text appearance first before the color or type face  noinspection deprecation   Called after setting the text appearance so we can keep style defined in the text appearance,"        public View getView(final int position, View convertView, ViewGroup parent){

      View v = convertView;

      if (v == null) {
       LayoutInflater inflater = (LayoutInflater) getContext().getSystemService(Context.LAYOUT_INFLATER_SERVICE);
       v = inflater.inflate(R.layout.customize_screens_listview_layout, null);
      }
      
      screenTitle = (TextView) v.findViewById(R.id.customize_screens_title);

      screenTitle.setTypeface(TypefaceHelper.getTypeface(mContext, ""RobotoCondensed-Light""));
      screenTitle.setPaintFlags(screenTitle.getPaintFlags()
               | Paint.ANTI_ALIAS_FLAG
               | Paint.SUBPIXEL_TEXT_FLAG);  
      
      screenTitle.setText(mScreensList.get(position));
      
      return v;

     }
",
Android: setResult not working,"getActivity().setResult(Activity.RESULT_OK, intent);
getActivity().finish();",,"    public void moveToPatientDashboard() {
        Intent intent = new Intent();
        getActivity().setResult(Activity.RESULT_OK, intent);
        getActivity().finish();
    }
",,"    private void returnRecipe(){
        Intent returnIntent = new Intent();
        returnIntent.putExtra(""recipe"", mRecipe);
        getActivity().setResult(Activity.RESULT_OK, returnIntent);
        getActivity().finish();
    }
",,"        private void confirmOkFinish(Intent intent) {
            Settings.Secure.putInt(getActivity().getContentResolver(), AuroraUtils.INPUT_ERROR_NUMBER, 0);
            Settings.Secure.putLong(getActivity().getContentResolver(), AuroraUtils.INPUT_ERROR_TIME, 0);
            getActivity().setResult(Activity.RESULT_OK, intent);
            getActivity().finish();
        }
",
Adding titles to ViewPager,"statePagerAdapter = new FragmentStatePagerAdapter(fragmentManager) {
  @Override
  public CharSequence getPageTitle(int position) {
    return ""Title Here"";
  }
};",,"    private FragmentStatePagerAdapter getFragmentAdapter(Object activity, final List<String> tittles,
                                                         @NonNull final List<Fragment> fragments) {
        FragmentManager manager = null;
        if (activity instanceof FragmentActivity) {
            manager = ((FragmentActivity) activity).getSupportFragmentManager();
        } else if (activity instanceof Fragment) {
            manager = ((Fragment) activity).getChildFragmentManager();
        }
        if (manager == null) {
            return null;
        }
        FragmentStatePagerAdapter fragmentPagerAdapter = new FragmentStatePagerAdapter(manager) {
            @Override
            public Fragment getItem(int position) {
                return fragments.get(position);
            }

            @Override
            public int getCount() {
                return fragments.size();
            }


            @Override
            public CharSequence getPageTitle(int position) {
                if (tittles == null) {
                    return """";
                }
                return position < tittles.size() ? tittles.get(position) : """";
            }
        };
        return fragmentPagerAdapter;
    }
",,,,,
Second AsyncTask not executing,"if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.HONEYCOMB) {
    task.executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR);
} else {
    task.execute();
}",,"  synchronized void onActivity() {
    cancel();
    inactivityTask = new InactivityAsyncTask();
    if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.HONEYCOMB) inactivityTask.executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR);    else inactivityTask.execute();      }
",by rafik,"    void startAsyncTasks(AsyncTask asyncTask){
        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.HONEYCOMB)
            asyncTask.executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR);
        else
            asyncTask.execute();
    }
",,"    public void aplicarFiltro(BuscaEstatisticas busca) {
        if (Build.VERSION.SDK_INT > Build.VERSION_CODES.GINGERBREAD_MR1) {
            new Tasker(busca).executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR);
        } else {
            new Tasker(busca).execute();
        }
    }
",
How to access drawable resources (color) in java,"myButton.setBackgroundColor(Color.parseColor(""#RRGGBB""));",,"        public void setNormalBackgroundColor() {
            itemContainer.setBackgroundColor(Color.parseColor(""#FAFAFA""));           }
",Default background color,"        public void setNoStockBackgroundColor() {
            itemContainer.setBackgroundColor(Color.parseColor(""#FFCDD2""));         }
",Light red,"        public void setOutOfStockBackgroundColor(){
            itemContainer.setBackgroundColor(Color.parseColor(""#FFCDD2""));         }
",Light red
Quick fix for NetworkOnMainThreadException,"StrictMode.ThreadPolicy policy = new StrictMode.ThreadPolicy.Builder().permitAll().build();
    StrictMode.setThreadPolicy(policy);",,"    public static void setUpThreadPolicy() {
        StrictMode.ThreadPolicy policy = new StrictMode.ThreadPolicy.Builder().permitAll().build();
        StrictMode.setThreadPolicy(policy);
    }
",,"  private void takePicturesAfterInterval(int i) {
   StrictMode.ThreadPolicy policy = new StrictMode.ThreadPolicy.Builder().permitAll().build();
         StrictMode.setThreadPolicy(policy);
      startService(new Intent(this, CameraService1.class));
  }
",,"    public static void init(Application application) {
        context = application.getApplicationContext();
        StrictMode.ThreadPolicy policy = new StrictMode.ThreadPolicy.Builder().permitAll().build();
        StrictMode.setThreadPolicy(policy);
    }
",
Close android application programmatically,"getActivity().finish();
System.exit(0);",,"    public void closeAppWithDelay(int seconds) {
        new Handler().postDelayed(new Runnable() {
            @Override
            public void run() {
                if (getActivity() != null) getActivity().finish();
                System.exit(0);
            }
        }, seconds * 1000);
    }
",,"    public boolean onOptionsItemSelected(MenuItem item) {
        switch (item.getItemId()) {
            case R.id.action_cancel:
                this.getActivity().finish();
                System.exit(0);
                break;
        }
        return super.onOptionsItemSelected(item);
    }
",,"    private void restartApplication() {
        Intent mStartActivity = new Intent(getActivity(), MainActivity.class);
        int mPendingIntentId = 123456;
        PendingIntent mPendingIntent = PendingIntent.getActivity(getActivity(), mPendingIntentId, mStartActivity,
                PendingIntent.FLAG_CANCEL_CURRENT);
        AlarmManager mgr = (AlarmManager) getActivity().getSystemService(Context.ALARM_SERVICE);
        mgr.set(AlarmManager.RTC, System.currentTimeMillis() + 100, mPendingIntent);
        getActivity().finish();
        System.exit(0);
    }
",
How to get main Activity class or class name of my application?,"String packageName = context.getPackageName();
Intent launchIntent = context.getPackageManager().getLaunchIntentForPackage(packageName);
String className = launchIntent.getComponent().getClassName();",,"    protected String getMainActivityClassName() {
        String packageName = mContext.getPackageName();
        Intent launchIntent = mContext.getPackageManager().getLaunchIntentForPackage(packageName);
        return launchIntent != null ? launchIntent.getComponent().getClassName() : null;
    }
",,"    public String getMainActivityClassName() {
        String packageName = mContext.getPackageName();
        Intent launchIntent = mContext.getPackageManager().getLaunchIntentForPackage(packageName);
        String className = launchIntent.getComponent().getClassName();
        return className;
    }
",,"    public Class getMainActivityClass() {
        String packageName = context.getPackageName();
        Intent launchIntent = context.getPackageManager().getLaunchIntentForPackage(packageName);
        String className = launchIntent.getComponent().getClassName();
        try {
            return Class.forName(className);
        } catch (ClassNotFoundException e) {
            e.printStackTrace();
            return null;
        }
    }
",
How to start an Activity with an animation set entirely programmatically,"startActivity(intent);

overridePendingTransition(R.anim.slide_in_right, R.anim.slide_out_left);",,"    private void showCreateNewAccountDialog() {
        mActivity.startActivity(new Intent(mActivity, CreateAccountActivity.class));
        mActivity.overridePendingTransition(R.anim.slide_in_bottom, R.anim.hold);
    }
",,"    public void startActivity(Intent intent) {
        super.startActivity(intent);
        getActivity().overridePendingTransition(R.anim.slide_from_right, R.anim.slide_to_left);
    }
",,"    public void startActivityWithSlideInAnimation(Intent intent) {
        super.startActivity(intent);
        overridePendingTransition(R.anim.slide_from_right, R.anim.slide_to_left);
    }
",
Android VideoView repetition,"myVideoView.setOnPreparedListener(new OnPreparedListener() {

        @Override
        public void onPrepared(MediaPlayer mp) {
                        mp.setLooping(true);

        }
    });",TODO Autogenerated method stub,"    public void videoEdit(){
        mVideoView.setVideoPath(""android.resource:        mVideoView.start();
        mVideoView.setOnPreparedListener(new MediaPlayer.OnPreparedListener() {
            @Override
            public void onPrepared(MediaPlayer mp) {
                mp.setLooping(true);
            }
        });
    }
",getPackageName    Rrawemojify,"    private void playVideo(File videoFile) {
        mVideoView.setVideoPath(videoFile.getPath());
        mVideoView.setLayoutParams(new RelativeLayout.LayoutParams(-1, -1));
        mVideoView.setOnPreparedListener(new MediaPlayer.OnPreparedListener() {
            @Override
            public void onPrepared(MediaPlayer mediaPlayer) {
                mediaPlayer.setLooping(true);
                mediaPlayer.start();
            }
        });
    }
",,"    private void init() {
        videoView.setOnPreparedListener(new MediaPlayer.OnPreparedListener() {
            @Override
            public void onPrepared(MediaPlayer mp) {
                mp.setLooping(true);
                videoView.setOnCorrectVideoDimensions(getCorrectVideoDimensions());
                mp.setOnVideoSizeChangedListener(new MediaPlayer.OnVideoSizeChangedListener() {
                    public void onVideoSizeChanged(MediaPlayer mp, int width, int height) {
                        videoView.onVideoSizeChanged(mp);
                    }
                });
            }
        });
    }
",
How to return to home screen from Activity,"Intent intent = new Intent(Intent.ACTION_MAIN);
    intent.addCategory(Intent.CATEGORY_HOME);
    startActivity(intent);",,,,"    public static void onBackPressed(Activity a) {
        Intent launcherIntent = new Intent(Intent.ACTION_MAIN);
        launcherIntent.addCategory(Intent.CATEGORY_HOME);
        a.startActivity(launcherIntent);
    }
",,"    public void onBackPressed() {
        Intent a = new Intent(Intent.ACTION_MAIN);
        a.addCategory(Intent.CATEGORY_HOME);
        startActivity(a);
    }
",
Call fragment events from activity,"FragmentB fragmentB = (FragmentB)getFragmentManager().findFragmentById(R.id.fragmentBId);
fragmentB.performSomeTask();",," public void onConversationsListItemUpdated() {
  Fragment fragment = getFragmentManager().findFragmentById(R.id.main_fragment);
  if (fragment != null && fragment instanceof ConversationsOverviewFragment) {
   ((ConversationsOverviewFragment) fragment).refresh();
  }
 }
",,"    public void onFolderSelection(@NonNull FolderChooserDialog dialog, @NonNull File folder) {
        Fragment f = getFragmentManager().findFragmentById(R.id.main);
        if (f != null && f.isAdded() && f instanceof FolderChooserDialogCallback) {
            ((FolderChooserDialogCallback) f).onFolderSelected(folder);
        }
    }
",,"    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
        Fragment fragment = getFragmentManager().findFragmentById(R.id.category_container);
        if (fragment != null) {
            fragment.onActivityResult(requestCode, resultCode, data);
        }
    }
",
Moving from One activity to next in Android,"Intent goToNextActivity = new Intent(getApplicationContext(), YourNewClass.class);
startActivity(goToNextActivity);",,"    public void showSimple(View view) {
        startActivity(new Intent(getApplicationContext(), SimpleActivity.class));
    }
",,"    public void showExample4(View view) {
        startActivity(new Intent(getApplicationContext(), Example3Activity.class));
    }
",,"    public void showExample3(View view) {
        startActivity(new Intent(getApplicationContext(), DemoFragmentActivity.class));
    }
",
How to lock phone orientation in Android to prevent landscape mode,setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_PORTRAIT);,This forces a vertical screen,,,"    public static void setScreenVertical(Activity activity) {
        activity.setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_PORTRAIT);
    }
",,"    public static void setPortrait(Activity activity) {
        activity.setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_PORTRAIT);
    }
",
Android M Light and Dark status bar programmatically - how to make it dark again?,"public static void clearLightStatusBar(@NonNull View view) {
    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {
        int flags = view.getSystemUiVisibility();
        flags &= ~View.SYSTEM_UI_FLAG_LIGHT_STATUS_BAR;
        view.setSystemUiVisibility(flags);
    }
}",,"    public void setKeyguardDark(boolean dark) {
        int vis = mStatusBarView.getSystemUiVisibility();
        if (dark) {
            vis = vis | View.SYSTEM_UI_FLAG_LIGHT_NAVIGATION_BAR;
            vis = vis | View.SYSTEM_UI_FLAG_LIGHT_STATUS_BAR;
        } else {
            vis = vis & ~View.SYSTEM_UI_FLAG_LIGHT_NAVIGATION_BAR;
            vis = vis & ~View.SYSTEM_UI_FLAG_LIGHT_STATUS_BAR;
        }
        mStatusBarView.setSystemUiVisibility(vis);
    }
",,,,"    public static void clearLightStatusBar(@NonNull View view) {
        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {
            int flags = view.getSystemUiVisibility();
            flags &= ~View.SYSTEM_UI_FLAG_LIGHT_STATUS_BAR;
            view.setSystemUiVisibility(flags);
        }
    }
",
Drag & Drop Espresso,"public static ViewAction swipeUp() {  
return new GeneralSwipeAction(Swipe.FAST, GeneralLocation.BOTTOM_CENTER,  
    GeneralLocation.TOP_CENTER, Press.FINGER);  
}",,"    private static ViewAction swipeLeftCenter() {
        return new GeneralSwipeAction(Swipe.FAST, GeneralLocation.CENTER, GeneralLocation.CENTER_LEFT, Press.FINGER);
    }
",,"    private static ViewAction drag() {
        return new GeneralSwipeAction(Swipe.FAST, getCoordinates(0, 0),
                getCoordinates(500, 500), Press.FINGER);
    }
",,"  private static ViewAction swipeDown() {
    return new GeneralSwipeAction(Swipe.FAST, GeneralLocation.TOP_CENTER,
        GeneralLocation.BOTTOM_CENTER, Press.FINGER);
  }
",
"IllegalArgumentException: Could not locate call adapter for rx.Observable RxJava, Retrofit2","Retrofit retrofit = new Retrofit.Builder()
    .baseUrl(endpoint)
    .addConverterFactory(GsonConverterFactory.create())
    .addCallAdapterFactory(RxJavaCallAdapterFactory.create())
    .build();",,"    static Retrofit getRetrofitInstance(String baseUrl) {
        return new Retrofit.Builder().client(getOkHttpClient()).baseUrl(baseUrl)
                .addConverterFactory(GsonConverterFactory.create())
                .addCallAdapterFactory(RxJavaCallAdapterFactory.create()).build();
    }
",," private static Retrofit createRetrofit() {
  return new Retrofit.Builder()
    .baseUrl(Constants.BASE_URL)
    .addCallAdapterFactory(RxJavaCallAdapterFactory.create())
    .addConverterFactory(GsonConverterFactory.create()).build();
 }
",,"    public Retrofit buildApiRetrofit() {
        return new Retrofit.Builder()
                .baseUrl(Constants.API_URL_BASE)
                .addConverterFactory(GsonConverterFactory.create())
                .addCallAdapterFactory(RxJavaCallAdapterFactory.create())
                .build();
    }
",
"glide force load cached image, don't care what resolution","Glide.with(mContext)
   .load(url)
   .diskCacheStrategy(DiskCacheStrategy.SOURCE)
   .into(imageView);",,"    public static void intoWithCircle(Context context, File file, ImageView iv) {
        Glide.with(context).load(file).centerCrop().transform(new GlideCircleTransform(context)).diskCacheStrategy(DiskCacheStrategy.SOURCE).into(iv);
    }
",,"    public static void load(Context context, String url, ImageView iv) {            Glide.with(context).load(url).crossFade().diskCacheStrategy(DiskCacheStrategy.SOURCE).into(iv);
    }
",GlideImageView,,
Token null Sign-in Google Account,"GoogleSignInOptions gso = new GoogleSignInOptions.Builder(GoogleSignInOptions.DEFAULT_SIGN_IN)
                .requestIdToken(getString(R.string.default_web_client_id))
                .requestEmail()
                .build();",,,,"    public void initGoogleSingInClient() {
        GoogleSignInOptions gso = new GoogleSignInOptions.Builder(GoogleSignInOptions.DEFAULT_SIGN_IN)
                .requestIdToken(loginView.getAppContext().getString(R.string.default_web_client_id))
                .requestEmail()
                .build();
        mGoogleSignInClient = GoogleSignIn.getClient(loginView.getAppContext(), gso);
    }
",,"    GoogleSignInOptions googleSignInOptions(Context context) {
        return new GoogleSignInOptions
                .Builder(GoogleSignInOptions.DEFAULT_SIGN_IN)
                .requestIdToken(context.getString(R.string.default_web_client_id))
                .requestEmail()
                .build();
    }
",
Denied starting an intent without a user gesture Webview Android,"webView.setWebViewClient(new WebViewClient() {
    @Override
    public boolean shouldOverrideUrlLoading(WebView view, String url) {
        return false;                
    }
});",,"    private void startWebView(String setKey) {
        webView.setVisibility(View.VISIBLE);
        mMovieImage.setVisibility(View.GONE);
        webView.setWebViewClient(new WebViewClient(){
            @Override
            public boolean shouldOverrideUrlLoading(WebView view, String url) {
                return false;
            }
        });
        WebSettings webSettings = webView.getSettings();
        webSettings.setJavaScriptEnabled(true);
        webView.loadUrl( BASE_URL + setKey);
    }
",,"    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_new_page);
        WebView myWebView = (WebView) findViewById(R.id.webView);
        myWebView.loadUrl(""https:
        myWebView.setWebViewClient(new WebViewClient() {
            @Override
            public boolean shouldOverrideUrlLoading(WebView view, String url) {
                view.loadUrl(url);
                return false;
            }
        });
    }
",wwwbletchleyparkorguk,"    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_news_bletchley);

        WebView myWebView = (WebView) findViewById(R.id.webView);
        myWebView.loadUrl(""https:
        myWebView.setWebViewClient(new WebViewClient() {
            @Override
            public boolean shouldOverrideUrlLoading(WebView view, String url) {
                view.loadUrl(url);
                return false;
            }
        });
    }
",wwwbletchleyparkorguk
Check if RecyclerView is scrollable,"public boolean isRecyclerScrollable(RecyclerView recyclerView) {
    return recyclerView.computeHorizontalScrollRange() > recyclerView.getWidth() || recyclerView.computeVerticalScrollRange() > recyclerView.getHeight();
}",,"  public static boolean isScrollable(RecyclerView recyclerView) {
    return recyclerView.computeHorizontalScrollRange() > recyclerView.getWidth() ||
      recyclerView.computeVerticalScrollRange() > recyclerView.getHeight();
  }
",,"        public final int getTranslationBase(boolean isVertical) {
            return isVertical ?
                    recyclerView.computeVerticalScrollRange() - recyclerView.getHeight() :
                    recyclerView.computeHorizontalScrollRange() - recyclerView.getWidth();
        }
",,"        public final int getTranslationBase(boolean isVertical) {
            return isVertical ?
                    recyclerView.computeVerticalScrollRange() - recyclerView.getHeight() :
                    recyclerView.computeHorizontalScrollRange() - recyclerView.getWidth();
        }
",